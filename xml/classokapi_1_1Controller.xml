<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1Controller" kind="class" language="C++" prot="public">
    <compoundname>okapi::Controller</compoundname>
    <includes refid="controller_8hpp" local="no">controller.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classokapi_1_1Controller_1ac8676a8c87a223def0a78130a98ff785" prot="protected" static="no" mutable="no">
        <type><ref refid="namespaceokapi_1a56349a0562b06c6ffc742e94cb1e4361" kindref="member">ControllerId</ref></type>
        <definition>ControllerId okapi::Controller::okapiId</definition>
        <argsstring></argsstring>
        <name>okapiId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="115" column="1" bodyfile="include/okapi/impl/device/controller.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1Controller_1a3580b65b5bfe23f055d8174dd7b5b5bb" prot="protected" static="no" mutable="no">
        <type>pros::controller_id_e_t</type>
        <definition>pros::controller_id_e_t okapi::Controller::prosId</definition>
        <argsstring></argsstring>
        <name>prosId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="116" column="1" bodyfile="include/okapi/impl/device/controller.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1Controller_1a687a8678fd01b6d62f013b96c1cac6e4" prot="protected" static="no" mutable="no">
        <type>std::array&lt; <ref refid="classokapi_1_1ControllerButton" kindref="compound">ControllerButton</ref> *, 12 &gt;</type>
        <definition>std::array&lt;ControllerButton *, 12&gt; okapi::Controller::buttonArray</definition>
        <argsstring></argsstring>
        <name>buttonArray</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="117" column="1" bodyfile="include/okapi/impl/device/controller.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1Controller_1ab4fa918e91c0173123581cfe4dc9f5f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::Controller::Controller</definition>
        <argsstring>(ControllerId iid=ControllerId::master)</argsstring>
        <name>Controller</name>
        <param>
          <type><ref refid="namespaceokapi_1a56349a0562b06c6ffc742e94cb1e4361" kindref="member">ControllerId</ref></type>
          <declname>iid</declname>
          <defval><ref refid="namespaceokapi_1a56349a0562b06c6ffc742e94cb1e4361aeb0a191797624dd3a48fa681d3061212" kindref="member">ControllerId::master</ref></defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="18" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1ae624e3dccbefb1ff1126eaa142fd22c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>okapi::Controller::~Controller</definition>
        <argsstring>()</argsstring>
        <name>~Controller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="20" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1a0cad97dfa473a47c4c3551374eb96e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool okapi::Controller::isConnected</definition>
        <argsstring>()</argsstring>
        <name>isConnected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the controller is connected.</para>
<para><simplesect kind="return"><para>true if the controller is connected </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="27" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="19" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1a7ae83fb44a837512cffc9610403c3dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>float okapi::Controller::getAnalog</definition>
        <argsstring>(ControllerAnalog ichannel)</argsstring>
        <name>getAnalog</name>
        <param>
          <type><ref refid="namespaceokapi_1afcc83d6a64f075a4dba212ff612c31d0" kindref="member">ControllerAnalog</ref></type>
          <declname>ichannel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the current analog reading for the channel in the range [-1, 1]. Returns 0 if the controller is not connected.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ichannel</parametername>
</parameternamelist>
<parameterdescription>
<para>the channel to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the value of that channel in the range [-1, 1] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="36" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="24" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1ada8fab201fa8a46aa7b76487f1d7a546" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool okapi::Controller::getDigital</definition>
        <argsstring>(ControllerDigital ibutton)</argsstring>
        <name>getDigital</name>
        <param>
          <type><ref refid="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6" kindref="member">ControllerDigital</ref></type>
          <declname>ibutton</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the digital button is currently pressed. Returns false if the controller is not connected.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ibutton</parametername>
</parameternamelist>
<parameterdescription>
<para>the button to check </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the button is pressed, false if the controller is not connected </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="45" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1a88c9b0063ad8455840f9ac8c24610ff0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classokapi_1_1ControllerButton" kindref="compound">ControllerButton</ref> &amp;</type>
        <definition>ControllerButton &amp; okapi::Controller::operator[]</definition>
        <argsstring>(ControllerDigital ibtn)</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6" kindref="member">ControllerDigital</ref></type>
          <declname>ibtn</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classokapi_1_1ControllerButton" kindref="compound">ControllerButton</ref> for the given button on this controller.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ibtn</parametername>
</parameternamelist>
<parameterdescription>
<para>the button </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a <ref refid="classokapi_1_1ControllerButton" kindref="compound">ControllerButton</ref> on this controller </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="53" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="39" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1a91494385d809ca1f2c633ec231c44e07" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t okapi::Controller::setText</definition>
        <argsstring>(std::uint8_t iline, std::uint8_t icol, std::string itext)</argsstring>
        <name>setText</name>
        <param>
          <type>std::uint8_t</type>
          <declname>iline</declname>
        </param>
        <param>
          <type>std::uint8_t</type>
          <declname>icol</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>itext</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets text to the controller LCD screen.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iline</parametername>
</parameternamelist>
<parameterdescription>
<para>the line number in the range [0-2] at which the text will be displayed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>icol</parametername>
</parameternamelist>
<parameterdescription>
<para>the column number in the range [0-14] at which the text will be displayed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>itext</parametername>
</parameternamelist>
<parameterdescription>
<para>the string to display </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful, PROS_ERR otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="63" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="49" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1a3af0986bb6287c8e24847a8c12bfcd43" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t okapi::Controller::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears all of the lines of the controller screen.</para>
<para><simplesect kind="return"><para>1 if the operation was successful, PROS_ERR otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="70" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="53" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1a40e34b45b7730d4a5564e8eb8b48d345" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t okapi::Controller::clearLine</definition>
        <argsstring>(std::uint8_t iline)</argsstring>
        <name>clearLine</name>
        <param>
          <type>std::uint8_t</type>
          <declname>iline</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clears an individual line of the controller screen.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iline</parametername>
</parameternamelist>
<parameterdescription>
<para>the line number to clear in the range [0, 2]. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful, PROS_ERR otherwise </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="78" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="57" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1afd0897a60a74e0a47cd352cf92d573e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t okapi::Controller::rumble</definition>
        <argsstring>(std::string irumblePattern)</argsstring>
        <name>rumble</name>
        <param>
          <type>std::string</type>
          <declname>irumblePattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Rumble the controller.</para>
<para><ref refid="classokapi_1_1Controller" kindref="compound">Controller</ref> rumble activation is currently in beta, so continuous, fast updates will not work well.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>irumblePattern</parametername>
</parameternamelist>
<parameterdescription>
<para>A string consisting of the characters &apos;.&apos;, &apos;-&apos;, and &apos; &apos;, where dots are short rumbles, dashes are long rumbles, and spaces are pauses. Maximum supported length is 8 characters.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 if the operation was successful or PROS_ERR if the operation failed, setting errno. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="92" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1a0e4104d3a2d8aa24580f6848737dc061" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t okapi::Controller::getBatteryCapacity</definition>
        <argsstring>()</argsstring>
        <name>getBatteryCapacity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the battery capacity of the given controller.</para>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the controller port.</para>
<para><simplesect kind="return"><para>the controller&apos;s battery capacity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="102" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="65" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Controller_1a3fec254e343a9c6381b3c8066b7bb145" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::int32_t</type>
        <definition>std::int32_t okapi::Controller::getBatteryLevel</definition>
        <argsstring>()</argsstring>
        <name>getBatteryLevel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the battery level of the given controller.</para>
<para>This function uses the following values of errno when an error state is reached: EACCES - Another resource is currently trying to access the controller port.</para>
<para><simplesect kind="return"><para>the controller&apos;s battery level </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controller.hpp" line="112" column="1" bodyfile="src/impl/device/controller.cpp" bodystart="69" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/okapi/impl/device/controller.hpp" line="16" column="1" bodyfile="include/okapi/impl/device/controller.hpp" bodystart="16" bodyend="118"/>
    <listofallmembers>
      <member refid="classokapi_1_1Controller_1a687a8678fd01b6d62f013b96c1cac6e4" prot="protected" virt="non-virtual"><scope>okapi::Controller</scope><name>buttonArray</name></member>
      <member refid="classokapi_1_1Controller_1a3af0986bb6287c8e24847a8c12bfcd43" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>clear</name></member>
      <member refid="classokapi_1_1Controller_1a40e34b45b7730d4a5564e8eb8b48d345" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>clearLine</name></member>
      <member refid="classokapi_1_1Controller_1ab4fa918e91c0173123581cfe4dc9f5f6" prot="public" virt="non-virtual"><scope>okapi::Controller</scope><name>Controller</name></member>
      <member refid="classokapi_1_1Controller_1a7ae83fb44a837512cffc9610403c3dd6" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>getAnalog</name></member>
      <member refid="classokapi_1_1Controller_1a0e4104d3a2d8aa24580f6848737dc061" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>getBatteryCapacity</name></member>
      <member refid="classokapi_1_1Controller_1a3fec254e343a9c6381b3c8066b7bb145" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>getBatteryLevel</name></member>
      <member refid="classokapi_1_1Controller_1ada8fab201fa8a46aa7b76487f1d7a546" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>getDigital</name></member>
      <member refid="classokapi_1_1Controller_1a0cad97dfa473a47c4c3551374eb96e54" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>isConnected</name></member>
      <member refid="classokapi_1_1Controller_1ac8676a8c87a223def0a78130a98ff785" prot="protected" virt="non-virtual"><scope>okapi::Controller</scope><name>okapiId</name></member>
      <member refid="classokapi_1_1Controller_1a88c9b0063ad8455840f9ac8c24610ff0" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>operator[]</name></member>
      <member refid="classokapi_1_1Controller_1a3580b65b5bfe23f055d8174dd7b5b5bb" prot="protected" virt="non-virtual"><scope>okapi::Controller</scope><name>prosId</name></member>
      <member refid="classokapi_1_1Controller_1afd0897a60a74e0a47cd352cf92d573e3" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>rumble</name></member>
      <member refid="classokapi_1_1Controller_1a91494385d809ca1f2c633ec231c44e07" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>setText</name></member>
      <member refid="classokapi_1_1Controller_1ae624e3dccbefb1ff1126eaa142fd22c0" prot="public" virt="virtual"><scope>okapi::Controller</scope><name>~Controller</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
