<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1ChassisControllerPID" kind="class" language="C++" prot="public">
    <compoundname>okapi::ChassisControllerPID</compoundname>
    <basecompoundref refid="classokapi_1_1ChassisController" prot="public" virt="non-virtual">okapi::ChassisController</basecompoundref>
    <includes refid="chassisControllerPid_8hpp" local="no">chassisControllerPid.hpp</includes>
      <sectiondef kind="protected-type">
      <memberdef kind="enum" id="classokapi_1_1ChassisControllerPID_1a74792367688870f72f88c486c96b8368" prot="protected" static="no" strong="no">
        <type></type>
        <name>modeType</name>
        <enumvalue id="classokapi_1_1ChassisControllerPID_1a74792367688870f72f88c486c96b8368a8675301d26c1da1d766934478dd4a7cd" prot="protected">
          <name>distance</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classokapi_1_1ChassisControllerPID_1a74792367688870f72f88c486c96b8368acbd60074aa1c74a74fec252c3bb87acd" prot="protected">
          <name>angle</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="classokapi_1_1ChassisControllerPID_1a74792367688870f72f88c486c96b8368a7727725f70ef5c5845fdc2004c6cedd7" prot="protected">
          <name>none</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="237" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="237" bodyend="237"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a1ccab962675c8d76896f922abfa65e1d" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; okapi::ChassisControllerPID::logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="214" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="214" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a12fdde8486bd712e728b8e538a640387" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool okapi::ChassisControllerPID::normalTurns</definition>
        <argsstring></argsstring>
        <name>normalTurns</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="215" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="215" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a3a5e73a21423f3a278b2e3b891960c7d" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ChassisModel" kindref="compound">ChassisModel</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ChassisModel&gt; okapi::ChassisControllerPID::chassisModel</definition>
        <argsstring></argsstring>
        <name>chassisModel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="216" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="216" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a60df73805ef3747b6019303924e5ed18" prot="protected" static="no" mutable="no">
        <type><ref refid="classokapi_1_1TimeUtil" kindref="compound">TimeUtil</ref></type>
        <definition>TimeUtil okapi::ChassisControllerPID::timeUtil</definition>
        <argsstring></argsstring>
        <name>timeUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="217" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a130a3d5ecf1e9dbb0d6884e4378b1887" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classokapi_1_1IterativePosPIDController" kindref="compound">IterativePosPIDController</ref> &gt;</type>
        <definition>std::unique_ptr&lt;IterativePosPIDController&gt; okapi::ChassisControllerPID::distancePid</definition>
        <argsstring></argsstring>
        <name>distancePid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="218" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a7f2979d063746b740e848c0d640f6671" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classokapi_1_1IterativePosPIDController" kindref="compound">IterativePosPIDController</ref> &gt;</type>
        <definition>std::unique_ptr&lt;IterativePosPIDController&gt; okapi::ChassisControllerPID::turnPid</definition>
        <argsstring></argsstring>
        <name>turnPid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="219" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a22677f191a4014e51f4f133d56d3bc76" prot="protected" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classokapi_1_1IterativePosPIDController" kindref="compound">IterativePosPIDController</ref> &gt;</type>
        <definition>std::unique_ptr&lt;IterativePosPIDController&gt; okapi::ChassisControllerPID::anglePid</definition>
        <argsstring></argsstring>
        <name>anglePid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="220" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="220" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1acecccb0badc5500ab3220b446eb36f1b" prot="protected" static="no" mutable="no">
        <type><ref refid="classokapi_1_1ChassisScales" kindref="compound">ChassisScales</ref></type>
        <definition>ChassisScales okapi::ChassisControllerPID::scales</definition>
        <argsstring></argsstring>
        <name>scales</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="221" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a9ad9dd6347f6c32cbe515a6c926570be" prot="protected" static="no" mutable="no">
        <type><ref refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair" kindref="compound">AbstractMotor::GearsetRatioPair</ref></type>
        <definition>AbstractMotor::GearsetRatioPair okapi::ChassisControllerPID::gearsetRatioPair</definition>
        <argsstring></argsstring>
        <name>gearsetRatioPair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="222" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="222" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1ac1ef51ed33571d43c8bf0b3fe3aff870" prot="protected" static="no" mutable="no">
        <type>bool</type>
        <definition>bool okapi::ChassisControllerPID::velocityMode</definition>
        <argsstring></argsstring>
        <name>velocityMode</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="223" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="223" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a73bdaf994929f7d81064159fba42a79f" prot="protected" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool okapi::ChassisControllerPID::doneLooping</definition>
        <argsstring></argsstring>
        <name>doneLooping</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="224" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1adc188c906f490119862f2de950a620d9" prot="protected" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool okapi::ChassisControllerPID::doneLoopingSeen</definition>
        <argsstring></argsstring>
        <name>doneLoopingSeen</name>
        <initializer>{true}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="225" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="225" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1ad83f673aa55a0d76854421ba49716e00" prot="protected" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool okapi::ChassisControllerPID::newMovement</definition>
        <argsstring></argsstring>
        <name>newMovement</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="226" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="226" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a169c997aacc8ece4c23a87813bcdc0f2" prot="protected" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool okapi::ChassisControllerPID::dtorCalled</definition>
        <argsstring></argsstring>
        <name>dtorCalled</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="227" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1abf4470c68c13038a86223777262e0cda" prot="protected" static="no" mutable="no">
        <type>QTime</type>
        <definition>QTime okapi::ChassisControllerPID::threadSleepTime</definition>
        <argsstring></argsstring>
        <name>threadSleepTime</name>
        <initializer>{10_ms}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="228" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="228" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1a62145d8e5be9b686b55bd63acc4bc5e7" prot="protected" static="no" mutable="no">
        <type><ref refid="classokapi_1_1ChassisControllerPID_1a74792367688870f72f88c486c96b8368" kindref="member">modeType</ref></type>
        <definition>modeType okapi::ChassisControllerPID::mode</definition>
        <argsstring></argsstring>
        <name>mode</name>
        <initializer>{<ref refid="classokapi_1_1ChassisControllerPID_1a74792367688870f72f88c486c96b8368a7727725f70ef5c5845fdc2004c6cedd7" kindref="member">none</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="238" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="238" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisControllerPID_1ade2afa27a8ddb659ab00d714f2503722" prot="protected" static="no" mutable="no">
        <type><ref refid="classCrossplatformThread" kindref="compound">CrossplatformThread</ref> *</type>
        <definition>CrossplatformThread* okapi::ChassisControllerPID::task</definition>
        <argsstring></argsstring>
        <name>task</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="240" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="240" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1ab11bd00c672aa7e9d93e313e00deb1b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::ChassisControllerPID::ChassisControllerPID</definition>
        <argsstring>(TimeUtil itimeUtil, std::shared_ptr&lt; ChassisModel &gt; imodel, std::unique_ptr&lt; IterativePosPIDController &gt; idistanceController, std::unique_ptr&lt; IterativePosPIDController &gt; iturnController, std::unique_ptr&lt; IterativePosPIDController &gt; iangleController, const AbstractMotor::GearsetRatioPair &amp;igearset=AbstractMotor::gearset::green, const ChassisScales &amp;iscales=ChassisScales({1, 1}, imev5GreenTPR), std::shared_ptr&lt; Logger &gt; ilogger=Logger::getDefaultLogger())</argsstring>
        <name>ChassisControllerPID</name>
        <param>
          <type><ref refid="classokapi_1_1TimeUtil" kindref="compound">TimeUtil</ref></type>
          <declname>itimeUtil</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ChassisModel" kindref="compound">ChassisModel</ref> &gt;</type>
          <declname>imodel</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classokapi_1_1IterativePosPIDController" kindref="compound">IterativePosPIDController</ref> &gt;</type>
          <declname>idistanceController</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classokapi_1_1IterativePosPIDController" kindref="compound">IterativePosPIDController</ref> &gt;</type>
          <declname>iturnController</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classokapi_1_1IterativePosPIDController" kindref="compound">IterativePosPIDController</ref> &gt;</type>
          <declname>iangleController</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair" kindref="compound">AbstractMotor::GearsetRatioPair</ref> &amp;</type>
          <declname>igearset</declname>
          <defval><ref refid="classokapi_1_1AbstractMotor_1a88aaa6ea2fa10f5520a537bbf26774d5a9f27410725ab8cc8854a2769c7a516b8" kindref="member">AbstractMotor::gearset::green</ref></defval>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1ChassisScales" kindref="compound">ChassisScales</ref> &amp;</type>
          <declname>iscales</declname>
          <defval><ref refid="classokapi_1_1ChassisScales" kindref="compound">ChassisScales</ref>({1, 1}, <ref refid="namespaceokapi_1a5263bab3bfecd482a573b6d04fb584ac" kindref="member">imev5GreenTPR</ref>)</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt;</type>
          <declname>ilogger</declname>
          <defval><ref refid="classokapi_1_1Logger_1a5053cf778b4b55acba788a3797dc96d2" kindref="member">Logger::getDefaultLogger</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref> using PID control. Puts the motors into encoder count units. Throws a <computeroutput>std::invalid_argument</computeroutput> exception if the gear ratio is zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itimeUtil</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classokapi_1_1TimeUtil" kindref="compound">TimeUtil</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imodel</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classokapi_1_1ChassisModel" kindref="compound">ChassisModel</ref> used to read from sensors/write to motors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idistanceController</parametername>
</parameternamelist>
<parameterdescription>
<para>The PID controller that controls chassis distance for driving straight. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iturnController</parametername>
</parameternamelist>
<parameterdescription>
<para>The PID controller that controls chassis angle for turning. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iangleController</parametername>
</parameternamelist>
<parameterdescription>
<para>The PID controller that controls chassis angle for driving straight. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>igearset</parametername>
</parameternamelist>
<parameterdescription>
<para>The internal gearset and external ratio used on the drive motors. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iscales</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classokapi_1_1ChassisScales" kindref="compound">ChassisScales</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ilogger</parametername>
</parameternamelist>
<parameterdescription>
<para>The logger this instance will log to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="36" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="14" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a25b31c86a76d08d4f58c6efdb8c7ee57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::ChassisControllerPID::ChassisControllerPID</definition>
        <argsstring>(const ChassisControllerPID &amp;)=delete</argsstring>
        <name>ChassisControllerPID</name>
        <param>
          <type>const <ref refid="classokapi_1_1ChassisControllerPID" kindref="compound">ChassisControllerPID</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1ae486bf897f588847f5f8d8ba4248da88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::ChassisControllerPID::ChassisControllerPID</definition>
        <argsstring>(ChassisControllerPID &amp;&amp;other)=delete</argsstring>
        <name>ChassisControllerPID</name>
        <param>
          <type><ref refid="classokapi_1_1ChassisControllerPID" kindref="compound">ChassisControllerPID</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1ad3c879b42ad7f5a0d05b2799a9e5c3dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1ChassisControllerPID" kindref="compound">ChassisControllerPID</ref> &amp;</type>
        <definition>ChassisControllerPID&amp; okapi::ChassisControllerPID::operator=</definition>
        <argsstring>(const ChassisControllerPID &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classokapi_1_1ChassisControllerPID" kindref="compound">ChassisControllerPID</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a395bac44038870d7aeae2a950e675617" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1ChassisControllerPID" kindref="compound">ChassisControllerPID</ref> &amp;</type>
        <definition>ChassisControllerPID&amp; okapi::ChassisControllerPID::operator=</definition>
        <argsstring>(ChassisControllerPID &amp;&amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classokapi_1_1ChassisControllerPID" kindref="compound">ChassisControllerPID</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a89f64eec355595eaa2631305805efdb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::ChassisControllerPID::~ChassisControllerPID</definition>
        <argsstring>() override</argsstring>
        <name>~ChassisControllerPID</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="51" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1ab5f0409c6add9b1c3b176b61643de067" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::moveDistance</definition>
        <argsstring>(QLength itarget) override</argsstring>
        <name>moveDistance</name>
        <reimplements refid="classokapi_1_1ChassisController_1a6d5b69139dfa8b814d05c74c22bcaa43">moveDistance</reimplements>
        <param>
          <type>QLength</type>
          <declname>itarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drives the robot straight for a distance (using closed-loop control).</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Drive<sp/>forward<sp/>6<sp/>inches</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">chassis-&gt;moveDistance(6_in);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">//<sp/>Drive<sp/>backward<sp/>0.2<sp/>meters</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">chassis-&gt;moveDistance(-0.2_m);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itarget</parametername>
</parameternamelist>
<parameterdescription>
<para>distance to travel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="66" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="141" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a711b80afa09a80233372cc37267606d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::moveDistance</definition>
        <argsstring>(double itarget) override</argsstring>
        <name>moveDistance</name>
        <reimplements refid="classokapi_1_1ChassisController_1a58619e777fd1b3f8e1aae871d46a8ccf">moveDistance</reimplements>
        <param>
          <type>double</type>
          <declname>itarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drives the robot straight for a distance (using closed-loop control).</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Drive<sp/>forward<sp/>by<sp/>spinning<sp/>the<sp/>motors<sp/>400<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">chassis-&gt;moveDistance(400);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itarget</parametername>
</parameternamelist>
<parameterdescription>
<para>distance to travel in motor degrees </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="78" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1affad4aa1b0bd54db728ac600493a6c4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::moveDistanceAsync</definition>
        <argsstring>(QLength itarget) override</argsstring>
        <name>moveDistanceAsync</name>
        <reimplements refid="classokapi_1_1ChassisController_1a67a17268b871a4f1ae74d67891cbf5dd">moveDistanceAsync</reimplements>
        <param>
          <type>QLength</type>
          <declname>itarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the target distance for the robot to drive straight (using closed-loop control).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itarget</parametername>
</parameternamelist>
<parameterdescription>
<para>distance to travel </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="85" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="115" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a7a13b5cd2fe7bce73cf0e3a3144fe6db" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::moveDistanceAsync</definition>
        <argsstring>(double itarget) override</argsstring>
        <name>moveDistanceAsync</name>
        <reimplements refid="classokapi_1_1ChassisController_1a24b46ec1c42f32c0527d57738a07820a">moveDistanceAsync</reimplements>
        <param>
          <type>double</type>
          <declname>itarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the target distance for the robot to drive straight (using closed-loop control).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itarget</parametername>
</parameternamelist>
<parameterdescription>
<para>distance to travel in motor degrees </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="92" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a56aae5a15daa9ed81963dd48fce69535" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::turnAngle</definition>
        <argsstring>(QAngle idegTarget) override</argsstring>
        <name>turnAngle</name>
        <reimplements refid="classokapi_1_1ChassisController_1aab12308b3fad6793c007d7a33730a3f7">turnAngle</reimplements>
        <param>
          <type>QAngle</type>
          <declname>idegTarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turns the robot clockwise in place (using closed-loop control).</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Turn<sp/>90<sp/>degrees<sp/>clockwise</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">chassis-&gt;turnAngle(90_deg);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idegTarget</parametername>
</parameternamelist>
<parameterdescription>
<para>angle to turn for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="104" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="177" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a140679da584fdc8bd057678e277742e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::turnAngle</definition>
        <argsstring>(double idegTarget) override</argsstring>
        <name>turnAngle</name>
        <reimplements refid="classokapi_1_1ChassisController_1a6aca227e35ececd02eed1cc42d09ad1d">turnAngle</reimplements>
        <param>
          <type>double</type>
          <declname>idegTarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turns the robot clockwise in place (using closed-loop control).</para>
<para><programlisting filename=".cpp"><codeline><highlight class="comment">//<sp/>Turn<sp/>clockwise<sp/>by<sp/>spinning<sp/>the<sp/>motors<sp/>200<sp/>degrees</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">chassis-&gt;turnAngle(200);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idegTarget</parametername>
</parameternamelist>
<parameterdescription>
<para>angle to turn for in motor degrees </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="116" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="182" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a391c12c7b3cb5461cd28c4aebc4aeab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::turnAngleAsync</definition>
        <argsstring>(QAngle idegTarget) override</argsstring>
        <name>turnAngleAsync</name>
        <reimplements refid="classokapi_1_1ChassisController_1a87fc1f88bf06340d8f022a8c185b5e87">turnAngleAsync</reimplements>
        <param>
          <type>QAngle</type>
          <declname>idegTarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the target angle for the robot to turn clockwise in place (using closed-loop control).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idegTarget</parametername>
</parameternamelist>
<parameterdescription>
<para>angle to turn for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="123" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="151" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a3a16a11e8b0e11dbfb2a03b5685e509b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::turnAngleAsync</definition>
        <argsstring>(double idegTarget) override</argsstring>
        <name>turnAngleAsync</name>
        <reimplements refid="classokapi_1_1ChassisController_1a35cadd99478629637b4bd3a5e709871a">turnAngleAsync</reimplements>
        <param>
          <type>double</type>
          <declname>idegTarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the target angle for the robot to turn clockwise in place (using closed-loop control).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idegTarget</parametername>
</parameternamelist>
<parameterdescription>
<para>angle to turn for in motor degrees </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="130" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a1e68419f6e695fd35576a6d886618741" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::setTurnsMirrored</definition>
        <argsstring>(bool ishouldMirror) override</argsstring>
        <name>setTurnsMirrored</name>
        <reimplements refid="classokapi_1_1ChassisController_1a37ae36ec8936272eb31e3baed7eed417">setTurnsMirrored</reimplements>
        <param>
          <type>bool</type>
          <declname>ishouldMirror</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether turns should be mirrored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ishouldMirror</parametername>
</parameternamelist>
<parameterdescription>
<para>whether turns should be mirrored </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="137" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a964cc8132bfa76492df0ee06aadb255a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::waitUntilSettled</definition>
        <argsstring>() override</argsstring>
        <name>waitUntilSettled</name>
        <reimplements refid="classokapi_1_1ChassisController_1a01ed4e0eb7332cc149228387bbf1e91c">waitUntilSettled</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Delays until the currently executing movement completes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="142" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="191" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a75f4e1b26f2440ac4066fd740dee7b13" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classokapi_1_1ChassisScales" kindref="compound">ChassisScales</ref></type>
        <definition>ChassisScales okapi::ChassisControllerPID::getChassisScales</definition>
        <argsstring>() const override</argsstring>
        <name>getChassisScales</name>
        <reimplements refid="classokapi_1_1ChassisController_1a0a8e32fc7adad8567f550954505aaa06">getChassisScales</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the <ref refid="classokapi_1_1ChassisScales" kindref="compound">ChassisScales</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="147" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="284" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a50673f2911c969e2f6e89b02a29ce582" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair" kindref="compound">AbstractMotor::GearsetRatioPair</ref></type>
        <definition>AbstractMotor::GearsetRatioPair okapi::ChassisControllerPID::getGearsetRatioPair</definition>
        <argsstring>() const override</argsstring>
        <name>getGearsetRatioPair</name>
        <reimplements refid="classokapi_1_1ChassisController_1aa19351888b997d4a6596dac24520ebff">getGearsetRatioPair</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the GearsetRatioPair. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="152" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="288" bodyend="290"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a2325280ebca6ddc45fe6bc197b0dcb00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::setVelocityMode</definition>
        <argsstring>(bool ivelocityMode)</argsstring>
        <name>setVelocityMode</name>
        <param>
          <type>bool</type>
          <declname>ivelocityMode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the velocity mode flag. When the controller is in velocity mode, the control loop will set motor velocities. When the controller is in voltage mode (<computeroutput>ivelocityMode = false</computeroutput>), the control loop will set motor voltages. Additionally, when the controller is in voltage mode, it will not obey maximum velocity limits.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ivelocityMode</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether the controller should be in velocity or voltage mode. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="162" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="292" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a0ca6f7a6fd0da41031681d09614a8837" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::setGains</definition>
        <argsstring>(const IterativePosPIDController::Gains &amp;idistanceGains, const IterativePosPIDController::Gains &amp;iturnGains, const IterativePosPIDController::Gains &amp;iangleGains)</argsstring>
        <name>setGains</name>
        <param>
          <type>const <ref refid="structokapi_1_1IterativePosPIDController_1_1Gains" kindref="compound">IterativePosPIDController::Gains</ref> &amp;</type>
          <declname>idistanceGains</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1IterativePosPIDController_1_1Gains" kindref="compound">IterativePosPIDController::Gains</ref> &amp;</type>
          <declname>iturnGains</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1IterativePosPIDController_1_1Gains" kindref="compound">IterativePosPIDController::Gains</ref> &amp;</type>
          <declname>iangleGains</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the gains for all controllers.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idistanceGains</parametername>
</parameternamelist>
<parameterdescription>
<para>The distance controller gains. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iturnGains</parametername>
</parameternamelist>
<parameterdescription>
<para>The turn controller gains. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iangleGains</parametername>
</parameternamelist>
<parameterdescription>
<para>The angle controller gains. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="171" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="296" bodyend="302"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1ae158a6b789d5a8ce97391d7251ee936a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="structokapi_1_1IterativePosPIDController_1_1Gains" kindref="compound">IterativePosPIDController::Gains</ref>, <ref refid="structokapi_1_1IterativePosPIDController_1_1Gains" kindref="compound">IterativePosPIDController::Gains</ref>, <ref refid="structokapi_1_1IterativePosPIDController_1_1Gains" kindref="compound">IterativePosPIDController::Gains</ref> &gt;</type>
        <definition>std::tuple&lt; IterativePosPIDController::Gains, IterativePosPIDController::Gains, IterativePosPIDController::Gains &gt; okapi::ChassisControllerPID::getGains</definition>
        <argsstring>() const</argsstring>
        <name>getGains</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the current controller gains.</para>
<para><simplesect kind="return"><para>The current controller gains in the order: distance, turn, angle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="183" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="307" bodyend="309"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1aaf7664abcf588a985bb8755df62eacd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::startThread</definition>
        <argsstring>()</argsstring>
        <name>startThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the internal thread. This method is called by the <ref refid="classokapi_1_1ChassisControllerBuilder" kindref="compound">ChassisControllerBuilder</ref> when making a new instance of this class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="189" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="311" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a1f46569d95876a690e99048e0fd9935e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCrossplatformThread" kindref="compound">CrossplatformThread</ref> *</type>
        <definition>CrossplatformThread * okapi::ChassisControllerPID::getThread</definition>
        <argsstring>() const</argsstring>
        <name>getThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the underlying thread handle.</para>
<para><simplesect kind="return"><para>The underlying thread handle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="196" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="317" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a852462fc20fb2322bbb3fd984b01a121" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::stop</definition>
        <argsstring>() override</argsstring>
        <name>stop</name>
        <reimplements refid="classokapi_1_1ChassisController_1ac67edbbbe1c8480c4503b9875a3719cd">stop</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Interrupts the current movement to stop the robot. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="201" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="321" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1adffe6c9a65b6bd7664e0a884638d9097" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ChassisModel" kindref="compound">ChassisModel</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ChassisModel &gt; okapi::ChassisControllerPID::getModel</definition>
        <argsstring>() override</argsstring>
        <name>getModel</name>
        <reimplements refid="classokapi_1_1ChassisController_1a1971d4b54b61718437824c026aca53c9">getModel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The internal <ref refid="classokapi_1_1ChassisModel" kindref="compound">ChassisModel</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="206" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="330" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a225446cae7b569ff104d41d9aa2ae9b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classokapi_1_1ChassisModel" kindref="compound">ChassisModel</ref> &amp;</type>
        <definition>ChassisModel &amp; okapi::ChassisControllerPID::model</definition>
        <argsstring>() override</argsstring>
        <name>model</name>
        <reimplements refid="classokapi_1_1ChassisController_1a239802eda7e4317a65d1a04994f7b97e">model</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The internal <ref refid="classokapi_1_1ChassisModel" kindref="compound">ChassisModel</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="211" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="334" bodyend="336"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1ad0b7cbee2a31e88fdd4e003aea19898e" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::trampoline</definition>
        <argsstring>(void *context)</argsstring>
        <name>trampoline</name>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="230" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="109" bodyend="113"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1ab78f673aa582db34b374f0fb6398be9e" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>doneLooping is set to false by moveDistanceAsync and turnAngleAsync and then set to true by waitUntilSettled</para>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="231" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="47" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a991349bc2dad71324203d4b298edd845" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool okapi::ChassisControllerPID::waitForDistanceSettled</definition>
        <argsstring>()</argsstring>
        <name>waitForDistanceSettled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wait for the distance setup (distancePid and anglePid) to settle.</para>
<para><simplesect kind="return"><para>true if done settling; false if settling should be tried again </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="233" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="234" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1a736ca24bff70d502f5ff724ed88f9f62" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool okapi::ChassisControllerPID::waitForAngleSettled</definition>
        <argsstring>()</argsstring>
        <name>waitForAngleSettled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wait for the angle setup (anglePid) to settle.</para>
<para><simplesect kind="return"><para>true if done settling; false if settling should be tried again </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="234" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="258" bodyend="275"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisControllerPID_1ac8dffc9df4025ece0303194a0fbc58ff" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::ChassisControllerPID::stopAfterSettled</definition>
        <argsstring>()</argsstring>
        <name>stopAfterSettled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="235" column="1" bodyfile="src/api/chassis/controller/chassisControllerPid.cpp" bodystart="277" bodyend="282"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="218">
        <label>okapi::ChassisControllerPID</label>
        <link refid="classokapi_1_1ChassisControllerPID"/>
        <childnode refid="219" relation="public-inheritance">
        </childnode>
      </node>
      <node id="219">
        <label>okapi::ChassisController</label>
        <link refid="classokapi_1_1ChassisController"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="226">
        <label>okapi::Supplier&lt; std::unique_ptr&lt; okapi::AbstractRate &gt; &gt;</label>
        <link refid="classokapi_1_1Supplier"/>
      </node>
      <node id="220">
        <label>okapi::ChassisControllerPID</label>
        <link refid="classokapi_1_1ChassisControllerPID"/>
        <childnode refid="221" relation="public-inheritance">
        </childnode>
        <childnode refid="222" relation="usage">
          <edgelabel>gearsetRatioPair</edgelabel>
        </childnode>
        <childnode refid="223" relation="usage">
          <edgelabel>task</edgelabel>
        </childnode>
        <childnode refid="224" relation="usage">
          <edgelabel>scales</edgelabel>
        </childnode>
        <childnode refid="225" relation="usage">
          <edgelabel>timeUtil</edgelabel>
        </childnode>
      </node>
      <node id="228">
        <label>okapi::Supplier&lt; std::unique_ptr&lt; okapi::AbstractTimer &gt; &gt;</label>
        <link refid="classokapi_1_1Supplier"/>
      </node>
      <node id="222">
        <label>okapi::AbstractMotor::GearsetRatioPair</label>
        <link refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair"/>
      </node>
      <node id="225">
        <label>okapi::TimeUtil</label>
        <link refid="classokapi_1_1TimeUtil"/>
        <childnode refid="226" relation="usage">
          <edgelabel>rateSupplier</edgelabel>
        </childnode>
        <childnode refid="227" relation="usage">
          <edgelabel>settledUtilSupplier</edgelabel>
        </childnode>
        <childnode refid="228" relation="usage">
          <edgelabel>timerSupplier</edgelabel>
        </childnode>
      </node>
      <node id="227">
        <label>okapi::Supplier&lt; std::unique_ptr&lt; okapi::SettledUtil &gt; &gt;</label>
        <link refid="classokapi_1_1Supplier"/>
      </node>
      <node id="221">
        <label>okapi::ChassisController</label>
        <link refid="classokapi_1_1ChassisController"/>
      </node>
      <node id="224">
        <label>okapi::ChassisScales</label>
        <link refid="classokapi_1_1ChassisScales"/>
      </node>
      <node id="223">
        <label>CrossplatformThread</label>
        <link refid="classCrossplatformThread"/>
      </node>
    </collaborationgraph>
    <location file="include/okapi/api/chassis/controller/chassisControllerPid.hpp" line="20" column="1" bodyfile="include/okapi/api/chassis/controller/chassisControllerPid.hpp" bodystart="20" bodyend="241"/>
    <listofallmembers>
      <member refid="classokapi_1_1ChassisControllerPID_1a74792367688870f72f88c486c96b8368acbd60074aa1c74a74fec252c3bb87acd" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>angle</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a22677f191a4014e51f4f133d56d3bc76" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>anglePid</name></member>
      <member refid="classokapi_1_1ChassisController_1a8a4a431cb9da03a1c84e600dc0e31333" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>ChassisController</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ab11bd00c672aa7e9d93e313e00deb1b6" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>ChassisControllerPID</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a25b31c86a76d08d4f58c6efdb8c7ee57" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>ChassisControllerPID</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ae486bf897f588847f5f8d8ba4248da88" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>ChassisControllerPID</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a3a5e73a21423f3a278b2e3b891960c7d" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>chassisModel</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a74792367688870f72f88c486c96b8368a8675301d26c1da1d766934478dd4a7cd" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>distance</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a130a3d5ecf1e9dbb0d6884e4378b1887" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>distancePid</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a73bdaf994929f7d81064159fba42a79f" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>doneLooping</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1adc188c906f490119862f2de950a620d9" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>doneLoopingSeen</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a169c997aacc8ece4c23a87813bcdc0f2" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>dtorCalled</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a9ad9dd6347f6c32cbe515a6c926570be" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>gearsetRatioPair</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a75f4e1b26f2440ac4066fd740dee7b13" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>getChassisScales</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ae158a6b789d5a8ce97391d7251ee936a" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>getGains</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a50673f2911c969e2f6e89b02a29ce582" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>getGearsetRatioPair</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1adffe6c9a65b6bd7664e0a884638d9097" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>getModel</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a1f46569d95876a690e99048e0fd9935e" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>getThread</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a1ccab962675c8d76896f922abfa65e1d" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>logger</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ab78f673aa582db34b374f0fb6398be9e" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>loop</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a62145d8e5be9b686b55bd63acc4bc5e7" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>mode</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a225446cae7b569ff104d41d9aa2ae9b8" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>model</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a74792367688870f72f88c486c96b8368" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>modeType</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ab5f0409c6add9b1c3b176b61643de067" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>moveDistance</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a711b80afa09a80233372cc37267606d5" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>moveDistance</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1affad4aa1b0bd54db728ac600493a6c4c" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>moveDistanceAsync</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a7a13b5cd2fe7bce73cf0e3a3144fe6db" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>moveDistanceAsync</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ad83f673aa55a0d76854421ba49716e00" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>newMovement</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a74792367688870f72f88c486c96b8368a7727725f70ef5c5845fdc2004c6cedd7" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>none</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a12fdde8486bd712e728b8e538a640387" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>normalTurns</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ad3c879b42ad7f5a0d05b2799a9e5c3dd" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>operator=</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a395bac44038870d7aeae2a950e675617" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>operator=</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1acecccb0badc5500ab3220b446eb36f1b" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>scales</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a0ca6f7a6fd0da41031681d09614a8837" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>setGains</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a1e68419f6e695fd35576a6d886618741" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>setTurnsMirrored</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a2325280ebca6ddc45fe6bc197b0dcb00" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>setVelocityMode</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1aaf7664abcf588a985bb8755df62eacd9" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>startThread</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a852462fc20fb2322bbb3fd984b01a121" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>stop</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ac8dffc9df4025ece0303194a0fbc58ff" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>stopAfterSettled</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ade2afa27a8ddb659ab00d714f2503722" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>task</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1abf4470c68c13038a86223777262e0cda" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>threadSleepTime</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a60df73805ef3747b6019303924e5ed18" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>timeUtil</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ad0b7cbee2a31e88fdd4e003aea19898e" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>trampoline</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a56aae5a15daa9ed81963dd48fce69535" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>turnAngle</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a140679da584fdc8bd057678e277742e7" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>turnAngle</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a391c12c7b3cb5461cd28c4aebc4aeab0" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>turnAngleAsync</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a3a16a11e8b0e11dbfb2a03b5685e509b" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>turnAngleAsync</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a7f2979d063746b740e848c0d640f6671" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>turnPid</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1ac1ef51ed33571d43c8bf0b3fe3aff870" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>velocityMode</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a736ca24bff70d502f5ff724ed88f9f62" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>waitForAngleSettled</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a991349bc2dad71324203d4b298edd845" prot="protected" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>waitForDistanceSettled</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a964cc8132bfa76492df0ee06aadb255a" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>waitUntilSettled</name></member>
      <member refid="classokapi_1_1ChassisController_1a886a1cfbd9430fb2fbe177bc4d4ab392" prot="public" virt="virtual"><scope>okapi::ChassisControllerPID</scope><name>~ChassisController</name></member>
      <member refid="classokapi_1_1ChassisControllerPID_1a89f64eec355595eaa2631305805efdb5" prot="public" virt="non-virtual"><scope>okapi::ChassisControllerPID</scope><name>~ChassisControllerPID</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
