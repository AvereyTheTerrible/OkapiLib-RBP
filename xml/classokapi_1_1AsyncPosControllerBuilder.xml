<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1AsyncPosControllerBuilder" kind="class" language="C++" prot="public">
    <compoundname>okapi::AsyncPosControllerBuilder</compoundname>
    <includes refid="asyncPosControllerBuilder_8hpp" local="no">asyncPosControllerBuilder.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1a471566054045a99a4be0600efdc75ffd" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; okapi::AsyncPosControllerBuilder::logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="141" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1a9088be3b2b7a057bf5ea86222a7b3d79" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool okapi::AsyncPosControllerBuilder::hasMotors</definition>
        <argsstring></argsstring>
        <name>hasMotors</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="143" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1aa0a307e36a30a862ec42ac25d388d029" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1AbstractMotor" kindref="compound">AbstractMotor</ref> &gt;</type>
        <definition>std::shared_ptr&lt;AbstractMotor&gt; okapi::AsyncPosControllerBuilder::motor</definition>
        <argsstring></argsstring>
        <name>motor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="144" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1ab46ebc95361486cf59aa0969706b693e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool okapi::AsyncPosControllerBuilder::sensorsSetByUser</definition>
        <argsstring></argsstring>
        <name>sensorsSetByUser</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="146" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="146" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1a7863e4cdd84a2272e950782e97a9d81c" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1RotarySensor" kindref="compound">RotarySensor</ref> &gt;</type>
        <definition>std::shared_ptr&lt;RotarySensor&gt; okapi::AsyncPosControllerBuilder::sensor</definition>
        <argsstring></argsstring>
        <name>sensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="147" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1a2abb689f36cb17a743ea939a8f41df01" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool okapi::AsyncPosControllerBuilder::hasGains</definition>
        <argsstring></argsstring>
        <name>hasGains</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="149" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1a69a73a5efa9aa583b4e1558a979c0371" prot="private" static="no" mutable="no">
        <type><ref refid="structokapi_1_1IterativePosPIDController_1_1Gains" kindref="compound">IterativePosPIDController::Gains</ref></type>
        <definition>IterativePosPIDController::Gains okapi::AsyncPosControllerBuilder::gains</definition>
        <argsstring></argsstring>
        <name>gains</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="150" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1a3785d31b1b124fe4dbfd1438f083184c" prot="private" static="no" mutable="no">
        <type>std::unique_ptr&lt; <ref refid="classokapi_1_1Filter" kindref="compound">Filter</ref> &gt;</type>
        <definition>std::unique_ptr&lt;Filter&gt; okapi::AsyncPosControllerBuilder::derivativeFilter</definition>
        <argsstring></argsstring>
        <name>derivativeFilter</name>
        <initializer>= std::make_unique&lt;<ref refid="classokapi_1_1PassthroughFilter" kindref="compound">PassthroughFilter</ref>&gt;()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="151" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1a53969affafb0827f4ebe0cdee6c790c8" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool okapi::AsyncPosControllerBuilder::gearsetSetByUser</definition>
        <argsstring></argsstring>
        <name>gearsetSetByUser</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="153" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1aadfd487eae4403f37eb5bcf773349f66" prot="private" static="no" mutable="no">
        <type><ref refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair" kindref="compound">AbstractMotor::GearsetRatioPair</ref></type>
        <definition>AbstractMotor::GearsetRatioPair okapi::AsyncPosControllerBuilder::pair</definition>
        <argsstring></argsstring>
        <name>pair</name>
        <initializer>{<ref refid="classokapi_1_1AbstractMotor_1a88aaa6ea2fa10f5520a537bbf26774d5afedb2d84cafe20862cb4399751a8a7e3" kindref="member">AbstractMotor::gearset::invalid</ref>}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="154" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="154" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1ad8f7b65ac90d0d67c4190ce0c9034d0e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool okapi::AsyncPosControllerBuilder::maxVelSetByUser</definition>
        <argsstring></argsstring>
        <name>maxVelSetByUser</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="156" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1a4c2b4407896042ffe40ab16454f100f5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::AsyncPosControllerBuilder::maxVelocity</definition>
        <argsstring></argsstring>
        <name>maxVelocity</name>
        <initializer>{600}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="157" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1af7a94a801d11ae68c580f9ccd7d5b4b9" prot="private" static="no" mutable="no">
        <type><ref refid="classokapi_1_1TimeUtilFactory" kindref="compound">TimeUtilFactory</ref></type>
        <definition>TimeUtilFactory okapi::AsyncPosControllerBuilder::timeUtilFactory</definition>
        <argsstring></argsstring>
        <name>timeUtilFactory</name>
        <initializer>= <ref refid="classokapi_1_1TimeUtilFactory" kindref="compound">TimeUtilFactory</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="159" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncPosControllerBuilder_1affbd38937b9e8f2881b01e0d96fc989a" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; okapi::AsyncPosControllerBuilder::controllerLogger</definition>
        <argsstring></argsstring>
        <name>controllerLogger</name>
        <initializer>= <ref refid="classokapi_1_1Logger_1a5053cf778b4b55acba788a3797dc96d2" kindref="member">Logger::getDefaultLogger</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="160" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1ab5016bcf0679d7bae87d19d21cbff95f" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::AsyncPosControllerBuilder::AsyncPosControllerBuilder</definition>
        <argsstring>(const std::shared_ptr&lt; Logger &gt; &amp;ilogger=Logger::getDefaultLogger())</argsstring>
        <name>AsyncPosControllerBuilder</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt; &amp;</type>
          <declname>ilogger</declname>
          <defval><ref refid="classokapi_1_1Logger_1a5053cf778b4b55acba788a3797dc96d2" kindref="member">Logger::getDefaultLogger</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A builder that creates async position controllers. Use this to create an <ref refid="classokapi_1_1AsyncPosIntegratedController" kindref="compound">AsyncPosIntegratedController</ref> or an <ref refid="classokapi_1_1AsyncPosPIDController" kindref="compound">AsyncPosPIDController</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ilogger</parametername>
</parameternamelist>
<parameterdescription>
<para>The logger this instance will log to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="29" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="13" bodyend="15"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1afe930ec31b591b6b2bf80be12bba3d79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withMotor</definition>
        <argsstring>(const Motor &amp;imotor)</argsstring>
        <name>withMotor</name>
        <param>
          <type>const <ref refid="classokapi_1_1Motor" kindref="compound">Motor</ref> &amp;</type>
          <declname>imotor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the motor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imotor</parametername>
</parameternamelist>
<parameterdescription>
<para>The motor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="38" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1aa93b974218c68cdd213274446a7fe4c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withMotor</definition>
        <argsstring>(const MotorGroup &amp;imotor)</argsstring>
        <name>withMotor</name>
        <param>
          <type>const <ref refid="classokapi_1_1MotorGroup" kindref="compound">MotorGroup</ref> &amp;</type>
          <declname>imotor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the motor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imotor</parametername>
</parameternamelist>
<parameterdescription>
<para>The motor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="46" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1a837f30643945bf8a5522c9a374ec98dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withMotor</definition>
        <argsstring>(const std::shared_ptr&lt; AbstractMotor &gt; &amp;imotor)</argsstring>
        <name>withMotor</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classokapi_1_1AbstractMotor" kindref="compound">AbstractMotor</ref> &gt; &amp;</type>
          <declname>imotor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the motor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imotor</parametername>
</parameternamelist>
<parameterdescription>
<para>The motor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="54" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="26" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1aab579369bc48c43c207cecc23d20b424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withSensor</definition>
        <argsstring>(const ADIEncoder &amp;isensor)</argsstring>
        <name>withSensor</name>
        <param>
          <type>const <ref refid="classokapi_1_1ADIEncoder" kindref="compound">ADIEncoder</ref> &amp;</type>
          <declname>isensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the sensor. The default sensor is the motor&apos;s integrated encoder.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="62" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1ad6667ad29a7834452b50390294cde4fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withSensor</definition>
        <argsstring>(const IntegratedEncoder &amp;isensor)</argsstring>
        <name>withSensor</name>
        <param>
          <type>const <ref refid="classokapi_1_1IntegratedEncoder" kindref="compound">IntegratedEncoder</ref> &amp;</type>
          <declname>isensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the sensor. The default sensor is the motor&apos;s integrated encoder.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="70" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="50" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1a1e6bf12a95ebde3adc90f3d6cfaf9adc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withSensor</definition>
        <argsstring>(const std::shared_ptr&lt; RotarySensor &gt; &amp;isensor)</argsstring>
        <name>withSensor</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classokapi_1_1RotarySensor" kindref="compound">RotarySensor</ref> &gt; &amp;</type>
          <declname>isensor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the sensor. The default sensor is the motor&apos;s integrated encoder.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>isensor</parametername>
</parameternamelist>
<parameterdescription>
<para>The sensor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="78" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="55" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1a4ac4afe101f6e49150d5f285ccd02e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withGains</definition>
        <argsstring>(const IterativePosPIDController::Gains &amp;igains)</argsstring>
        <name>withGains</name>
        <param>
          <type>const <ref refid="structokapi_1_1IterativePosPIDController_1_1Gains" kindref="compound">IterativePosPIDController::Gains</ref> &amp;</type>
          <declname>igains</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the controller gains, causing the builder to generate an <ref refid="classokapi_1_1AsyncPosPIDController" kindref="compound">AsyncPosPIDController</ref>. This does not set the integrated control&apos;s gains.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>igains</parametername>
</parameternamelist>
<parameterdescription>
<para>The gains. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="87" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="62" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1a6d1bda12787e919e9b52d06703824fd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withDerivativeFilter</definition>
        <argsstring>(std::unique_ptr&lt; Filter &gt; iderivativeFilter)</argsstring>
        <name>withDerivativeFilter</name>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classokapi_1_1Filter" kindref="compound">Filter</ref> &gt;</type>
          <declname>iderivativeFilter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the derivative filter which filters the derivative term before it is scaled by kD. The filter is ignored when using integrated control. The default derivative filter is a <ref refid="classokapi_1_1PassthroughFilter" kindref="compound">PassthroughFilter</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iderivativeFilter</parametername>
</parameternamelist>
<parameterdescription>
<para>The derivative filter. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="97" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1a70ac24982216681b1e05a20306b2271b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withGearset</definition>
        <argsstring>(const AbstractMotor::GearsetRatioPair &amp;igearset)</argsstring>
        <name>withGearset</name>
        <param>
          <type>const <ref refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair" kindref="compound">AbstractMotor::GearsetRatioPair</ref> &amp;</type>
          <declname>igearset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the gearset. The default gearset is derived from the motor&apos;s.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>igearset</parametername>
</parameternamelist>
<parameterdescription>
<para>The gearset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="105" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="75" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1ad95a82910616350d5519fd391143d26d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withMaxVelocity</definition>
        <argsstring>(double imaxVelocity)</argsstring>
        <name>withMaxVelocity</name>
        <param>
          <type>double</type>
          <declname>imaxVelocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the maximum velocity. The default maximum velocity is derived from the motor&apos;s gearset. This parameter is ignored when using an <ref refid="classokapi_1_1AsyncPosPIDController" kindref="compound">AsyncPosPIDController</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imaxVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The maximum velocity. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="114" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="81" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1afbec86a67bab3037b2d633dc10575702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withTimeUtilFactory</definition>
        <argsstring>(const TimeUtilFactory &amp;itimeUtilFactory)</argsstring>
        <name>withTimeUtilFactory</name>
        <param>
          <type>const <ref refid="classokapi_1_1TimeUtilFactory" kindref="compound">TimeUtilFactory</ref> &amp;</type>
          <declname>itimeUtilFactory</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the <ref refid="classokapi_1_1TimeUtilFactory" kindref="compound">TimeUtilFactory</ref> used when building the controller. The default is the static <ref refid="classokapi_1_1TimeUtilFactory" kindref="compound">TimeUtilFactory</ref>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itimeUtilFactory</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classokapi_1_1TimeUtilFactory" kindref="compound">TimeUtilFactory</ref>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="123" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1ace47053e63313f56c5646e41e5410335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref> &amp;</type>
        <definition>AsyncPosControllerBuilder &amp; okapi::AsyncPosControllerBuilder::withLogger</definition>
        <argsstring>(const std::shared_ptr&lt; Logger &gt; &amp;ilogger)</argsstring>
        <name>withLogger</name>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt; &amp;</type>
          <declname>ilogger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the logger.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ilogger</parametername>
</parameternamelist>
<parameterdescription>
<para>The logger. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ongoing builder. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="131" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1a15bce1f485fee03c7f1772736eea7075" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1AsyncPositionController" kindref="compound">AsyncPositionController</ref>&lt; double, double &gt; &gt;</type>
        <definition>std::shared_ptr&lt; AsyncPositionController&lt; double, double &gt; &gt; okapi::AsyncPosControllerBuilder::build</definition>
        <argsstring>()</argsstring>
        <name>build</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Builds the <ref refid="classokapi_1_1AsyncPositionController" kindref="compound">AsyncPositionController</ref>. Throws a std::runtime_exception is no motors were set.</para>
<para><simplesect kind="return"><para>A fully built <ref refid="classokapi_1_1AsyncPositionController" kindref="compound">AsyncPositionController</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="138" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="99" bodyend="111"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1a91d58daeedf0b042aa8c253e25610cab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1AsyncPosIntegratedController" kindref="compound">AsyncPosIntegratedController</ref> &gt;</type>
        <definition>std::shared_ptr&lt; AsyncPosIntegratedController &gt; okapi::AsyncPosControllerBuilder::buildAPIC</definition>
        <argsstring>()</argsstring>
        <name>buildAPIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="162" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncPosControllerBuilder_1a453f85eae189f5a4c3ad4e1d0679c83f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1AsyncPosPIDController" kindref="compound">AsyncPosPIDController</ref> &gt;</type>
        <definition>std::shared_ptr&lt; AsyncPosPIDController &gt; okapi::AsyncPosControllerBuilder::buildAPPC</definition>
        <argsstring>()</argsstring>
        <name>buildAPPC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="163" column="1" bodyfile="src/impl/control/async/asyncPosControllerBuilder.cpp" bodystart="118" bodyend="133"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" line="21" column="1" bodyfile="include/okapi/impl/control/async/asyncPosControllerBuilder.hpp" bodystart="21" bodyend="164"/>
    <listofallmembers>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1ab5016bcf0679d7bae87d19d21cbff95f" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>AsyncPosControllerBuilder</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a15bce1f485fee03c7f1772736eea7075" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>build</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a91d58daeedf0b042aa8c253e25610cab" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>buildAPIC</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a453f85eae189f5a4c3ad4e1d0679c83f" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>buildAPPC</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1affbd38937b9e8f2881b01e0d96fc989a" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>controllerLogger</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a3785d31b1b124fe4dbfd1438f083184c" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>derivativeFilter</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a69a73a5efa9aa583b4e1558a979c0371" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>gains</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a53969affafb0827f4ebe0cdee6c790c8" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>gearsetSetByUser</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a2abb689f36cb17a743ea939a8f41df01" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>hasGains</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a9088be3b2b7a057bf5ea86222a7b3d79" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>hasMotors</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a471566054045a99a4be0600efdc75ffd" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>logger</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a4c2b4407896042ffe40ab16454f100f5" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>maxVelocity</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1ad8f7b65ac90d0d67c4190ce0c9034d0e" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>maxVelSetByUser</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1aa0a307e36a30a862ec42ac25d388d029" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>motor</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1aadfd487eae4403f37eb5bcf773349f66" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>pair</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a7863e4cdd84a2272e950782e97a9d81c" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>sensor</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1ab46ebc95361486cf59aa0969706b693e" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>sensorsSetByUser</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1af7a94a801d11ae68c580f9ccd7d5b4b9" prot="private" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>timeUtilFactory</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a6d1bda12787e919e9b52d06703824fd1" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withDerivativeFilter</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a4ac4afe101f6e49150d5f285ccd02e50" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withGains</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a70ac24982216681b1e05a20306b2271b" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withGearset</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1ace47053e63313f56c5646e41e5410335" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withLogger</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1ad95a82910616350d5519fd391143d26d" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withMaxVelocity</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1afe930ec31b591b6b2bf80be12bba3d79" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withMotor</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1aa93b974218c68cdd213274446a7fe4c4" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withMotor</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a837f30643945bf8a5522c9a374ec98dc" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withMotor</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1aab579369bc48c43c207cecc23d20b424" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withSensor</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1ad6667ad29a7834452b50390294cde4fa" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withSensor</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1a1e6bf12a95ebde3adc90f3d6cfaf9adc" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withSensor</name></member>
      <member refid="classokapi_1_1AsyncPosControllerBuilder_1afbec86a67bab3037b2d633dc10575702" prot="public" virt="non-virtual"><scope>okapi::AsyncPosControllerBuilder</scope><name>withTimeUtilFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
