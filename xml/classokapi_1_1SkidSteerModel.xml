<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1SkidSteerModel" kind="class" language="C++" prot="public">
    <compoundname>okapi::SkidSteerModel</compoundname>
    <basecompoundref refid="classokapi_1_1ChassisModel" prot="public" virt="non-virtual">okapi::ChassisModel</basecompoundref>
    <derivedcompoundref refid="classokapi_1_1ThreeEncoderSkidSteerModel" prot="public" virt="non-virtual">okapi::ThreeEncoderSkidSteerModel</derivedcompoundref>
    <includes refid="skidSteerModel_8hpp" local="no">skidSteerModel.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classokapi_1_1SkidSteerModel_1a7328ea414229603ad144297832aba668" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::SkidSteerModel::maxVelocity</definition>
        <argsstring></argsstring>
        <name>maxVelocity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="181" column="1" bodyfile="include/okapi/api/chassis/model/skidSteerModel.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1SkidSteerModel_1a5a8c43598d98dad4d2c76d5c5c9b34ad" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::SkidSteerModel::maxVoltage</definition>
        <argsstring></argsstring>
        <name>maxVoltage</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="182" column="1" bodyfile="include/okapi/api/chassis/model/skidSteerModel.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1SkidSteerModel_1a086c099795122b42cf66c67a334a6c30" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1AbstractMotor" kindref="compound">AbstractMotor</ref> &gt;</type>
        <definition>std::shared_ptr&lt;AbstractMotor&gt; okapi::SkidSteerModel::leftSideMotor</definition>
        <argsstring></argsstring>
        <name>leftSideMotor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="183" column="1" bodyfile="include/okapi/api/chassis/model/skidSteerModel.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1SkidSteerModel_1a858a234f53f66803c7a498e69c86032b" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1AbstractMotor" kindref="compound">AbstractMotor</ref> &gt;</type>
        <definition>std::shared_ptr&lt;AbstractMotor&gt; okapi::SkidSteerModel::rightSideMotor</definition>
        <argsstring></argsstring>
        <name>rightSideMotor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="184" column="1" bodyfile="include/okapi/api/chassis/model/skidSteerModel.hpp" bodystart="184" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1SkidSteerModel_1ae286eda43ccd14ac74c06c95f05b14eb" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ContinuousRotarySensor" kindref="compound">ContinuousRotarySensor</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ContinuousRotarySensor&gt; okapi::SkidSteerModel::leftSensor</definition>
        <argsstring></argsstring>
        <name>leftSensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="185" column="1" bodyfile="include/okapi/api/chassis/model/skidSteerModel.hpp" bodystart="185" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1SkidSteerModel_1a35b26b12648944bb561e7978468fd679" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ContinuousRotarySensor" kindref="compound">ContinuousRotarySensor</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ContinuousRotarySensor&gt; okapi::SkidSteerModel::rightSensor</definition>
        <argsstring></argsstring>
        <name>rightSensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="186" column="1" bodyfile="include/okapi/api/chassis/model/skidSteerModel.hpp" bodystart="186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1ac79ebd9b643ea68da98576ec355e94a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::SkidSteerModel::SkidSteerModel</definition>
        <argsstring>(std::shared_ptr&lt; AbstractMotor &gt; ileftSideMotor, std::shared_ptr&lt; AbstractMotor &gt; irightSideMotor, std::shared_ptr&lt; ContinuousRotarySensor &gt; ileftEnc, std::shared_ptr&lt; ContinuousRotarySensor &gt; irightEnc, double imaxVelocity, double imaxVoltage)</argsstring>
        <name>SkidSteerModel</name>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classokapi_1_1AbstractMotor" kindref="compound">AbstractMotor</ref> &gt;</type>
          <declname>ileftSideMotor</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classokapi_1_1AbstractMotor" kindref="compound">AbstractMotor</ref> &gt;</type>
          <declname>irightSideMotor</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ContinuousRotarySensor" kindref="compound">ContinuousRotarySensor</ref> &gt;</type>
          <declname>ileftEnc</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ContinuousRotarySensor" kindref="compound">ContinuousRotarySensor</ref> &gt;</type>
          <declname>irightEnc</declname>
        </param>
        <param>
          <type>double</type>
          <declname>imaxVelocity</declname>
        </param>
        <param>
          <type>double</type>
          <declname>imaxVoltage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Model for a skid steer drive (wheels parallel with robot&apos;s direction of motion). When all motors are powered +100%, the robot should move forward in a straight line.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ileftSideMotor</parametername>
</parameternamelist>
<parameterdescription>
<para>left side motor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>irightSideMotor</parametername>
</parameternamelist>
<parameterdescription>
<para>right side motor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ileftEnc</parametername>
</parameternamelist>
<parameterdescription>
<para>left side encoder </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>irightEnc</parametername>
</parameternamelist>
<parameterdescription>
<para>right side encoder </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="26" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="13" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a74ca9d9f1b0f80c9453194567c58e967" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::forward</definition>
        <argsstring>(double ispeed) override</argsstring>
        <name>forward</name>
        <reimplements refid="classokapi_1_1ChassisModel_1ae39e8ccd15b6f84e32cd21fe99bdd6c9">forward</reimplements>
        <param>
          <type>double</type>
          <declname>ispeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drive the robot forwards (using open-loop control). Uses velocity mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ispeed</parametername>
</parameternamelist>
<parameterdescription>
<para>motor power </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="38" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a5fa39473f6a6d2deae988f63e972b66a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::driveVector</definition>
        <argsstring>(double iySpeed, double izRotation) override</argsstring>
        <name>driveVector</name>
        <reimplements refid="classokapi_1_1ChassisModel_1aa621ce62c2bc336e41b859e2cb10dda5">driveVector</reimplements>
        <param>
          <type>double</type>
          <declname>iySpeed</declname>
        </param>
        <param>
          <type>double</type>
          <declname>izRotation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drive the robot in an arc (using open-loop control). Uses velocity mode. The algorithm is (approximately): leftPower = ySpeed + zRotation rightPower = ySpeed - zRotation</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iySpeed</parametername>
</parameternamelist>
<parameterdescription>
<para>speed on y axis (forward) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>izRotation</parametername>
</parameternamelist>
<parameterdescription>
<para>speed around z axis (up) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="49" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="33" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1aa9b68af25f8f924117b07a5c8e9f6c93" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::driveVectorVoltage</definition>
        <argsstring>(double iforwardSpeed, double iyaw) override</argsstring>
        <name>driveVectorVoltage</name>
        <reimplements refid="classokapi_1_1ChassisModel_1a69115758be9e29888dce34f317d57150">driveVectorVoltage</reimplements>
        <param>
          <type>double</type>
          <declname>iforwardSpeed</declname>
        </param>
        <param>
          <type>double</type>
          <declname>iyaw</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drive the robot in an arc. Uses voltage mode. The algorithm is (approximately): leftPower = forwardSpeed + yaw rightPower = forwardSpeed - yaw</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iforwadSpeed</parametername>
</parameternamelist>
<parameterdescription>
<para>speed in the forward direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iyaw</parametername>
</parameternamelist>
<parameterdescription>
<para>speed around the vertical axis </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="60" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="51" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1af02dab85c80cf8aa226b33a39851feff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::rotate</definition>
        <argsstring>(double ispeed) override</argsstring>
        <name>rotate</name>
        <reimplements refid="classokapi_1_1ChassisModel_1af13aa5281c762eb61a444f0b35176014">rotate</reimplements>
        <param>
          <type>double</type>
          <declname>ispeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turn the robot clockwise (using open-loop control). Uses velocity mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ispeed</parametername>
</parameternamelist>
<parameterdescription>
<para>motor power </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="67" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a98d212cff8bad647ada6bcd3054c7581" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::stop</definition>
        <argsstring>() override</argsstring>
        <name>stop</name>
        <reimplements refid="classokapi_1_1ChassisModel_1ad67ad9abae41c5441c2a2d671d0c8a55">stop</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stop the robot (set all the motors to 0). Uses velocity mode. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="72" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1aa51195896f1be6afe661d5c9a8e6ea4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::tank</definition>
        <argsstring>(double ileftSpeed, double irightSpeed, double ithreshold=0) override</argsstring>
        <name>tank</name>
        <reimplements refid="classokapi_1_1ChassisModel_1a185a667048f84c3a0fced6882c5f7980">tank</reimplements>
        <param>
          <type>double</type>
          <declname>ileftSpeed</declname>
        </param>
        <param>
          <type>double</type>
          <declname>irightSpeed</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ithreshold</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drive the robot with a tank drive layout. Uses voltage mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ileftSpeed</parametername>
</parameternamelist>
<parameterdescription>
<para>left side speed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>irightSpeed</parametername>
</parameternamelist>
<parameterdescription>
<para>right side speed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ithreshold</parametername>
</parameternamelist>
<parameterdescription>
<para>deadband on joystick values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="81" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="80" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a145f671aa2dd1c6991945929e4a3d97d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::arcade</definition>
        <argsstring>(double iforwardSpeed, double iyaw, double ithreshold=0) override</argsstring>
        <name>arcade</name>
        <reimplements refid="classokapi_1_1ChassisModel_1a632d4c0b74747ab3b9c5a159a36bdd03">arcade</reimplements>
        <param>
          <type>double</type>
          <declname>iforwardSpeed</declname>
        </param>
        <param>
          <type>double</type>
          <declname>iyaw</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ithreshold</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drive the robot with an arcade drive layout. Uses voltage mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iforwardSpeed</parametername>
</parameternamelist>
<parameterdescription>
<para>speed in the forward direction </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iyaw</parametername>
</parameternamelist>
<parameterdescription>
<para>speed around the vertical axis </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ithreshold</parametername>
</parameternamelist>
<parameterdescription>
<para>deadband on joystick values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="90" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="99" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1af2b00108853b82eb0fb5ecb3b71f413d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::left</definition>
        <argsstring>(double ispeed) override</argsstring>
        <name>left</name>
        <reimplements refid="classokapi_1_1ChassisModel_1aa2008856c169eb64c6648bc64c31c504">left</reimplements>
        <param>
          <type>double</type>
          <declname>ispeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power the left side motors. Uses velocity mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ispeed</parametername>
</parameternamelist>
<parameterdescription>
<para>motor power </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="97" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1ada9bd222b5aeaa0507b57906ac59dd3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::right</definition>
        <argsstring>(double ispeed) override</argsstring>
        <name>right</name>
        <reimplements refid="classokapi_1_1ChassisModel_1a282fcf947aea9630cadd2c673eb5f7e3">right</reimplements>
        <param>
          <type>double</type>
          <declname>ispeed</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Power the right side motors. Uses velocity mode.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ispeed</parametername>
</parameternamelist>
<parameterdescription>
<para>motor power </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="104" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a850e4de7ab3a30a354ac39f30a1e8603" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::valarray&lt; std::int32_t &gt;</type>
        <definition>std::valarray&lt; std::int32_t &gt; okapi::SkidSteerModel::getSensorVals</definition>
        <argsstring>() const override</argsstring>
        <name>getSensorVals</name>
        <reimplements refid="classokapi_1_1ReadOnlyChassisModel_1af2d844d9e12bb7c778ac9a5a0074f848">getSensorVals</reimplements>
        <reimplementedby refid="classokapi_1_1ThreeEncoderSkidSteerModel_1a39af35aa25e5385584b3834911aed341">getSensorVals</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Read the sensors.</para>
<para><simplesect kind="return"><para>sensor readings in the format {left, right} </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="111" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="149" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1af8885fc16e654eafa872dd7c760591cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::resetSensors</definition>
        <argsstring>() override</argsstring>
        <name>resetSensors</name>
        <reimplements refid="classokapi_1_1ChassisModel_1a6bd7e6bb60d41d3f1f5a5a129acfe1b6">resetSensors</reimplements>
        <reimplementedby refid="classokapi_1_1ThreeEncoderSkidSteerModel_1a6e4d43a1f3027798c0451c93f8cde057">resetSensors</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reset the sensors to their zero point. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="116" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="154" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a84c100815058f4dcdc958b3349713f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::setBrakeMode</definition>
        <argsstring>(AbstractMotor::brakeMode mode) override</argsstring>
        <name>setBrakeMode</name>
        <reimplements refid="classokapi_1_1ChassisModel_1a20e3cde96d536e6c722aa5686e5cc8e8">setBrakeMode</reimplements>
        <param>
          <type><ref refid="classokapi_1_1AbstractMotor_1a132e0485dbb59a60c3f934338d8fa601" kindref="member">AbstractMotor::brakeMode</ref></type>
          <declname>mode</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the brake mode for each motor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>new brake mode </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="123" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="159" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a8922c028a9f09893061938fe50fb2a79" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::setEncoderUnits</definition>
        <argsstring>(AbstractMotor::encoderUnits units) override</argsstring>
        <name>setEncoderUnits</name>
        <reimplements refid="classokapi_1_1ChassisModel_1ae8ba9a72bf827af4c6feffaac99b33ee">setEncoderUnits</reimplements>
        <param>
          <type><ref refid="classokapi_1_1AbstractMotor_1ae811cd825099f2defadeb1b7f7e7764c" kindref="member">AbstractMotor::encoderUnits</ref></type>
          <declname>units</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the encoder units for each motor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>units</parametername>
</parameternamelist>
<parameterdescription>
<para>new motor encoder units </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="130" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="164" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1ad890989e345cfd7455436bc5dd6efdcc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::setGearing</definition>
        <argsstring>(AbstractMotor::gearset gearset) override</argsstring>
        <name>setGearing</name>
        <reimplements refid="classokapi_1_1ChassisModel_1a960d6ce2f21e5832fce1d7566408cb61">setGearing</reimplements>
        <param>
          <type><ref refid="classokapi_1_1AbstractMotor_1a88aaa6ea2fa10f5520a537bbf26774d5" kindref="member">AbstractMotor::gearset</ref></type>
          <declname>gearset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set the gearset for each motor.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>gearset</parametername>
</parameternamelist>
<parameterdescription>
<para>new motor gearset </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="137" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="169" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a4beda353f201fa72fc8d31f47a08d473" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::setMaxVelocity</definition>
        <argsstring>(double imaxVelocity) override</argsstring>
        <name>setMaxVelocity</name>
        <reimplements refid="classokapi_1_1ChassisModel_1ae7fcb4cc95fdd7fd3c8f8388b4a698b2">setMaxVelocity</reimplements>
        <param>
          <type>double</type>
          <declname>imaxVelocity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a new maximum velocity in RPM. The usable maximum depends on the maximum velocity of the currently installed gearset. If the configured maximum velocity is greater than the attainable maximum velocity from the currently installed gearset, the <ref refid="classokapi_1_1ChassisModel" kindref="compound">ChassisModel</ref> will still scale to that velocity.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imaxVelocity</parametername>
</parameternamelist>
<parameterdescription>
<para>The new maximum velocity. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="147" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a7e2fcfb65e940ea4d71780966b4b5b68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double okapi::SkidSteerModel::getMaxVelocity</definition>
        <argsstring>() const override</argsstring>
        <name>getMaxVelocity</name>
        <reimplements refid="classokapi_1_1ChassisModel_1ab45dd7430636ed1c1dee25dae6df5d46">getMaxVelocity</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The current maximum velocity. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="152" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1ad4dc0f8e3877b23ffb8ae58903bdffb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::SkidSteerModel::setMaxVoltage</definition>
        <argsstring>(double imaxVoltage) override</argsstring>
        <name>setMaxVoltage</name>
        <reimplements refid="classokapi_1_1ChassisModel_1a2fb261636b79e118f22530cc3fce4f41">setMaxVoltage</reimplements>
        <param>
          <type>double</type>
          <declname>imaxVoltage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets a new maximum voltage in mV in the range <computeroutput>[0-12000]</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>imaxVoltage</parametername>
</parameternamelist>
<parameterdescription>
<para>The new maximum voltage. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="159" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="186" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1ad4849d18c3a244eb60e1056860a3c4cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double okapi::SkidSteerModel::getMaxVoltage</definition>
        <argsstring>() const override</argsstring>
        <name>getMaxVoltage</name>
        <reimplements refid="classokapi_1_1ChassisModel_1a3ced2121524ae523592db64733c69472">getMaxVoltage</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The maximum voltage in mV in the range <computeroutput>[0-12000]</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="164" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="196" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a3f1813ada8205396c35abccbc0c9ff21" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1AbstractMotor" kindref="compound">AbstractMotor</ref> &gt;</type>
        <definition>std::shared_ptr&lt; AbstractMotor &gt; okapi::SkidSteerModel::getLeftSideMotor</definition>
        <argsstring>() const</argsstring>
        <name>getLeftSideMotor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the left side motor.</para>
<para><simplesect kind="return"><para>the left side motor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="171" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1SkidSteerModel_1a0c58a580708b864d8c4391c7045e590b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1AbstractMotor" kindref="compound">AbstractMotor</ref> &gt;</type>
        <definition>std::shared_ptr&lt; AbstractMotor &gt; okapi::SkidSteerModel::getRightSideMotor</definition>
        <argsstring>() const</argsstring>
        <name>getRightSideMotor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the left side motor.</para>
<para><simplesect kind="return"><para>the left side motor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="178" column="1" bodyfile="src/api/chassis/model/skidSteerModel.cpp" bodystart="204" bodyend="206"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="493">
        <label>okapi::ReadOnlyChassisModel</label>
        <link refid="classokapi_1_1ReadOnlyChassisModel"/>
      </node>
      <node id="494">
        <label>okapi::ThreeEncoderSkidSteerModel</label>
        <link refid="classokapi_1_1ThreeEncoderSkidSteerModel"/>
        <childnode refid="491" relation="public-inheritance">
        </childnode>
      </node>
      <node id="492">
        <label>okapi::ChassisModel</label>
        <link refid="classokapi_1_1ChassisModel"/>
        <childnode refid="493" relation="public-inheritance">
        </childnode>
      </node>
      <node id="491">
        <label>okapi::SkidSteerModel</label>
        <link refid="classokapi_1_1SkidSteerModel"/>
        <childnode refid="492" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="497">
        <label>okapi::ReadOnlyChassisModel</label>
        <link refid="classokapi_1_1ReadOnlyChassisModel"/>
      </node>
      <node id="496">
        <label>okapi::ChassisModel</label>
        <link refid="classokapi_1_1ChassisModel"/>
        <childnode refid="497" relation="public-inheritance">
        </childnode>
      </node>
      <node id="495">
        <label>okapi::SkidSteerModel</label>
        <link refid="classokapi_1_1SkidSteerModel"/>
        <childnode refid="496" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/okapi/api/chassis/model/skidSteerModel.hpp" line="15" column="1" bodyfile="include/okapi/api/chassis/model/skidSteerModel.hpp" bodystart="15" bodyend="187"/>
    <listofallmembers>
      <member refid="classokapi_1_1SkidSteerModel_1a145f671aa2dd1c6991945929e4a3d97d" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>arcade</name></member>
      <member refid="classokapi_1_1ChassisModel_1ae292afae5511e46eec17cf0f9bad1bb6" prot="public" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>ChassisModel</name></member>
      <member refid="classokapi_1_1ChassisModel_1a8201eb131b58c99a2b93630758e8367d" prot="public" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>ChassisModel</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a5fa39473f6a6d2deae988f63e972b66a" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>driveVector</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1aa9b68af25f8f924117b07a5c8e9f6c93" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>driveVectorVoltage</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a74ca9d9f1b0f80c9453194567c58e967" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>forward</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a3f1813ada8205396c35abccbc0c9ff21" prot="public" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>getLeftSideMotor</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a7e2fcfb65e940ea4d71780966b4b5b68" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>getMaxVelocity</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1ad4849d18c3a244eb60e1056860a3c4cf" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>getMaxVoltage</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a0c58a580708b864d8c4391c7045e590b" prot="public" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>getRightSideMotor</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a850e4de7ab3a30a354ac39f30a1e8603" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>getSensorVals</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1af2b00108853b82eb0fb5ecb3b71f413d" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>left</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1ae286eda43ccd14ac74c06c95f05b14eb" prot="protected" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>leftSensor</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a086c099795122b42cf66c67a334a6c30" prot="protected" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>leftSideMotor</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a7328ea414229603ad144297832aba668" prot="protected" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>maxVelocity</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a5a8c43598d98dad4d2c76d5c5c9b34ad" prot="protected" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>maxVoltage</name></member>
      <member refid="classokapi_1_1ChassisModel_1ab6c89183b8a5317a1e149df5ed22dfb1" prot="public" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>operator=</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1af8885fc16e654eafa872dd7c760591cf" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>resetSensors</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1ada9bd222b5aeaa0507b57906ac59dd3b" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>right</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a35b26b12648944bb561e7978468fd679" prot="protected" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>rightSensor</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a858a234f53f66803c7a498e69c86032b" prot="protected" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>rightSideMotor</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1af02dab85c80cf8aa226b33a39851feff" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>rotate</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a84c100815058f4dcdc958b3349713f73" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>setBrakeMode</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a8922c028a9f09893061938fe50fb2a79" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>setEncoderUnits</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1ad890989e345cfd7455436bc5dd6efdcc" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>setGearing</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a4beda353f201fa72fc8d31f47a08d473" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>setMaxVelocity</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1ad4dc0f8e3877b23ffb8ae58903bdffb7" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>setMaxVoltage</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1ac79ebd9b643ea68da98576ec355e94a5" prot="public" virt="non-virtual"><scope>okapi::SkidSteerModel</scope><name>SkidSteerModel</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1a98d212cff8bad647ada6bcd3054c7581" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>stop</name></member>
      <member refid="classokapi_1_1SkidSteerModel_1aa51195896f1be6afe661d5c9a8e6ea4e" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>tank</name></member>
      <member refid="classokapi_1_1ReadOnlyChassisModel_1a1994ed80cbfdc34f30f90083d4c8620d" prot="public" virt="virtual"><scope>okapi::SkidSteerModel</scope><name>~ReadOnlyChassisModel</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
