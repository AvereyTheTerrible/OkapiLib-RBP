<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1Filter" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>okapi::Filter</compoundname>
    <derivedcompoundref refid="classokapi_1_1AverageFilter" prot="public" virt="non-virtual">okapi::AverageFilter&lt; n &gt;</derivedcompoundref>
    <derivedcompoundref refid="classokapi_1_1ComposableFilter" prot="public" virt="non-virtual">okapi::ComposableFilter</derivedcompoundref>
    <derivedcompoundref refid="classokapi_1_1DemaFilter" prot="public" virt="non-virtual">okapi::DemaFilter</derivedcompoundref>
    <derivedcompoundref refid="classokapi_1_1EKFFilter" prot="public" virt="non-virtual">okapi::EKFFilter</derivedcompoundref>
    <derivedcompoundref refid="classokapi_1_1EmaFilter" prot="public" virt="non-virtual">okapi::EmaFilter</derivedcompoundref>
    <derivedcompoundref refid="classokapi_1_1MedianFilter" prot="public" virt="non-virtual">okapi::MedianFilter&lt; n &gt;</derivedcompoundref>
    <derivedcompoundref refid="classokapi_1_1PassthroughFilter" prot="public" virt="non-virtual">okapi::PassthroughFilter</derivedcompoundref>
    <includes refid="filter_8hpp" local="no">filter.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1Filter_1a7391c913f315e28947bbfc3d8e29bef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>okapi::Filter::~Filter</definition>
        <argsstring>()</argsstring>
        <name>~Filter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/filter.hpp" line="13" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Filter_1a7c2ea0b64b37b688900189856d58da15" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double okapi::Filter::filter</definition>
        <argsstring>(double ireading)=0</argsstring>
        <name>filter</name>
        <reimplementedby refid="classokapi_1_1PassthroughFilter_1a359570b00c564dde65e02c6485079544">filter</reimplementedby>
        <reimplementedby refid="classokapi_1_1EmaFilter_1aeb460ae6655441806591e076342245de">filter</reimplementedby>
        <reimplementedby refid="classokapi_1_1DemaFilter_1a2d0eb2feae37ceacc865023ac4997ff1">filter</reimplementedby>
        <reimplementedby refid="classokapi_1_1AverageFilter_1a6030d718df73a9a1d7a99c104c3e564e">filter</reimplementedby>
        <reimplementedby refid="classokapi_1_1MedianFilter_1a91e4104c4862082cd17ab92b43c02fab">filter</reimplementedby>
        <reimplementedby refid="classokapi_1_1ComposableFilter_1a76925f04dcd186b249e5bfb169f27992">filter</reimplementedby>
        <reimplementedby refid="classokapi_1_1EKFFilter_1a7deb4e14f154247b5521afa7603d09fd">filter</reimplementedby>
        <param>
          <type>double</type>
          <declname>ireading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Filters a value, like a sensor reading.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ireading</parametername>
</parameternamelist>
<parameterdescription>
<para>new measurement </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>filtered result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/filter.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Filter_1a3469cd4bc108f8accf300d9f5cc9f42f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double okapi::Filter::getOutput</definition>
        <argsstring>() const =0</argsstring>
        <name>getOutput</name>
        <reimplementedby refid="classokapi_1_1PassthroughFilter_1a90bd8c34fa22bfc7c6f9f76fd6e655dc">getOutput</reimplementedby>
        <reimplementedby refid="classokapi_1_1EmaFilter_1a883bc02a7244be54f947b6daaa63c0fe">getOutput</reimplementedby>
        <reimplementedby refid="classokapi_1_1DemaFilter_1a2dba33231bb71e16d13adbcefefed425">getOutput</reimplementedby>
        <reimplementedby refid="classokapi_1_1ComposableFilter_1a2d54899ce84c463af2f22cfbf36c7c7c">getOutput</reimplementedby>
        <reimplementedby refid="classokapi_1_1MedianFilter_1ac38e6d04879eaeb98b853a24cb26e28c">getOutput</reimplementedby>
        <reimplementedby refid="classokapi_1_1AverageFilter_1a2ee104dfc880e779079dc8e1e242a44b">getOutput</reimplementedby>
        <reimplementedby refid="classokapi_1_1EKFFilter_1aaf3048eb6d68d248de7c59f84b0d1201">getOutput</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the previous output from filter.</para>
<para><simplesect kind="return"><para>the previous output from filter </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/filter.hpp" line="28" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="316">
        <label>okapi::PassthroughFilter</label>
        <link refid="classokapi_1_1PassthroughFilter"/>
        <childnode refid="309" relation="public-inheritance">
        </childnode>
      </node>
      <node id="312">
        <label>okapi::DemaFilter</label>
        <link refid="classokapi_1_1DemaFilter"/>
        <childnode refid="309" relation="public-inheritance">
        </childnode>
      </node>
      <node id="314">
        <label>okapi::EmaFilter</label>
        <link refid="classokapi_1_1EmaFilter"/>
        <childnode refid="309" relation="public-inheritance">
        </childnode>
      </node>
      <node id="311">
        <label>okapi::ComposableFilter</label>
        <link refid="classokapi_1_1ComposableFilter"/>
        <childnode refid="309" relation="public-inheritance">
        </childnode>
      </node>
      <node id="310">
        <label>okapi::AverageFilter&lt; n &gt;</label>
        <link refid="classokapi_1_1AverageFilter"/>
        <childnode refid="309" relation="public-inheritance">
        </childnode>
      </node>
      <node id="313">
        <label>okapi::EKFFilter</label>
        <link refid="classokapi_1_1EKFFilter"/>
        <childnode refid="309" relation="public-inheritance">
        </childnode>
      </node>
      <node id="315">
        <label>okapi::MedianFilter&lt; n &gt;</label>
        <link refid="classokapi_1_1MedianFilter"/>
        <childnode refid="309" relation="public-inheritance">
        </childnode>
      </node>
      <node id="309">
        <label>okapi::Filter</label>
        <link refid="classokapi_1_1Filter"/>
      </node>
    </inheritancegraph>
    <location file="include/okapi/api/filter/filter.hpp" line="11" column="1" bodyfile="include/okapi/api/filter/filter.hpp" bodystart="11" bodyend="29"/>
    <listofallmembers>
      <member refid="classokapi_1_1Filter_1a7c2ea0b64b37b688900189856d58da15" prot="public" virt="pure-virtual"><scope>okapi::Filter</scope><name>filter</name></member>
      <member refid="classokapi_1_1Filter_1a3469cd4bc108f8accf300d9f5cc9f42f" prot="public" virt="pure-virtual"><scope>okapi::Filter</scope><name>getOutput</name></member>
      <member refid="classokapi_1_1Filter_1a7391c913f315e28947bbfc3d8e29bef8" prot="public" virt="virtual"><scope>okapi::Filter</scope><name>~Filter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
