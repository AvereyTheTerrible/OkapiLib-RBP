<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1AsyncLinearMotionProfileController" kind="class" language="C++" prot="public">
    <compoundname>okapi::AsyncLinearMotionProfileController</compoundname>
    <basecompoundref refid="classokapi_1_1AsyncPositionController" prot="public" virt="non-virtual">okapi::AsyncPositionController&lt; std::string, double &gt;</basecompoundref>
    <includes refid="asyncLinearMotionProfileController_8hpp" local="no">asyncLinearMotionProfileController.hpp</includes>
    <innerclass refid="structokapi_1_1AsyncLinearMotionProfileController_1_1TrajectoryPair" prot="protected">okapi::AsyncLinearMotionProfileController::TrajectoryPair</innerclass>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1abfdbc29ef850cf20ed15b3c1398c7cc1" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; okapi::AsyncLinearMotionProfileController::logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="247" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1a955697ca2debe00771c8039b3df328f0" prot="protected" static="no" mutable="no">
        <type>std::map&lt; std::string, <ref refid="structokapi_1_1AsyncLinearMotionProfileController_1_1TrajectoryPair" kindref="compound">TrajectoryPair</ref> &gt;</type>
        <definition>std::map&lt;std::string, TrajectoryPair&gt; okapi::AsyncLinearMotionProfileController::paths</definition>
        <argsstring></argsstring>
        <name>paths</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="248" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1a9d2bb17d4a934984d488b3b4fba11c6e" prot="protected" static="no" mutable="no">
        <type><ref refid="structokapi_1_1PathfinderLimits" kindref="compound">PathfinderLimits</ref></type>
        <definition>PathfinderLimits okapi::AsyncLinearMotionProfileController::limits</definition>
        <argsstring></argsstring>
        <name>limits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="249" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1a5a718fd422ce52e613e1d231910860a9" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ControllerOutput" kindref="compound">ControllerOutput</ref>&lt; double &gt; &gt;</type>
        <definition>std::shared_ptr&lt;ControllerOutput&lt;double&gt; &gt; okapi::AsyncLinearMotionProfileController::output</definition>
        <argsstring></argsstring>
        <name>output</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="250" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1a0b3cafe78cb551d68c2cb6ac31d1a753" prot="protected" static="no" mutable="no">
        <type>QLength</type>
        <definition>QLength okapi::AsyncLinearMotionProfileController::diameter</definition>
        <argsstring></argsstring>
        <name>diameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="251" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1a3727388c1310a387524b7d38d5c0b1b0" prot="protected" static="no" mutable="no">
        <type><ref refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair" kindref="compound">AbstractMotor::GearsetRatioPair</ref></type>
        <definition>AbstractMotor::GearsetRatioPair okapi::AsyncLinearMotionProfileController::pair</definition>
        <argsstring></argsstring>
        <name>pair</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="252" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1a94c203e635765357bd825ffc4d061741" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::AsyncLinearMotionProfileController::currentProfilePosition</definition>
        <argsstring></argsstring>
        <name>currentProfilePosition</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="253" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1a320e12b446817ebc8dfb01c6bb36e3cb" prot="protected" static="no" mutable="no">
        <type><ref refid="classokapi_1_1TimeUtil" kindref="compound">TimeUtil</ref></type>
        <definition>TimeUtil okapi::AsyncLinearMotionProfileController::timeUtil</definition>
        <argsstring></argsstring>
        <name>timeUtil</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="254" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="254" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1ac68c8ff11c8a38eca42efd2950584b90" prot="protected" static="no" mutable="no">
        <type><ref refid="classCrossplatformMutex" kindref="compound">CrossplatformMutex</ref></type>
        <definition>CrossplatformMutex okapi::AsyncLinearMotionProfileController::pathRemoveMutex</definition>
        <argsstring></argsstring>
        <name>pathRemoveMutex</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="255" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="255" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1a010cd3afaa58154ee7a32059cadae555" prot="protected" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string okapi::AsyncLinearMotionProfileController::currentPath</definition>
        <argsstring></argsstring>
        <name>currentPath</name>
        <initializer>{&quot;&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="257" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="257" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1a587f56ae443b18e8fe0b9feeca624b07" prot="protected" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool okapi::AsyncLinearMotionProfileController::isRunning</definition>
        <argsstring></argsstring>
        <name>isRunning</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="258" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="258" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1af82aa4936830711c126e7f00222fdbd8" prot="protected" static="no" mutable="no">
        <type>std::atomic_int</type>
        <definition>std::atomic_int okapi::AsyncLinearMotionProfileController::direction</definition>
        <argsstring></argsstring>
        <name>direction</name>
        <initializer>{1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="259" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1a6fc7e4b240646a8e2a8ecc06701e5ee0" prot="protected" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool okapi::AsyncLinearMotionProfileController::disabled</definition>
        <argsstring></argsstring>
        <name>disabled</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="260" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1aa876f79a2053e1f6b01519f17ccaebfa" prot="protected" static="no" mutable="no">
        <type>std::atomic_bool</type>
        <definition>std::atomic_bool okapi::AsyncLinearMotionProfileController::dtorCalled</definition>
        <argsstring></argsstring>
        <name>dtorCalled</name>
        <initializer>{false}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="261" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="261" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1AsyncLinearMotionProfileController_1aa49e2d190f4e8af09fdc4b13951c212d" prot="protected" static="no" mutable="no">
        <type><ref refid="classCrossplatformThread" kindref="compound">CrossplatformThread</ref> *</type>
        <definition>CrossplatformThread* okapi::AsyncLinearMotionProfileController::task</definition>
        <argsstring></argsstring>
        <name>task</name>
        <initializer>{nullptr}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="262" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="262" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a6a5c233fef5c310eaac306467e6a402b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::AsyncLinearMotionProfileController::AsyncLinearMotionProfileController</definition>
        <argsstring>(const TimeUtil &amp;itimeUtil, const PathfinderLimits &amp;ilimits, const std::shared_ptr&lt; ControllerOutput&lt; double &gt;&gt; &amp;ioutput, const QLength &amp;idiameter, const AbstractMotor::GearsetRatioPair &amp;ipair, const std::shared_ptr&lt; Logger &gt; &amp;ilogger=Logger::getDefaultLogger())</argsstring>
        <name>AsyncLinearMotionProfileController</name>
        <param>
          <type>const <ref refid="classokapi_1_1TimeUtil" kindref="compound">TimeUtil</ref> &amp;</type>
          <declname>itimeUtil</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1PathfinderLimits" kindref="compound">PathfinderLimits</ref> &amp;</type>
          <declname>ilimits</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classokapi_1_1ControllerOutput" kindref="compound">ControllerOutput</ref>&lt; double &gt;&gt; &amp;</type>
          <declname>ioutput</declname>
        </param>
        <param>
          <type>const QLength &amp;</type>
          <declname>idiameter</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair" kindref="compound">AbstractMotor::GearsetRatioPair</ref> &amp;</type>
          <declname>ipair</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt; &amp;</type>
          <declname>ilogger</declname>
          <defval><ref refid="classokapi_1_1Logger_1a5053cf778b4b55acba788a3797dc96d2" kindref="member">Logger::getDefaultLogger</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>An Async <ref refid="classokapi_1_1Controller" kindref="compound">Controller</ref> which generates and follows 1D motion profiles.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itimeUtil</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classokapi_1_1TimeUtil" kindref="compound">TimeUtil</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ilimits</parametername>
</parameternamelist>
<parameterdescription>
<para>The default limits. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ioutput</parametername>
</parameternamelist>
<parameterdescription>
<para>The output to write velocity targets to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idiameter</parametername>
</parameternamelist>
<parameterdescription>
<para>The effective diameter for whatever the motor spins. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ipair</parametername>
</parameternamelist>
<parameterdescription>
<para>The gearset. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ilogger</parametername>
</parameternamelist>
<parameterdescription>
<para>The logger this instance will log to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="37" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="14" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a9d12f6da129f5c8f8c2c6ddad12274bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::AsyncLinearMotionProfileController::AsyncLinearMotionProfileController</definition>
        <argsstring>(AsyncLinearMotionProfileController &amp;&amp;other)=delete</argsstring>
        <name>AsyncLinearMotionProfileController</name>
        <param>
          <type><ref refid="classokapi_1_1AsyncLinearMotionProfileController" kindref="compound">AsyncLinearMotionProfileController</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a27f16841fdb3586adaf978da580e4f31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1AsyncLinearMotionProfileController" kindref="compound">AsyncLinearMotionProfileController</ref> &amp;</type>
        <definition>AsyncLinearMotionProfileController&amp; okapi::AsyncLinearMotionProfileController::operator=</definition>
        <argsstring>(AsyncLinearMotionProfileController &amp;&amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classokapi_1_1AsyncLinearMotionProfileController" kindref="compound">AsyncLinearMotionProfileController</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1aaf6806399023d0a4d7dd0ae1a64b3470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::AsyncLinearMotionProfileController::~AsyncLinearMotionProfileController</definition>
        <argsstring>() override</argsstring>
        <name>~AsyncLinearMotionProfileController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="50" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1aef2acba51417d929695ca38e309b0f6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::generatePath</definition>
        <argsstring>(std::initializer_list&lt; QLength &gt; iwaypoints, const std::string &amp;ipathId)</argsstring>
        <name>generatePath</name>
        <param>
          <type>std::initializer_list&lt; QLength &gt;</type>
          <declname>iwaypoints</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ipathId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates a path which intersects the given waypoints and saves it internally with a key of pathId. Call <computeroutput>executePath()</computeroutput> with the same <computeroutput>pathId</computeroutput> to run it.</para>
<para>If the waypoints form a path which is impossible to achieve, an instance of <computeroutput>std::runtime_error</computeroutput> is thrown (and an error is logged) which describes the waypoints. If there are no waypoints, no path is generated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwaypoints</parametername>
</parameternamelist>
<parameterdescription>
<para>The waypoints to hit on the path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ipathId</parametername>
</parameternamelist>
<parameterdescription>
<para>A unique identifier to save the path with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="63" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="39" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1ada94ccc2679082ea7fb2317458ca80d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::generatePath</definition>
        <argsstring>(std::initializer_list&lt; QLength &gt; iwaypoints, const std::string &amp;ipathId, const PathfinderLimits &amp;ilimits)</argsstring>
        <name>generatePath</name>
        <param>
          <type>std::initializer_list&lt; QLength &gt;</type>
          <declname>iwaypoints</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ipathId</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1PathfinderLimits" kindref="compound">PathfinderLimits</ref> &amp;</type>
          <declname>ilimits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates a path which intersects the given waypoints and saves it internally with a key of pathId. Call <computeroutput>executePath()</computeroutput> with the same pathId to run it.</para>
<para>If the waypoints form a path which is impossible to achieve, an instance of <computeroutput>std::runtime_error</computeroutput> is thrown (and an error is logged) which describes the waypoints. If there are no waypoints, no path is generated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iwaypoints</parametername>
</parameternamelist>
<parameterdescription>
<para>The waypoints to hit on the path. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ipathId</parametername>
</parameternamelist>
<parameterdescription>
<para>A unique identifier to save the path with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ilimits</parametername>
</parameternamelist>
<parameterdescription>
<para>The limits to use for this path only. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="77" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="44" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1acebf5db475871566e1c8f34c179b00be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool okapi::AsyncLinearMotionProfileController::removePath</definition>
        <argsstring>(const std::string &amp;ipathId)</argsstring>
        <name>removePath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ipathId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes a path and frees the memory it used. This function returns <computeroutput>true</computeroutput> if the path was either deleted or didn&apos;t exist in the first place. It returns <computeroutput>false</computeroutput> if the path could not be removed because it is running.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipathId</parametername>
</parameternamelist>
<parameterdescription>
<para>A unique identifier for the path, previously passed to <ref refid="classokapi_1_1AsyncLinearMotionProfileController_1aef2acba51417d929695ca38e309b0f6c" kindref="member">generatePath()</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><computeroutput>true</computeroutput> if the path no longer exists </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="89" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="139" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1ac8495348b177b54bc2978c8b2a27dd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; okapi::AsyncLinearMotionProfileController::getPaths</definition>
        <argsstring>()</argsstring>
        <name>getPaths</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the identifiers of all paths saved in this <computeroutput><ref refid="classokapi_1_1AsyncMotionProfileController" kindref="compound">AsyncMotionProfileController</ref></computeroutput>.</para>
<para><simplesect kind="return"><para>The identifiers of all paths </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="96" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="161" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a18e3ba77f08cb5dd93a9cba23d4c2a1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::setTarget</definition>
        <argsstring>(std::string ipathId) override</argsstring>
        <name>setTarget</name>
        <reimplements refid="classokapi_1_1ClosedLoopController_1ac14482d0768b3f157d52e0214a4c36d7">setTarget</reimplements>
        <param>
          <type>std::string</type>
          <declname>ipathId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes a path with the given ID. If there is no path matching the ID, the method will return. Any targets set while a path is being followed will be ignored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipathId</parametername>
</parameternamelist>
<parameterdescription>
<para>A unique identifier for the path, previously passed to <computeroutput><ref refid="classokapi_1_1AsyncLinearMotionProfileController_1aef2acba51417d929695ca38e309b0f6c" kindref="member">generatePath()</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="104" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a7b1aa345da6264a6bd76ab106ade2a56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::setTarget</definition>
        <argsstring>(std::string ipathId, bool ibackwards)</argsstring>
        <name>setTarget</name>
        <param>
          <type>std::string</type>
          <declname>ipathId</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ibackwards</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Executes a path with the given ID. If there is no path matching the ID, the method will return. Any targets set while a path is being followed will be ignored.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipathId</parametername>
</parameternamelist>
<parameterdescription>
<para>A unique identifier for the path, previously passed to <computeroutput><ref refid="classokapi_1_1AsyncLinearMotionProfileController_1aef2acba51417d929695ca38e309b0f6c" kindref="member">generatePath()</ref></computeroutput>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ibackwards</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to follow the profile backwards. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="113" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="175" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a45b62483002333a2d99deea8de2af43e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::controllerSet</definition>
        <argsstring>(std::string ivalue) override</argsstring>
        <name>controllerSet</name>
        <reimplements refid="classokapi_1_1ControllerOutput_1a360c08f0c10b36f882d6d3100c2cad49">controllerSet</reimplements>
        <param>
          <type>std::string</type>
          <declname>ivalue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Writes the value of the controller output. This method might be automatically called in another thread by the controller.</para>
<para>This just calls <computeroutput><ref refid="classokapi_1_1AsyncLinearMotionProfileController_1a18e3ba77f08cb5dd93a9cba23d4c2a1e" kindref="member">setTarget()</ref></computeroutput>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="121" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1afc9a1b30a5fd499c38455e8b05982be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string okapi::AsyncLinearMotionProfileController::getTarget</definition>
        <argsstring>() override</argsstring>
        <name>getTarget</name>
        <reimplements refid="classokapi_1_1ClosedLoopController_1a22012bedbfaff6e5a3a508f274ec2497">getTarget</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the last set target, or the default target if none was set.</para>
<para><simplesect kind="return"><para>the last target </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="128" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1accae83d74f347e9a839eeae9d2693917" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>std::string</type>
        <definition>std::string okapi::AsyncLinearMotionProfileController::getTarget</definition>
        <argsstring>() const</argsstring>
        <name>getTarget</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gets the last set target, or the default target if none was set.</para>
<para><simplesect kind="return"><para>the last target </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="135" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1ad2609e435baad67b73b86b48730fdc9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::waitUntilSettled</definition>
        <argsstring>() override</argsstring>
        <name>waitUntilSettled</name>
        <reimplements refid="classokapi_1_1AsyncController_1a20e19f334e3dc7a3092e0e4355edcf49">waitUntilSettled</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Blocks the current task until the controller has settled. This controller is settled when it has finished following a path. If no path is being followed, it is settled. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="141" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="256" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1ab721150111976222636c3591840bfa13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::moveTo</definition>
        <argsstring>(const QLength &amp;iposition, const QLength &amp;itarget, bool ibackwards=false)</argsstring>
        <name>moveTo</name>
        <param>
          <type>const QLength &amp;</type>
          <declname>iposition</declname>
        </param>
        <param>
          <type>const QLength &amp;</type>
          <declname>itarget</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ibackwards</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates a new path from the position (typically the current position) to the target and blocks until the controller has settled. Does not save the path which was generated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iposition</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>itarget</parametername>
</parameternamelist>
<parameterdescription>
<para>The target position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ibackwards</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to follow the profile backwards. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="151" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="267" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1afe90cebb82ac0f61e45b3726506e2685" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::moveTo</definition>
        <argsstring>(const QLength &amp;iposition, const QLength &amp;itarget, const PathfinderLimits &amp;ilimits, bool ibackwards=false)</argsstring>
        <name>moveTo</name>
        <param>
          <type>const QLength &amp;</type>
          <declname>iposition</declname>
        </param>
        <param>
          <type>const QLength &amp;</type>
          <declname>itarget</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1PathfinderLimits" kindref="compound">PathfinderLimits</ref> &amp;</type>
          <declname>ilimits</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ibackwards</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Generates a new path from the position (typically the current position) to the target and blocks until the controller has settled. Does not save the path which was generated.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iposition</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>itarget</parametername>
</parameternamelist>
<parameterdescription>
<para>The target position. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ilimits</parametername>
</parameternamelist>
<parameterdescription>
<para>The limits to use for this path only. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ibackwards</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to follow the profile backwards. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="162" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="273" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a31057c2bb8cface61147b1edd0d97ce5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double okapi::AsyncLinearMotionProfileController::getError</definition>
        <argsstring>() const override</argsstring>
        <name>getError</name>
        <reimplements refid="classokapi_1_1ClosedLoopController_1a50c73444ff6e3e631951c43d0f951953">getError</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the last error of the controller. Does not update when disabled. Returns zero if there is no path currently being followed.</para>
<para><simplesect kind="return"><para>the last error </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="173" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="288" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1aecfed2c6a0ead2c38253250e26ce17d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool okapi::AsyncLinearMotionProfileController::isSettled</definition>
        <argsstring>() override</argsstring>
        <name>isSettled</name>
        <reimplements refid="classokapi_1_1ClosedLoopController_1aed7aa0e94b6474c28314f8517d6cb4d8">isSettled</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the controller has settled at the target. Determining what settling means is implementation-dependent.</para>
<para>If the controller is disabled, this method must return <computeroutput>true</computeroutput>.</para>
<para><simplesect kind="return"><para>whether the controller is settled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="183" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="297" bodyend="299"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a925381153aeda65c448489a8f2c3803c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::reset</definition>
        <argsstring>() override</argsstring>
        <name>reset</name>
        <reimplements refid="classokapi_1_1ClosedLoopController_1a7dd6ce28b3e38bdf987514a1b6c83c8c">reset</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets the controller&apos;s internal state so it is similar to when it was first initialized, while keeping any user-configured information. This implementation also stops movement. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="189" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="301" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a56b05f978f2a98c2183fdae0f13466e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::flipDisable</definition>
        <argsstring>() override</argsstring>
        <name>flipDisable</name>
        <reimplements refid="classokapi_1_1ClosedLoopController_1a9de69b60885df41cd2164fe1a23f34d3">flipDisable</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Changes whether the controller is off or on. Turning the controller on after it was off will NOT cause the controller to move to its last set target. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="195" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="315" bodyend="317"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a3072d7ac1e5d0f387f739657e9f82fd8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::flipDisable</definition>
        <argsstring>(bool iisDisabled) override</argsstring>
        <name>flipDisable</name>
        <reimplements refid="classokapi_1_1ClosedLoopController_1a768cd1db40ce9cd5c89b20be6e838ccc">flipDisable</reimplements>
        <param>
          <type>bool</type>
          <declname>iisDisabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets whether the controller is off or on. Turning the controller on after it was off will NOT cause the controller to move to its last set target, unless it was reset in that time.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iisDisabled</parametername>
</parameternamelist>
<parameterdescription>
<para>whether the controller is disabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="203" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="319" bodyend="324"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a99ae2e378cc88745c82a08b6ddf52ee4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool okapi::AsyncLinearMotionProfileController::isDisabled</definition>
        <argsstring>() const override</argsstring>
        <name>isDisabled</name>
        <reimplements refid="classokapi_1_1ClosedLoopController_1a40bd4ec2b8c75503fbf6f494fd7cbe69">isDisabled</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns whether the controller is currently disabled.</para>
<para><simplesect kind="return"><para>whether the controller is currently disabled </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="210" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="326" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a6cfe67f9e4db556fbed1f2c4c4252b0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::tarePosition</definition>
        <argsstring>() override</argsstring>
        <name>tarePosition</name>
        <reimplements refid="classokapi_1_1AsyncPositionController_1a0af03d0035343cbf843a19374f38a059">tarePosition</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets the &quot;absolute&quot; zero position of the controller to its current position.</para>
<para>This implementation does nothing because the API always requires the starting position to be specified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="218" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="340" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a6b9c0bc4fc13623225f0c02b992b3ed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::startThread</definition>
        <argsstring>()</argsstring>
        <name>startThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the internal thread. This should not be called by normal users. This method is called by the AsyncControllerFactory when making a new instance of this class. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="224" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="330" bodyend="334"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a944e0c5f2dfa054ccfc554c8440f4aef" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classCrossplatformThread" kindref="compound">CrossplatformThread</ref> *</type>
        <definition>CrossplatformThread * okapi::AsyncLinearMotionProfileController::getThread</definition>
        <argsstring>() const</argsstring>
        <name>getThread</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the underlying thread handle.</para>
<para><simplesect kind="return"><para>The underlying thread handle. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="231" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="336" bodyend="338"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a59582a155943d96d5f6be9c06cfbf704" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::forceRemovePath</definition>
        <argsstring>(const std::string &amp;ipathId)</argsstring>
        <name>forceRemovePath</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>ipathId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Attempts to remove a path without stopping execution, then if that fails, disables the controller and removes the path.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipathId</parametername>
</parameternamelist>
<parameterdescription>
<para>The path ID that will be removed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="239" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="343" bodyend="349"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-static-func">
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a9b49662a9d4107ebe1b4799934e472a3" prot="protected" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::trampoline</definition>
        <argsstring>(void *context)</argsstring>
        <name>trampoline</name>
        <param>
          <type>void *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="264" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="250" bodyend="254"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1aee386f2d2697feff54005cf9e91a6e52" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::loop</definition>
        <argsstring>()</argsstring>
        <name>loop</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="265" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="196" bodyend="224"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1ac9f7d18503d72627ff4b7f70d2c373bd" prot="protected" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::AsyncLinearMotionProfileController::executeSinglePath</definition>
        <argsstring>(const TrajectoryPair &amp;path, std::unique_ptr&lt; AbstractRate &gt; rate)</argsstring>
        <name>executeSinglePath</name>
        <param>
          <type>const <ref refid="structokapi_1_1AsyncLinearMotionProfileController_1_1TrajectoryPair" kindref="compound">TrajectoryPair</ref> &amp;</type>
          <declname>path</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classokapi_1_1AbstractRate" kindref="compound">AbstractRate</ref> &gt;</type>
          <declname>rate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Follow the supplied path. Must follow the disabled lifecycle. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="270" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="226" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a3b2473f949bab83f6837b8d448b198cb" prot="protected" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>QAngularSpeed</type>
        <definition>QAngularSpeed okapi::AsyncLinearMotionProfileController::convertLinearToRotational</definition>
        <argsstring>(QSpeed linear) const</argsstring>
        <name>convertLinearToRotational</name>
        <param>
          <type>QSpeed</type>
          <declname>linear</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts linear &quot;chassis&quot; speed to rotational motor speed.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>linear</parametername>
</parameternamelist>
<parameterdescription>
<para>&quot;chassis&quot; frame speed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>motor frame speed </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="278" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1AsyncLinearMotionProfileController_1a6778fc13018167cec6cccfa6abf7a0ad" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string okapi::AsyncLinearMotionProfileController::getPathErrorMessage</definition>
        <argsstring>(const std::vector&lt; Waypoint &gt; &amp;points, const std::string &amp;ipathId, int length)</argsstring>
        <name>getPathErrorMessage</name>
        <param>
          <type>const std::vector&lt; Waypoint &gt; &amp;</type>
          <declname>points</declname>
        </param>
        <param>
          <type>const std::string &amp;</type>
          <declname>ipathId</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="281" column="1" bodyfile="src/api/control/async/asyncLinearMotionProfileController.cpp" bodystart="123" bodyend="137"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="60">
        <label>okapi::AsyncLinearMotionProfileController</label>
        <link refid="classokapi_1_1AsyncLinearMotionProfileController"/>
        <childnode refid="61" relation="public-inheritance">
        </childnode>
      </node>
      <node id="62">
        <label>okapi::AsyncController&lt; std::string, double &gt;</label>
        <link refid="classokapi_1_1AsyncController"/>
        <childnode refid="63" relation="public-inheritance">
        </childnode>
      </node>
      <node id="64">
        <label>okapi::ControllerOutput&lt; std::string &gt;</label>
        <link refid="classokapi_1_1ControllerOutput"/>
      </node>
      <node id="61">
        <label>okapi::AsyncPositionController&lt; std::string, double &gt;</label>
        <link refid="classokapi_1_1AsyncPositionController"/>
        <childnode refid="62" relation="public-inheritance">
        </childnode>
      </node>
      <node id="63">
        <label>okapi::ClosedLoopController&lt; std::string, double &gt;</label>
        <link refid="classokapi_1_1ClosedLoopController"/>
        <childnode refid="64" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="73">
        <label>okapi::PathfinderLimits</label>
        <link refid="structokapi_1_1PathfinderLimits"/>
      </node>
      <node id="65">
        <label>okapi::AsyncLinearMotionProfileController</label>
        <link refid="classokapi_1_1AsyncLinearMotionProfileController"/>
        <childnode refid="66" relation="public-inheritance">
        </childnode>
        <childnode refid="70" relation="usage">
          <edgelabel>pair</edgelabel>
        </childnode>
        <childnode refid="71" relation="usage">
          <edgelabel>task</edgelabel>
        </childnode>
        <childnode refid="72" relation="usage">
          <edgelabel>pathRemoveMutex</edgelabel>
        </childnode>
        <childnode refid="73" relation="usage">
          <edgelabel>limits</edgelabel>
        </childnode>
        <childnode refid="74" relation="usage">
          <edgelabel>timeUtil</edgelabel>
        </childnode>
      </node>
      <node id="72">
        <label>CrossplatformMutex</label>
        <link refid="classCrossplatformMutex"/>
      </node>
      <node id="75">
        <label>okapi::Supplier&lt; std::unique_ptr&lt; okapi::AbstractRate &gt; &gt;</label>
        <link refid="classokapi_1_1Supplier"/>
      </node>
      <node id="77">
        <label>okapi::Supplier&lt; std::unique_ptr&lt; okapi::AbstractTimer &gt; &gt;</label>
        <link refid="classokapi_1_1Supplier"/>
      </node>
      <node id="67">
        <label>okapi::AsyncController&lt; std::string, double &gt;</label>
        <link refid="classokapi_1_1AsyncController"/>
        <childnode refid="68" relation="public-inheritance">
        </childnode>
      </node>
      <node id="70">
        <label>okapi::AbstractMotor::GearsetRatioPair</label>
        <link refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair"/>
      </node>
      <node id="74">
        <label>okapi::TimeUtil</label>
        <link refid="classokapi_1_1TimeUtil"/>
        <childnode refid="75" relation="usage">
          <edgelabel>rateSupplier</edgelabel>
        </childnode>
        <childnode refid="76" relation="usage">
          <edgelabel>settledUtilSupplier</edgelabel>
        </childnode>
        <childnode refid="77" relation="usage">
          <edgelabel>timerSupplier</edgelabel>
        </childnode>
      </node>
      <node id="69">
        <label>okapi::ControllerOutput&lt; std::string &gt;</label>
        <link refid="classokapi_1_1ControllerOutput"/>
      </node>
      <node id="76">
        <label>okapi::Supplier&lt; std::unique_ptr&lt; okapi::SettledUtil &gt; &gt;</label>
        <link refid="classokapi_1_1Supplier"/>
      </node>
      <node id="71">
        <label>CrossplatformThread</label>
        <link refid="classCrossplatformThread"/>
      </node>
      <node id="66">
        <label>okapi::AsyncPositionController&lt; std::string, double &gt;</label>
        <link refid="classokapi_1_1AsyncPositionController"/>
        <childnode refid="67" relation="public-inheritance">
        </childnode>
      </node>
      <node id="68">
        <label>okapi::ClosedLoopController&lt; std::string, double &gt;</label>
        <link refid="classokapi_1_1ClosedLoopController"/>
        <childnode refid="69" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" line="25" column="1" bodyfile="include/okapi/api/control/async/asyncLinearMotionProfileController.hpp" bodystart="25" bodyend="282"/>
    <listofallmembers>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a6a5c233fef5c310eaac306467e6a402b" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>AsyncLinearMotionProfileController</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a9d12f6da129f5c8f8c2c6ddad12274bf" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>AsyncLinearMotionProfileController</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a45b62483002333a2d99deea8de2af43e" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>controllerSet</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a3b2473f949bab83f6837b8d448b198cb" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>convertLinearToRotational</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a010cd3afaa58154ee7a32059cadae555" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>currentPath</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a94c203e635765357bd825ffc4d061741" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>currentProfilePosition</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a0b3cafe78cb551d68c2cb6ac31d1a753" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>diameter</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1af82aa4936830711c126e7f00222fdbd8" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>direction</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a6fc7e4b240646a8e2a8ecc06701e5ee0" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>disabled</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1aa876f79a2053e1f6b01519f17ccaebfa" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>dtorCalled</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1ac9f7d18503d72627ff4b7f70d2c373bd" prot="protected" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>executeSinglePath</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a56b05f978f2a98c2183fdae0f13466e7" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>flipDisable</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a3072d7ac1e5d0f387f739657e9f82fd8" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>flipDisable</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a59582a155943d96d5f6be9c06cfbf704" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>forceRemovePath</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1aef2acba51417d929695ca38e309b0f6c" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>generatePath</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1ada94ccc2679082ea7fb2317458ca80d1" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>generatePath</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a31057c2bb8cface61147b1edd0d97ce5" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>getError</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a6778fc13018167cec6cccfa6abf7a0ad" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>getPathErrorMessage</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1ac8495348b177b54bc2978c8b2a27dd4e" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>getPaths</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1afc9a1b30a5fd499c38455e8b05982be9" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>getTarget</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1accae83d74f347e9a839eeae9d2693917" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>getTarget</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a944e0c5f2dfa054ccfc554c8440f4aef" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>getThread</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a99ae2e378cc88745c82a08b6ddf52ee4" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>isDisabled</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a587f56ae443b18e8fe0b9feeca624b07" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>isRunning</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1aecfed2c6a0ead2c38253250e26ce17d4" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>isSettled</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a9d2bb17d4a934984d488b3b4fba11c6e" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>limits</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1abfdbc29ef850cf20ed15b3c1398c7cc1" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>logger</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1aee386f2d2697feff54005cf9e91a6e52" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>loop</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1ab721150111976222636c3591840bfa13" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>moveTo</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1afe90cebb82ac0f61e45b3726506e2685" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>moveTo</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a27f16841fdb3586adaf978da580e4f31" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>operator=</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a5a718fd422ce52e613e1d231910860a9" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>output</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a3727388c1310a387524b7d38d5c0b1b0" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>pair</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1ac68c8ff11c8a38eca42efd2950584b90" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>pathRemoveMutex</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a955697ca2debe00771c8039b3df328f0" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>paths</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1acebf5db475871566e1c8f34c179b00be" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>removePath</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a925381153aeda65c448489a8f2c3803c" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>reset</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a18e3ba77f08cb5dd93a9cba23d4c2a1e" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>setTarget</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a7b1aa345da6264a6bd76ab106ade2a56" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>setTarget</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a6b9c0bc4fc13623225f0c02b992b3ed6" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>startThread</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a6cfe67f9e4db556fbed1f2c4c4252b0a" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>tarePosition</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1aa49e2d190f4e8af09fdc4b13951c212d" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>task</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a320e12b446817ebc8dfb01c6bb36e3cb" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>timeUtil</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1a9b49662a9d4107ebe1b4799934e472a3" prot="protected" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>trampoline</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1ad2609e435baad67b73b86b48730fdc9c" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>waitUntilSettled</name></member>
      <member refid="classokapi_1_1AsyncLinearMotionProfileController_1aaf6806399023d0a4d7dd0ae1a64b3470" prot="public" virt="non-virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>~AsyncLinearMotionProfileController</name></member>
      <member refid="classokapi_1_1ClosedLoopController_1a7fa88d53b8f248e0894b8e0865918d5b" prot="public" virt="virtual"><scope>okapi::AsyncLinearMotionProfileController</scope><name>~ClosedLoopController</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
