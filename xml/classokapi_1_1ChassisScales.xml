<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1ChassisScales" kind="class" language="C++" prot="public">
    <compoundname>okapi::ChassisScales</compoundname>
    <includes refid="chassisScales_8hpp" local="no">chassisScales.hpp</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classokapi_1_1ChassisScales_1a08c7c4f04b6906683a056077cce18ba0" prot="public" static="no" mutable="no">
        <type>QLength</type>
        <definition>QLength okapi::ChassisScales::wheelDiameter</definition>
        <argsstring></argsstring>
        <name>wheelDiameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="75" column="1" bodyfile="include/okapi/api/chassis/controller/chassisScales.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisScales_1af2e0c71b9daa9d4345de83967f9bf9c9" prot="public" static="no" mutable="no">
        <type>QLength</type>
        <definition>QLength okapi::ChassisScales::wheelTrack</definition>
        <argsstring></argsstring>
        <name>wheelTrack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="76" column="1" bodyfile="include/okapi/api/chassis/controller/chassisScales.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisScales_1ab3b646546992e60d5b05d222b7f7f7c7" prot="public" static="no" mutable="no">
        <type>QLength</type>
        <definition>QLength okapi::ChassisScales::middleWheelDistance</definition>
        <argsstring></argsstring>
        <name>middleWheelDistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="77" column="1" bodyfile="include/okapi/api/chassis/controller/chassisScales.hpp" bodystart="77" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisScales_1a0fc8563377e9f4c17a111b000d58e87b" prot="public" static="no" mutable="no">
        <type>QLength</type>
        <definition>QLength okapi::ChassisScales::middleWheelDiameter</definition>
        <argsstring></argsstring>
        <name>middleWheelDiameter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="78" column="1" bodyfile="include/okapi/api/chassis/controller/chassisScales.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisScales_1aaf1ec10f7cfa955d6d8eaa2b16dd345f" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::ChassisScales::straight</definition>
        <argsstring></argsstring>
        <name>straight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="79" column="1" bodyfile="include/okapi/api/chassis/controller/chassisScales.hpp" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisScales_1aa4babba4794c8f61d41ef6282ba94b64" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::ChassisScales::turn</definition>
        <argsstring></argsstring>
        <name>turn</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="80" column="1" bodyfile="include/okapi/api/chassis/controller/chassisScales.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisScales_1a32b8be3c63099900a27d816b47713930" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::ChassisScales::middle</definition>
        <argsstring></argsstring>
        <name>middle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="81" column="1" bodyfile="include/okapi/api/chassis/controller/chassisScales.hpp" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1ChassisScales_1a9b6fa5ed7d24669f173d6439920890f2" prot="public" static="no" mutable="no">
        <type>std::int32_t</type>
        <definition>std::int32_t okapi::ChassisScales::tpr</definition>
        <argsstring></argsstring>
        <name>tpr</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="82" column="1" bodyfile="include/okapi/api/chassis/controller/chassisScales.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1ChassisScales_1a12c534b3782cabe8fcfc12620ceb5b7e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::ChassisScales::ChassisScales</definition>
        <argsstring>(const std::initializer_list&lt; QLength &gt; &amp;idimensions, std::int32_t itpr, const std::shared_ptr&lt; Logger &gt; &amp;ilogger=Logger::getDefaultLogger())</argsstring>
        <name>ChassisScales</name>
        <param>
          <type>const std::initializer_list&lt; QLength &gt; &amp;</type>
          <declname>idimensions</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>itpr</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt; &amp;</type>
          <declname>ilogger</declname>
          <defval><ref refid="classokapi_1_1Logger_1a5053cf778b4b55acba788a3797dc96d2" kindref="member">Logger::getDefaultLogger</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The scales a Chassis <ref refid="classokapi_1_1Controller" kindref="compound">Controller</ref> needs to do all of its closed-loop control. First index is the wheel diameter, second index is the wheel track. An optional third index is the middle wheel diameter if you are using a 3-encoder setup.</para>
<para>The wheel track is the center-to-center distance between the wheels (center-to-center meaning the width between the centers of both wheels). For example, if you are using four inch omni wheels and there are 11.5 inches between the centers of each wheel, you would call the constructor like so: <ref refid="classokapi_1_1ChassisScales" kindref="compound">ChassisScales</ref> scales({4_in, 11.5_in}); <verbatim>                      Wheel diameter

                       +-+      Center of rotation
                       | |      |
                       v v      +----------+ Length to middle wheel
                                |          | from center of rotation
              +---&gt;    ===      |      === |
              |         +       v       +  |
              |        ++---------------++ |
              |        |                 | v
Wheel track   |        |                 |
              |        |        x        |+|  &lt;-- Middle wheel
              |        |                 |
              |        |                 |
              |        ++---------------++
              |         +               +
              +---&gt;    ===             ===
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idimensions</parametername>
</parameternamelist>
<parameterdescription>
<para>{wheel diameter, wheel track} or {wheel diameter, wheel track, length to middle wheel, middle wheel diameter} </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>itpr</parametername>
</parameternamelist>
<parameterdescription>
<para>The ticks per revolution of the encoders. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ilogger</parametername>
</parameternamelist>
<parameterdescription>
<para>The logger this instance will log to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="56" column="1" bodyfile="src/api/chassis/controller/chassisScales.cpp" bodystart="11" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1ChassisScales_1afde0418a58dc7ff688a4bde5b20ea923" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::ChassisScales::ChassisScales</definition>
        <argsstring>(const std::initializer_list&lt; double &gt; &amp;iscales, std::int32_t itpr, const std::shared_ptr&lt; Logger &gt; &amp;ilogger=Logger::getDefaultLogger())</argsstring>
        <name>ChassisScales</name>
        <param>
          <type>const std::initializer_list&lt; double &gt; &amp;</type>
          <declname>iscales</declname>
        </param>
        <param>
          <type>std::int32_t</type>
          <declname>itpr</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt; &amp;</type>
          <declname>ilogger</declname>
          <defval><ref refid="classokapi_1_1Logger_1a5053cf778b4b55acba788a3797dc96d2" kindref="member">Logger::getDefaultLogger</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The scales a Chassis <ref refid="classokapi_1_1Controller" kindref="compound">Controller</ref> needs to do all of its closed-loop control. First index is the straight scale, second index is the turn scale. An optional third index is the middle scale. The straight scale converts motor degrees to meters, the turn scale converts motor degrees to robot turn degrees, and the middle scale converts middle wheel degrees to meters.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iscales</parametername>
</parameternamelist>
<parameterdescription>
<para>{straight scale, turn scale} or {straight scale, turn scale, length to middle wheel in meters, middle scale} </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>itpr</parametername>
</parameternamelist>
<parameterdescription>
<para>The ticks per revolution of the encoders. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ilogger</parametername>
</parameternamelist>
<parameterdescription>
<para>The logger this instance will log to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="71" column="1" bodyfile="src/api/chassis/controller/chassisScales.cpp" bodystart="45" bodyend="76"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classokapi_1_1ChassisScales_1a74052e85cf75704579b3dca6718acd87" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void okapi::ChassisScales::validateInputSize</definition>
        <argsstring>(std::size_t inputSize, const std::shared_ptr&lt; Logger &gt; &amp;logger)</argsstring>
        <name>validateInputSize</name>
        <param>
          <type>std::size_t</type>
          <declname>inputSize</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt; &amp;</type>
          <declname>logger</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="85" column="1" bodyfile="src/api/chassis/controller/chassisScales.cpp" bodystart="78" bodyend="86"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/okapi/api/chassis/controller/chassisScales.hpp" line="19" column="1" bodyfile="include/okapi/api/chassis/controller/chassisScales.hpp" bodystart="19" bodyend="86"/>
    <listofallmembers>
      <member refid="classokapi_1_1ChassisScales_1a12c534b3782cabe8fcfc12620ceb5b7e" prot="public" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>ChassisScales</name></member>
      <member refid="classokapi_1_1ChassisScales_1afde0418a58dc7ff688a4bde5b20ea923" prot="public" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>ChassisScales</name></member>
      <member refid="classokapi_1_1ChassisScales_1a32b8be3c63099900a27d816b47713930" prot="public" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>middle</name></member>
      <member refid="classokapi_1_1ChassisScales_1a0fc8563377e9f4c17a111b000d58e87b" prot="public" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>middleWheelDiameter</name></member>
      <member refid="classokapi_1_1ChassisScales_1ab3b646546992e60d5b05d222b7f7f7c7" prot="public" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>middleWheelDistance</name></member>
      <member refid="classokapi_1_1ChassisScales_1aaf1ec10f7cfa955d6d8eaa2b16dd345f" prot="public" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>straight</name></member>
      <member refid="classokapi_1_1ChassisScales_1a9b6fa5ed7d24669f173d6439920890f2" prot="public" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>tpr</name></member>
      <member refid="classokapi_1_1ChassisScales_1aa4babba4794c8f61d41ef6282ba94b64" prot="public" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>turn</name></member>
      <member refid="classokapi_1_1ChassisScales_1a74052e85cf75704579b3dca6718acd87" prot="protected" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>validateInputSize</name></member>
      <member refid="classokapi_1_1ChassisScales_1a08c7c4f04b6906683a056077cce18ba0" prot="public" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>wheelDiameter</name></member>
      <member refid="classokapi_1_1ChassisScales_1af2e0c71b9daa9d4345de83967f9bf9c9" prot="public" virt="non-virtual"><scope>okapi::ChassisScales</scope><name>wheelTrack</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
