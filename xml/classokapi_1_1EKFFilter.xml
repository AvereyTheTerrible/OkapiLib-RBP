<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1EKFFilter" kind="class" language="C++" prot="public">
    <compoundname>okapi::EKFFilter</compoundname>
    <basecompoundref refid="classokapi_1_1Filter" prot="public" virt="non-virtual">okapi::Filter</basecompoundref>
    <includes refid="ekfFilter_8hpp" local="no">ekfFilter.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classokapi_1_1EKFFilter_1adc164273e092ddd2644fed11299b3d23" prot="protected" static="no" mutable="no">
        <type>const double</type>
        <definition>const double okapi::EKFFilter::Q</definition>
        <argsstring></argsstring>
        <name>Q</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="64" column="1" bodyfile="include/okapi/api/filter/ekfFilter.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1EKFFilter_1acadc8bcf0ad09e43e86634e4c02f18ab" prot="protected" static="no" mutable="no">
        <type>const double</type>
        <definition>const double okapi::EKFFilter::R</definition>
        <argsstring></argsstring>
        <name>R</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="64" column="1" bodyfile="include/okapi/api/filter/ekfFilter.hpp" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1EKFFilter_1a6c8315a0d23c02f24cff68b1ac005f1c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::EKFFilter::xHat</definition>
        <argsstring></argsstring>
        <name>xHat</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="65" column="1" bodyfile="include/okapi/api/filter/ekfFilter.hpp" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1EKFFilter_1a849990196023b1386d56cae56ac3940b" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::EKFFilter::xHatPrev</definition>
        <argsstring></argsstring>
        <name>xHatPrev</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="66" column="1" bodyfile="include/okapi/api/filter/ekfFilter.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1EKFFilter_1a2be2e844f5465e0905b8d7e41e954461" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::EKFFilter::xHatMinus</definition>
        <argsstring></argsstring>
        <name>xHatMinus</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="67" column="1" bodyfile="include/okapi/api/filter/ekfFilter.hpp" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1EKFFilter_1acad3c08be69a1e49905a11c6e2e3050d" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::EKFFilter::P</definition>
        <argsstring></argsstring>
        <name>P</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="68" column="1" bodyfile="include/okapi/api/filter/ekfFilter.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1EKFFilter_1af3f5ecd50e9e04f0b449bd123c4ce41c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::EKFFilter::Pprev</definition>
        <argsstring></argsstring>
        <name>Pprev</name>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="69" column="1" bodyfile="include/okapi/api/filter/ekfFilter.hpp" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1EKFFilter_1a6ed132e10b9e4ed18c687af7709f4b7c" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::EKFFilter::Pminus</definition>
        <argsstring></argsstring>
        <name>Pminus</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="70" column="1" bodyfile="include/okapi/api/filter/ekfFilter.hpp" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1EKFFilter_1ac6015f67f5730adc2950850b3a414930" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double okapi::EKFFilter::K</definition>
        <argsstring></argsstring>
        <name>K</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="71" column="1" bodyfile="include/okapi/api/filter/ekfFilter.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1EKFFilter_1a99716eac24dd8f87e04f746da9409089" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::EKFFilter::EKFFilter</definition>
        <argsstring>(double iQ=0.0001, double iR=ipow(0.2, 2))</argsstring>
        <name>EKFFilter</name>
        <param>
          <type>double</type>
          <declname>iQ</declname>
          <defval>0.0001</defval>
        </param>
        <param>
          <type>double</type>
          <declname>iR</declname>
          <defval><ref refid="namespaceokapi_1aba6bd8fdde45445ead2bd8c3bf887fb4" kindref="member">ipow</ref>(0.2, 2)</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>One dimensional extended Kalman filter. The default arguments should work fine for most signal filtering. It won&apos;t hurt to graph your signal and the filtered result, and check if the filter is doing its job.</para>
<para>Q is the covariance of the process noise and R is the covariance of the observation noise. The default values for Q and R should be a modest balance between trust in the sensor and FIR filtering.</para>
<para>Think of R as how noisy your sensor is. Its value can be found mathematically by computing the standard deviation of your sensor reading vs. &quot;truth&quot; (of course, &quot;truth&quot; is still an estimate; try to calibrate your robot in a controlled setting where you can minimize the error in what &quot;truth&quot; is).</para>
<para>Think of Q as how noisy your model is. It decides how much &quot;smoothing&quot; the filter does and how far it lags behind the true signal. This parameter is most often used as a &quot;tuning&quot; parameter to adjust the response of the filter.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>iQ</parametername>
</parameternamelist>
<parameterdescription>
<para>process noise covariance </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iR</parametername>
</parameternamelist>
<parameterdescription>
<para>measurement noise covariance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="37" column="1" bodyfile="src/api/filter/ekfFilter.cpp" bodystart="11" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1EKFFilter_1a7deb4e14f154247b5521afa7603d09fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double okapi::EKFFilter::filter</definition>
        <argsstring>(double ireading) override</argsstring>
        <name>filter</name>
        <reimplements refid="classokapi_1_1Filter_1a7c2ea0b64b37b688900189856d58da15">filter</reimplements>
        <param>
          <type>double</type>
          <declname>ireading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Filters a value, like a sensor reading. Assumes the control input is zero.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ireading</parametername>
</parameternamelist>
<parameterdescription>
<para>new measurement </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>filtered result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="45" column="1" bodyfile="src/api/filter/ekfFilter.cpp" bodystart="14" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1EKFFilter_1a3999b84a0cf2cd2a4b5de20cfa7ed1f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double okapi::EKFFilter::filter</definition>
        <argsstring>(double ireading, double icontrol)</argsstring>
        <name>filter</name>
        <param>
          <type>double</type>
          <declname>ireading</declname>
        </param>
        <param>
          <type>double</type>
          <declname>icontrol</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Filters a reading with a control input.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ireading</parametername>
</parameternamelist>
<parameterdescription>
<para>new measurement </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>icontrol</parametername>
</parameternamelist>
<parameterdescription>
<para>control input </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>filtered result </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="54" column="1" bodyfile="src/api/filter/ekfFilter.cpp" bodystart="18" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1EKFFilter_1aaf3048eb6d68d248de7c59f84b0d1201" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double okapi::EKFFilter::getOutput</definition>
        <argsstring>() const override</argsstring>
        <name>getOutput</name>
        <reimplements refid="classokapi_1_1Filter_1a3469cd4bc108f8accf300d9f5cc9f42f">getOutput</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the previous output from filter.</para>
<para><simplesect kind="return"><para>the previous output from filter </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/filter/ekfFilter.hpp" line="61" column="1" bodyfile="src/api/filter/ekfFilter.cpp" bodystart="34" bodyend="36"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="301">
        <label>okapi::EKFFilter</label>
        <link refid="classokapi_1_1EKFFilter"/>
        <childnode refid="302" relation="public-inheritance">
        </childnode>
      </node>
      <node id="302">
        <label>okapi::Filter</label>
        <link refid="classokapi_1_1Filter"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="303">
        <label>okapi::EKFFilter</label>
        <link refid="classokapi_1_1EKFFilter"/>
        <childnode refid="304" relation="public-inheritance">
        </childnode>
      </node>
      <node id="304">
        <label>okapi::Filter</label>
        <link refid="classokapi_1_1Filter"/>
      </node>
    </collaborationgraph>
    <location file="include/okapi/api/filter/ekfFilter.hpp" line="14" column="1" bodyfile="include/okapi/api/filter/ekfFilter.hpp" bodystart="14" bodyend="72"/>
    <listofallmembers>
      <member refid="classokapi_1_1EKFFilter_1a99716eac24dd8f87e04f746da9409089" prot="public" virt="non-virtual"><scope>okapi::EKFFilter</scope><name>EKFFilter</name></member>
      <member refid="classokapi_1_1EKFFilter_1a7deb4e14f154247b5521afa7603d09fd" prot="public" virt="virtual"><scope>okapi::EKFFilter</scope><name>filter</name></member>
      <member refid="classokapi_1_1EKFFilter_1a3999b84a0cf2cd2a4b5de20cfa7ed1f8" prot="public" virt="virtual"><scope>okapi::EKFFilter</scope><name>filter</name></member>
      <member refid="classokapi_1_1EKFFilter_1aaf3048eb6d68d248de7c59f84b0d1201" prot="public" virt="virtual"><scope>okapi::EKFFilter</scope><name>getOutput</name></member>
      <member refid="classokapi_1_1EKFFilter_1ac6015f67f5730adc2950850b3a414930" prot="protected" virt="non-virtual"><scope>okapi::EKFFilter</scope><name>K</name></member>
      <member refid="classokapi_1_1EKFFilter_1acad3c08be69a1e49905a11c6e2e3050d" prot="protected" virt="non-virtual"><scope>okapi::EKFFilter</scope><name>P</name></member>
      <member refid="classokapi_1_1EKFFilter_1a6ed132e10b9e4ed18c687af7709f4b7c" prot="protected" virt="non-virtual"><scope>okapi::EKFFilter</scope><name>Pminus</name></member>
      <member refid="classokapi_1_1EKFFilter_1af3f5ecd50e9e04f0b449bd123c4ce41c" prot="protected" virt="non-virtual"><scope>okapi::EKFFilter</scope><name>Pprev</name></member>
      <member refid="classokapi_1_1EKFFilter_1adc164273e092ddd2644fed11299b3d23" prot="protected" virt="non-virtual"><scope>okapi::EKFFilter</scope><name>Q</name></member>
      <member refid="classokapi_1_1EKFFilter_1acadc8bcf0ad09e43e86634e4c02f18ab" prot="protected" virt="non-virtual"><scope>okapi::EKFFilter</scope><name>R</name></member>
      <member refid="classokapi_1_1EKFFilter_1a6c8315a0d23c02f24cff68b1ac005f1c" prot="protected" virt="non-virtual"><scope>okapi::EKFFilter</scope><name>xHat</name></member>
      <member refid="classokapi_1_1EKFFilter_1a2be2e844f5465e0905b8d7e41e954461" prot="protected" virt="non-virtual"><scope>okapi::EKFFilter</scope><name>xHatMinus</name></member>
      <member refid="classokapi_1_1EKFFilter_1a849990196023b1386d56cae56ac3940b" prot="protected" virt="non-virtual"><scope>okapi::EKFFilter</scope><name>xHatPrev</name></member>
      <member refid="classokapi_1_1Filter_1a7391c913f315e28947bbfc3d8e29bef8" prot="public" virt="virtual"><scope>okapi::EKFFilter</scope><name>~Filter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
