<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1Potentiometer" kind="class" language="C++" prot="public">
    <compoundname>okapi::Potentiometer</compoundname>
    <basecompoundref refid="classokapi_1_1RotarySensor" prot="public" virt="non-virtual">okapi::RotarySensor</basecompoundref>
    <includes refid="potentiometer_8hpp" local="no">potentiometer.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classokapi_1_1Potentiometer_1ade12a9942bf6fd83f43e38f22ed210d3" prot="protected" static="no" mutable="no">
        <type>std::uint8_t</type>
        <definition>std::uint8_t okapi::Potentiometer::port</definition>
        <argsstring></argsstring>
        <name>port</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/rotarysensor/potentiometer.hpp" line="36" column="1" bodyfile="include/okapi/impl/device/rotarysensor/potentiometer.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1Potentiometer_1a1e528bdba36d41f3698f3f451d2a2510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::Potentiometer::Potentiometer</definition>
        <argsstring>(std::uint8_t iport)</argsstring>
        <name>Potentiometer</name>
        <param>
          <type>std::uint8_t</type>
          <declname>iport</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/rotarysensor/potentiometer.hpp" line="16" column="1" bodyfile="src/impl/device/rotarysensor/potentiometer.cpp" bodystart="11" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Potentiometer_1a60553115f275e91469a02a7290a9f33c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>okapi::Potentiometer::~Potentiometer</definition>
        <argsstring>()</argsstring>
        <name>~Potentiometer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/rotarysensor/potentiometer.hpp" line="18" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Potentiometer_1ad81adf2cb10b830272e9a553b668fc4b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double okapi::Potentiometer::get</definition>
        <argsstring>() const override</argsstring>
        <name>get</name>
        <reimplements refid="classokapi_1_1RotarySensor_1ac5534dc6c3bcbd8ea2f4e54a04cda734">get</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current sensor value.</para>
<para><simplesect kind="return"><para>the current sensor value, or <computeroutput>PROS_ERR</computeroutput> on a failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/rotarysensor/potentiometer.hpp" line="25" column="1" bodyfile="src/impl/device/rotarysensor/potentiometer.cpp" bodystart="17" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1Potentiometer_1a8498720272d220e06ade0efbed634d3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double okapi::Potentiometer::controllerGet</definition>
        <argsstring>() override</argsstring>
        <name>controllerGet</name>
        <reimplements refid="classokapi_1_1ControllerInput_1a3c6c86d897983f367928a93890551e17">controllerGet</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the sensor value for use in a control loop. This method might be automatically called in another thread by the controller.</para>
<para><simplesect kind="return"><para>the current sensor value, or <computeroutput>PROS_ERR</computeroutput> on a failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/rotarysensor/potentiometer.hpp" line="33" column="1" bodyfile="src/impl/device/rotarysensor/potentiometer.cpp" bodystart="21" bodyend="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="460">
        <label>okapi::Potentiometer</label>
        <link refid="classokapi_1_1Potentiometer"/>
        <childnode refid="461" relation="public-inheritance">
        </childnode>
      </node>
      <node id="461">
        <label>okapi::RotarySensor</label>
        <link refid="classokapi_1_1RotarySensor"/>
        <childnode refid="462" relation="public-inheritance">
        </childnode>
      </node>
      <node id="462">
        <label>okapi::ControllerInput&lt; double &gt;</label>
        <link refid="classokapi_1_1ControllerInput"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="463">
        <label>okapi::Potentiometer</label>
        <link refid="classokapi_1_1Potentiometer"/>
        <childnode refid="464" relation="public-inheritance">
        </childnode>
      </node>
      <node id="464">
        <label>okapi::RotarySensor</label>
        <link refid="classokapi_1_1RotarySensor"/>
        <childnode refid="465" relation="public-inheritance">
        </childnode>
      </node>
      <node id="465">
        <label>okapi::ControllerInput&lt; double &gt;</label>
        <link refid="classokapi_1_1ControllerInput"/>
      </node>
    </collaborationgraph>
    <location file="include/okapi/impl/device/rotarysensor/potentiometer.hpp" line="14" column="1" bodyfile="include/okapi/impl/device/rotarysensor/potentiometer.hpp" bodystart="14" bodyend="37"/>
    <listofallmembers>
      <member refid="classokapi_1_1Potentiometer_1a8498720272d220e06ade0efbed634d3e" prot="public" virt="virtual"><scope>okapi::Potentiometer</scope><name>controllerGet</name></member>
      <member refid="classokapi_1_1Potentiometer_1ad81adf2cb10b830272e9a553b668fc4b" prot="public" virt="virtual"><scope>okapi::Potentiometer</scope><name>get</name></member>
      <member refid="classokapi_1_1Potentiometer_1ade12a9942bf6fd83f43e38f22ed210d3" prot="protected" virt="non-virtual"><scope>okapi::Potentiometer</scope><name>port</name></member>
      <member refid="classokapi_1_1Potentiometer_1a1e528bdba36d41f3698f3f451d2a2510" prot="public" virt="non-virtual"><scope>okapi::Potentiometer</scope><name>Potentiometer</name></member>
      <member refid="classokapi_1_1Potentiometer_1a60553115f275e91469a02a7290a9f33c" prot="public" virt="virtual"><scope>okapi::Potentiometer</scope><name>~Potentiometer</name></member>
      <member refid="classokapi_1_1RotarySensor_1ad34ebb82ce8e5487a286ce95c1aad086" prot="public" virt="virtual"><scope>okapi::Potentiometer</scope><name>~RotarySensor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
