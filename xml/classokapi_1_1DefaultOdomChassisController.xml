<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1DefaultOdomChassisController" kind="class" language="C++" prot="public">
    <compoundname>okapi::DefaultOdomChassisController</compoundname>
    <basecompoundref refid="classokapi_1_1OdomChassisController" prot="public" virt="non-virtual">okapi::OdomChassisController</basecompoundref>
    <includes refid="defaultOdomChassisController_8hpp" local="no">defaultOdomChassisController.hpp</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classokapi_1_1DefaultOdomChassisController_1a1e34483ae1bcef368d80b69f54a3b091" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt;</type>
        <definition>std::shared_ptr&lt;Logger&gt; okapi::DefaultOdomChassisController::logger</definition>
        <argsstring></argsstring>
        <name>logger</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="159" column="1" bodyfile="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classokapi_1_1DefaultOdomChassisController_1a0513b32bd09e7af2b82a5d67895b6165" prot="protected" static="no" mutable="no">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref> &gt;</type>
        <definition>std::shared_ptr&lt;ChassisController&gt; okapi::DefaultOdomChassisController::controller</definition>
        <argsstring></argsstring>
        <name>controller</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="160" column="1" bodyfile="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1ab0b6772507b1e7dc25aea0612ffffbab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::DefaultOdomChassisController::DefaultOdomChassisController</definition>
        <argsstring>(const TimeUtil &amp;itimeUtil, std::unique_ptr&lt; Odometry &gt; iodometry, std::shared_ptr&lt; ChassisController &gt; icontroller, const StateMode &amp;imode=StateMode::FRAME_TRANSFORMATION, QLength imoveThreshold=0_mm, QAngle iturnThreshold=0_deg, std::shared_ptr&lt; Logger &gt; ilogger=Logger::getDefaultLogger())</argsstring>
        <name>DefaultOdomChassisController</name>
        <param>
          <type>const <ref refid="classokapi_1_1TimeUtil" kindref="compound">TimeUtil</ref> &amp;</type>
          <declname>itimeUtil</declname>
        </param>
        <param>
          <type>std::unique_ptr&lt; <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> &gt;</type>
          <declname>iodometry</declname>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref> &gt;</type>
          <declname>icontroller</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceokapi_1af37fbd761bd859a00ff4dd4a87dd8c07" kindref="member">StateMode</ref> &amp;</type>
          <declname>imode</declname>
          <defval><ref refid="namespaceokapi_1af37fbd761bd859a00ff4dd4a87dd8c07ad5ed7666e5cebf60d3af20a5a46edf3b" kindref="member">StateMode::FRAME_TRANSFORMATION</ref></defval>
        </param>
        <param>
          <type>QLength</type>
          <declname>imoveThreshold</declname>
          <defval>0_mm</defval>
        </param>
        <param>
          <type>QAngle</type>
          <declname>iturnThreshold</declname>
          <defval>0_deg</defval>
        </param>
        <param>
          <type>std::shared_ptr&lt; <ref refid="classokapi_1_1Logger" kindref="compound">Logger</ref> &gt;</type>
          <declname>ilogger</declname>
          <defval><ref refid="classokapi_1_1Logger_1a5053cf778b4b55acba788a3797dc96d2" kindref="member">Logger::getDefaultLogger</ref>()</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> based chassis controller that moves using the V5 motor&apos;s integrated control. Spins up a task at the default priority plus 1 for odometry when constructed.</para>
<para>Moves the robot around in the odom frame. Instead of telling the robot to drive forward or turn some amount, you instead tell it to drive to a specific point on the field or turn to a specific angle, relative to its starting position.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>itimeUtil</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classokapi_1_1TimeUtil" kindref="compound">TimeUtil</ref>. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iodometry</parametername>
</parameternamelist>
<parameterdescription>
<para>The odometry to read state estimates from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>icontroller</parametername>
</parameternamelist>
<parameterdescription>
<para>The chassis controller to delegate to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imode</parametername>
</parameternamelist>
<parameterdescription>
<para>The new default StateMode used to interpret target points and query the <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>imoveThreshold</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum length movement (smaller movements will be skipped) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>iturnThreshold</parametername>
</parameternamelist>
<parameterdescription>
<para>minimum angle turn (smaller turns will be skipped) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ilogger</parametername>
</parameternamelist>
<parameterdescription>
<para>The logger this instance will log to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="36" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="13" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a93e8f16e2f9d162d14a2aec69e969cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::DefaultOdomChassisController::DefaultOdomChassisController</definition>
        <argsstring>(const DefaultOdomChassisController &amp;)=delete</argsstring>
        <name>DefaultOdomChassisController</name>
        <param>
          <type>const <ref refid="classokapi_1_1DefaultOdomChassisController" kindref="compound">DefaultOdomChassisController</ref> &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a08eb9b5f888b80392ce9b6652b9eaa4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::DefaultOdomChassisController::DefaultOdomChassisController</definition>
        <argsstring>(DefaultOdomChassisController &amp;&amp;other)=delete</argsstring>
        <name>DefaultOdomChassisController</name>
        <param>
          <type><ref refid="classokapi_1_1DefaultOdomChassisController" kindref="compound">DefaultOdomChassisController</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="45" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a1afd04cb4449601d959bcdc7d03091ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1DefaultOdomChassisController" kindref="compound">DefaultOdomChassisController</ref> &amp;</type>
        <definition>DefaultOdomChassisController&amp; okapi::DefaultOdomChassisController::operator=</definition>
        <argsstring>(const DefaultOdomChassisController &amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classokapi_1_1DefaultOdomChassisController" kindref="compound">DefaultOdomChassisController</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="46" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1ab8d67b8e5ded9fb80dd7538f96fe7e59" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1DefaultOdomChassisController" kindref="compound">DefaultOdomChassisController</ref> &amp;</type>
        <definition>DefaultOdomChassisController&amp; okapi::DefaultOdomChassisController::operator=</definition>
        <argsstring>(DefaultOdomChassisController &amp;&amp;other)=delete</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classokapi_1_1DefaultOdomChassisController" kindref="compound">DefaultOdomChassisController</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1ad89098abcab5e9f333cb3c70c9e8299f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::driveToPoint</definition>
        <argsstring>(const Point &amp;ipoint, bool ibackwards=false, const QLength &amp;ioffset=0_mm) override</argsstring>
        <name>driveToPoint</name>
        <reimplements refid="classokapi_1_1OdomChassisController_1abea9bd3860ad9f1acb1cdc1e36869fbf">driveToPoint</reimplements>
        <param>
          <type>const <ref refid="structokapi_1_1Point" kindref="compound">Point</ref> &amp;</type>
          <declname>ipoint</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>ibackwards</declname>
          <defval>false</defval>
        </param>
        <param>
          <type>const QLength &amp;</type>
          <declname>ioffset</declname>
          <defval>0_mm</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Drives the robot straight to a point in the odom frame.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The target point to navigate to. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ibackwards</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to drive to the target point backwards. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ioffset</parametername>
</parameternamelist>
<parameterdescription>
<para>An offset from the target point in the direction pointing towards the robot. The robot will stop this far away from the target point. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="57" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="26" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a6692219d4f4c264346c5c8096be41610" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::turnToPoint</definition>
        <argsstring>(const Point &amp;ipoint) override</argsstring>
        <name>turnToPoint</name>
        <reimplements refid="classokapi_1_1OdomChassisController_1a4566bc34f36fd107bc868b17942f4245">turnToPoint</reimplements>
        <param>
          <type>const <ref refid="structokapi_1_1Point" kindref="compound">Point</ref> &amp;</type>
          <declname>ipoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Turns the robot to face a point in the odom frame.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The target point to turn to face. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="66" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="54" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a2b5fc33c7fbe8d6fd49f4fd46fb84a2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ChassisController &gt; okapi::DefaultOdomChassisController::getChassisController</definition>
        <argsstring>()</argsstring>
        <name>getChassisController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The internal <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="71" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="141" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1add1bed5d02d3da37306ef0016b7ad8a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref> &amp;</type>
        <definition>ChassisController &amp; okapi::DefaultOdomChassisController::chassisController</definition>
        <argsstring>()</argsstring>
        <name>chassisController</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The internal <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="76" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="145" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1aaf6e4d74384b87510d35b639e45f9dc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::turnToAngle</definition>
        <argsstring>(const QAngle &amp;iangle) override</argsstring>
        <name>turnToAngle</name>
        <reimplements refid="classokapi_1_1OdomChassisController_1ac90298bb9081d95c52800dbf679dd658">turnToAngle</reimplements>
        <param>
          <type>const QAngle &amp;</type>
          <declname>iangle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="81" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="68" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a3143bc60f72ab8ff8f63aad9a810a1c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::moveDistance</definition>
        <argsstring>(QLength itarget) override</argsstring>
        <name>moveDistance</name>
        <reimplements refid="classokapi_1_1ChassisController_1a6d5b69139dfa8b814d05c74c22bcaa43">moveDistance</reimplements>
        <param>
          <type>QLength</type>
          <declname>itarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="86" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="81" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a42abd53b9a0b96b722186ada8eb13d98" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::moveDistance</definition>
        <argsstring>(double itarget) override</argsstring>
        <name>moveDistance</name>
        <reimplements refid="classokapi_1_1ChassisController_1a58619e777fd1b3f8e1aae871d46a8ccf">moveDistance</reimplements>
        <param>
          <type>double</type>
          <declname>itarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="91" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a61ca0d303fcbfd08932157af9adbbb12" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::moveDistanceAsync</definition>
        <argsstring>(QLength itarget) override</argsstring>
        <name>moveDistanceAsync</name>
        <reimplements refid="classokapi_1_1ChassisController_1a67a17268b871a4f1ae74d67891cbf5dd">moveDistanceAsync</reimplements>
        <param>
          <type>QLength</type>
          <declname>itarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="96" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1ab1abaec33ecce2515895d3a8af363c8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::moveDistanceAsync</definition>
        <argsstring>(double itarget) override</argsstring>
        <name>moveDistanceAsync</name>
        <reimplements refid="classokapi_1_1ChassisController_1a24b46ec1c42f32c0527d57738a07820a">moveDistanceAsync</reimplements>
        <param>
          <type>double</type>
          <declname>itarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="101" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="93" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a4ba07ac4bea9ff2d8aea30be72f6a0ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::turnAngle</definition>
        <argsstring>(QAngle idegTarget) override</argsstring>
        <name>turnAngle</name>
        <reimplements refid="classokapi_1_1ChassisController_1aab12308b3fad6793c007d7a33730a3f7">turnAngle</reimplements>
        <param>
          <type>QAngle</type>
          <declname>idegTarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="106" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="97" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a05a8a6684b3afe4f7c2ecbc24699f70d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::turnAngle</definition>
        <argsstring>(double idegTarget) override</argsstring>
        <name>turnAngle</name>
        <reimplements refid="classokapi_1_1ChassisController_1a6aca227e35ececd02eed1cc42d09ad1d">turnAngle</reimplements>
        <param>
          <type>double</type>
          <declname>idegTarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="111" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="101" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a18d748097a7938e3102638d17be54c76" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::turnAngleAsync</definition>
        <argsstring>(QAngle idegTarget) override</argsstring>
        <name>turnAngleAsync</name>
        <reimplements refid="classokapi_1_1ChassisController_1a87fc1f88bf06340d8f022a8c185b5e87">turnAngleAsync</reimplements>
        <param>
          <type>QAngle</type>
          <declname>idegTarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="116" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="105" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a948978204fc6f2a2443025dfdb0241b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::turnAngleAsync</definition>
        <argsstring>(double idegTarget) override</argsstring>
        <name>turnAngleAsync</name>
        <reimplements refid="classokapi_1_1ChassisController_1a35cadd99478629637b4bd3a5e709871a">turnAngleAsync</reimplements>
        <param>
          <type>double</type>
          <declname>idegTarget</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="121" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="109" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1aed92ba0b7a9fc15bf645f3789e8598ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::setTurnsMirrored</definition>
        <argsstring>(bool ishouldMirror) override</argsstring>
        <name>setTurnsMirrored</name>
        <reimplements refid="classokapi_1_1ChassisController_1a37ae36ec8936272eb31e3baed7eed417">setTurnsMirrored</reimplements>
        <param>
          <type>bool</type>
          <declname>ishouldMirror</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="126" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="113" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a44599379129060bdb44e6f603ee5777b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::waitUntilSettled</definition>
        <argsstring>() override</argsstring>
        <name>waitUntilSettled</name>
        <reimplements refid="classokapi_1_1ChassisController_1a01ed4e0eb7332cc149228387bbf1e91c">waitUntilSettled</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="131" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1af6a98415e2c4e17dfec77e215efb1a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void okapi::DefaultOdomChassisController::stop</definition>
        <argsstring>() override</argsstring>
        <name>stop</name>
        <reimplements refid="classokapi_1_1ChassisController_1ac67edbbbe1c8480c4503b9875a3719cd">stop</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="136" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="121" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1afa07913b30d47c790fcdce8c2b85a468" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classokapi_1_1ChassisScales" kindref="compound">ChassisScales</ref></type>
        <definition>ChassisScales okapi::DefaultOdomChassisController::getChassisScales</definition>
        <argsstring>() const override</argsstring>
        <name>getChassisScales</name>
        <reimplements refid="classokapi_1_1ChassisController_1a0a8e32fc7adad8567f550954505aaa06">getChassisScales</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="141" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a6912dbe99776f79fb3a6990e2fbea2ff" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair" kindref="compound">AbstractMotor::GearsetRatioPair</ref></type>
        <definition>AbstractMotor::GearsetRatioPair okapi::DefaultOdomChassisController::getGearsetRatioPair</definition>
        <argsstring>() const override</argsstring>
        <name>getGearsetRatioPair</name>
        <reimplements refid="classokapi_1_1ChassisController_1aa19351888b997d4a6596dac24520ebff">getGearsetRatioPair</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="146" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1a83e8bf7115086c331ada990ceb872bf1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::shared_ptr&lt; <ref refid="classokapi_1_1ChassisModel" kindref="compound">ChassisModel</ref> &gt;</type>
        <definition>std::shared_ptr&lt; ChassisModel &gt; okapi::DefaultOdomChassisController::getModel</definition>
        <argsstring>() override</argsstring>
        <name>getModel</name>
        <reimplements refid="classokapi_1_1ChassisController_1a1971d4b54b61718437824c026aca53c9">getModel</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="151" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1DefaultOdomChassisController_1aa917086153b6298bf7792fd3b31ac240" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classokapi_1_1ChassisModel" kindref="compound">ChassisModel</ref> &amp;</type>
        <definition>ChassisModel &amp; okapi::DefaultOdomChassisController::model</definition>
        <argsstring>() override</argsstring>
        <name>model</name>
        <reimplements refid="classokapi_1_1ChassisController_1a239802eda7e4317a65d1a04994f7b97e">model</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This delegates to the input <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="156" column="1" bodyfile="src/api/chassis/controller/defaultOdomChassisController.cpp" bodystart="137" bodyend="139"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="286">
        <label>okapi::DefaultOdomChassisController</label>
        <link refid="classokapi_1_1DefaultOdomChassisController"/>
        <childnode refid="287" relation="public-inheritance">
        </childnode>
      </node>
      <node id="288">
        <label>okapi::ChassisController</label>
        <link refid="classokapi_1_1ChassisController"/>
      </node>
      <node id="287">
        <label>okapi::OdomChassisController</label>
        <link refid="classokapi_1_1OdomChassisController"/>
        <childnode refid="288" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="294">
        <label>okapi::Supplier&lt; std::unique_ptr&lt; okapi::AbstractRate &gt; &gt;</label>
        <link refid="classokapi_1_1Supplier"/>
      </node>
      <node id="296">
        <label>okapi::Supplier&lt; std::unique_ptr&lt; okapi::AbstractTimer &gt; &gt;</label>
        <link refid="classokapi_1_1Supplier"/>
      </node>
      <node id="293">
        <label>okapi::TimeUtil</label>
        <link refid="classokapi_1_1TimeUtil"/>
        <childnode refid="294" relation="usage">
          <edgelabel>rateSupplier</edgelabel>
        </childnode>
        <childnode refid="295" relation="usage">
          <edgelabel>settledUtilSupplier</edgelabel>
        </childnode>
        <childnode refid="296" relation="usage">
          <edgelabel>timerSupplier</edgelabel>
        </childnode>
      </node>
      <node id="289">
        <label>okapi::DefaultOdomChassisController</label>
        <link refid="classokapi_1_1DefaultOdomChassisController"/>
        <childnode refid="290" relation="public-inheritance">
        </childnode>
      </node>
      <node id="295">
        <label>okapi::Supplier&lt; std::unique_ptr&lt; okapi::SettledUtil &gt; &gt;</label>
        <link refid="classokapi_1_1Supplier"/>
      </node>
      <node id="291">
        <label>okapi::ChassisController</label>
        <link refid="classokapi_1_1ChassisController"/>
      </node>
      <node id="292">
        <label>CrossplatformThread</label>
        <link refid="classCrossplatformThread"/>
      </node>
      <node id="290">
        <label>okapi::OdomChassisController</label>
        <link refid="classokapi_1_1OdomChassisController"/>
        <childnode refid="291" relation="public-inheritance">
        </childnode>
        <childnode refid="292" relation="usage">
          <edgelabel>odomTask</edgelabel>
        </childnode>
        <childnode refid="293" relation="usage">
          <edgelabel>timeUtil</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" line="17" column="1" bodyfile="include/okapi/api/chassis/controller/defaultOdomChassisController.hpp" bodystart="17" bodyend="161"/>
    <listofallmembers>
      <member refid="classokapi_1_1DefaultOdomChassisController_1add1bed5d02d3da37306ef0016b7ad8a2" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>chassisController</name></member>
      <member refid="classokapi_1_1ChassisController_1a8a4a431cb9da03a1c84e600dc0e31333" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>ChassisController</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a0513b32bd09e7af2b82a5d67895b6165" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>controller</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1ab0b6772507b1e7dc25aea0612ffffbab" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>DefaultOdomChassisController</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a93e8f16e2f9d162d14a2aec69e969cdb" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>DefaultOdomChassisController</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a08eb9b5f888b80392ce9b6652b9eaa4c" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>DefaultOdomChassisController</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a762ce2bcc4cdbfd0c6bd296ba21a4c4d" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>defaultStateMode</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1ad89098abcab5e9f333cb3c70c9e8299f" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>driveToPoint</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a2af36f833e8ac382c4386f729f904bae" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>dtorCalled</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a2b5fc33c7fbe8d6fd49f4fd46fb84a2d" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>getChassisController</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1afa07913b30d47c790fcdce8c2b85a468" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>getChassisScales</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a6912dbe99776f79fb3a6990e2fbea2ff" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>getGearsetRatioPair</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a83e8bf7115086c331ada990ceb872bf1" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>getModel</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a6523c9291a330272edcf951e6653ae02" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>getMoveThreshold</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a6ab78730e502dc551894e7efdb9f4edf" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>getOdomThread</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a4f4a588ea6e302e9cf13fb776ce0c5e4" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>getState</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a17e3855a8b8ecdb9a027828d604722d9" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>getTurnThreshold</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a1e34483ae1bcef368d80b69f54a3b091" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>logger</name></member>
      <member refid="classokapi_1_1OdomChassisController_1aafdbc13dae2d14e13b879dd7d93993c7" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>loop</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1aa917086153b6298bf7792fd3b31ac240" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>model</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a3143bc60f72ab8ff8f63aad9a810a1c6" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>moveDistance</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a42abd53b9a0b96b722186ada8eb13d98" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>moveDistance</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a61ca0d303fcbfd08932157af9adbbb12" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>moveDistanceAsync</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1ab1abaec33ecce2515895d3a8af363c8c" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>moveDistanceAsync</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a8fc34ac66535e1a2afaf8856f09a9f95" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>moveThreshold</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a7167160f48f0f75fb1bc7964c4cc608b" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>odom</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a3a550eef9b0030b6057eeaf8c5a3bb51" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>OdomChassisController</name></member>
      <member refid="classokapi_1_1OdomChassisController_1ad9b7ee54f60d1974c2824f8fbcff1304" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>OdomChassisController</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a841d9679487509c9805e030ad7a663a9" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>OdomChassisController</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a75246d7a17442c9a63afaef68bbf95e0" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>odomTask</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a1afd04cb4449601d959bcdc7d03091ae" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>operator=</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1ab8d67b8e5ded9fb80dd7538f96fe7e59" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>operator=</name></member>
      <member refid="classokapi_1_1OdomChassisController_1abf1d2bbcacf41866867e03e7bdd68f06" prot="public" virt="non-virtual" ambiguityscope="okapi::OdomChassisController::"><scope>okapi::DefaultOdomChassisController</scope><name>operator=</name></member>
      <member refid="classokapi_1_1OdomChassisController_1ab0f6b3231dde46d04d570ec31caf7495" prot="public" virt="non-virtual" ambiguityscope="okapi::OdomChassisController::"><scope>okapi::DefaultOdomChassisController</scope><name>operator=</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a79152ae9fb43abbb51179f7bd7ce5fde" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>setDefaultStateMode</name></member>
      <member refid="classokapi_1_1OdomChassisController_1adf98b0e1b91d1f72cce5b76b992257a0" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>setMoveThreshold</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a1e3a4b62e89ab0869c4046983ab7d11b" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>setState</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1aed92ba0b7a9fc15bf645f3789e8598ae" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>setTurnsMirrored</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a771daa37b47909a523571e9173f676d5" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>setTurnThreshold</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a519c7ad1905fbf9132c95e1e14bc973c" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>startOdomThread</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1af6a98415e2c4e17dfec77e215efb1a41" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>stop</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a3afde0b7a16a998873923f41fedb041a" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>timeUtil</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a11be9684a858686cfc3204b493422308" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>trampoline</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a4ba07ac4bea9ff2d8aea30be72f6a0ea" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>turnAngle</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a05a8a6684b3afe4f7c2ecbc24699f70d" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>turnAngle</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a18d748097a7938e3102638d17be54c76" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>turnAngleAsync</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a948978204fc6f2a2443025dfdb0241b1" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>turnAngleAsync</name></member>
      <member refid="classokapi_1_1OdomChassisController_1ac0d74721713d2928a047562675ae25ef" prot="protected" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>turnThreshold</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1aaf6e4d74384b87510d35b639e45f9dc2" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>turnToAngle</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a6692219d4f4c264346c5c8096be41610" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>turnToPoint</name></member>
      <member refid="classokapi_1_1DefaultOdomChassisController_1a44599379129060bdb44e6f603ee5777b" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>waitUntilSettled</name></member>
      <member refid="classokapi_1_1ChassisController_1a886a1cfbd9430fb2fbe177bc4d4ab392" prot="public" virt="virtual"><scope>okapi::DefaultOdomChassisController</scope><name>~ChassisController</name></member>
      <member refid="classokapi_1_1OdomChassisController_1a25ee4fe0432b6cdc8052a869856cfc7c" prot="public" virt="non-virtual"><scope>okapi::DefaultOdomChassisController</scope><name>~OdomChassisController</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
