<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1OdomMath" kind="class" language="C++" prot="public">
    <compoundname>okapi::OdomMath</compoundname>
    <includes refid="odomMath_8hpp" local="no">odomMath.hpp</includes>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classokapi_1_1OdomMath_1a58abbf02061a774eb292cc62a0371afa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QLength</type>
        <definition>QLength okapi::OdomMath::computeDistanceToPoint</definition>
        <argsstring>(const Point &amp;ipoint, const OdomState &amp;istate)</argsstring>
        <name>computeDistanceToPoint</name>
        <param>
          <type>const <ref refid="structokapi_1_1Point" kindref="compound">Point</ref> &amp;</type>
          <declname>ipoint</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1OdomState" kindref="compound">OdomState</ref> &amp;</type>
          <declname>istate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the distance from the given <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state to the given point. The point and the <ref refid="structokapi_1_1OdomState" kindref="compound">OdomState</ref> must be in <computeroutput><ref refid="namespaceokapi_1af37fbd761bd859a00ff4dd4a87dd8c07ad5ed7666e5cebf60d3af20a5a46edf3b" kindref="member">StateMode::FRAME_TRANSFORMATION</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>istate</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The distance between the <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state and the point. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/odometry/odomMath.hpp" line="26" column="1" bodyfile="src/api/odometry/odomMath.cpp" bodystart="17" bodyend="20"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1OdomMath_1a993603bff1e35c0270cdfdab1196c695" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QAngle</type>
        <definition>QAngle okapi::OdomMath::computeAngleToPoint</definition>
        <argsstring>(const Point &amp;ipoint, const OdomState &amp;istate)</argsstring>
        <name>computeAngleToPoint</name>
        <param>
          <type>const <ref refid="structokapi_1_1Point" kindref="compound">Point</ref> &amp;</type>
          <declname>ipoint</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1OdomState" kindref="compound">OdomState</ref> &amp;</type>
          <declname>istate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the angle from the given <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state to the given point. The point and the <ref refid="structokapi_1_1OdomState" kindref="compound">OdomState</ref> must be in <computeroutput><ref refid="namespaceokapi_1af37fbd761bd859a00ff4dd4a87dd8c07ad5ed7666e5cebf60d3af20a5a46edf3b" kindref="member">StateMode::FRAME_TRANSFORMATION</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>istate</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The angle between the <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state and the point. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/odometry/odomMath.hpp" line="36" column="1" bodyfile="src/api/odometry/odomMath.cpp" bodystart="22" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1OdomMath_1a97865973f203ed07eb8f642fea344c23" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; QLength, QAngle &gt;</type>
        <definition>std::pair&lt; QLength, QAngle &gt; okapi::OdomMath::computeDistanceAndAngleToPoint</definition>
        <argsstring>(const Point &amp;ipoint, const OdomState &amp;istate)</argsstring>
        <name>computeDistanceAndAngleToPoint</name>
        <param>
          <type>const <ref refid="structokapi_1_1Point" kindref="compound">Point</ref> &amp;</type>
          <declname>ipoint</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1OdomState" kindref="compound">OdomState</ref> &amp;</type>
          <declname>istate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the distance and angle from the given <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state to the given point. The point and the <ref refid="structokapi_1_1OdomState" kindref="compound">OdomState</ref> must be in <computeroutput><ref refid="namespaceokapi_1af37fbd761bd859a00ff4dd4a87dd8c07ad5ed7666e5cebf60d3af20a5a46edf3b" kindref="member">StateMode::FRAME_TRANSFORMATION</ref></computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>istate</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The distance and angle between the <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state and the point. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/odometry/odomMath.hpp" line="46" column="1" bodyfile="src/api/odometry/odomMath.cpp" bodystart="27" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classokapi_1_1OdomMath_1a8bde63b77114e173d35ab2ee3be98d1a" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::OdomMath::OdomMath</definition>
        <argsstring>()</argsstring>
        <name>OdomMath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/odometry/odomMath.hpp" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1OdomMath_1a602f23515d9d286db39bd6d4594934aa" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>okapi::OdomMath::~OdomMath</definition>
        <argsstring>()</argsstring>
        <name>~OdomMath</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/odometry/odomMath.hpp" line="51" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classokapi_1_1OdomMath_1a38d97664cdaf7bc9bdd7b4c8f12b3ae2" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::pair&lt; double, double &gt;</type>
        <definition>std::pair&lt; double, double &gt; okapi::OdomMath::computeDiffs</definition>
        <argsstring>(const Point &amp;ipoint, const OdomState &amp;istate)</argsstring>
        <name>computeDiffs</name>
        <param>
          <type>const <ref refid="structokapi_1_1Point" kindref="compound">Point</ref> &amp;</type>
          <declname>ipoint</declname>
        </param>
        <param>
          <type>const <ref refid="structokapi_1_1OdomState" kindref="compound">OdomState</ref> &amp;</type>
          <declname>istate</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the x and y diffs in meters between the points.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ipoint</parametername>
</parameternamelist>
<parameterdescription>
<para>The point. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>istate</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classokapi_1_1Odometry" kindref="compound">Odometry</ref> state. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The diffs in the order <computeroutput>{xDiff, yDiff}</computeroutput>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/odometry/odomMath.hpp" line="60" column="1" bodyfile="src/api/odometry/odomMath.cpp" bodystart="34" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1OdomMath_1ac3a8ece04c060d4143746515c3322724" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double okapi::OdomMath::computeDistance</definition>
        <argsstring>(double xDiff, double yDiff)</argsstring>
        <name>computeDistance</name>
        <param>
          <type>double</type>
          <declname>xDiff</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yDiff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes the distance between the points.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xDiff</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-axis diff in meters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yDiff</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-axis diff in meters. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The cartesian distance in meters. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/odometry/odomMath.hpp" line="69" column="1" bodyfile="src/api/odometry/odomMath.cpp" bodystart="40" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1OdomMath_1ab3608d36e3b333171699074364229861" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double okapi::OdomMath::computeAngle</definition>
        <argsstring>(double xDiff, double yDiff, double theta)</argsstring>
        <name>computeAngle</name>
        <param>
          <type>double</type>
          <declname>xDiff</declname>
        </param>
        <param>
          <type>double</type>
          <declname>yDiff</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compites the angle between the points.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xDiff</parametername>
</parameternamelist>
<parameterdescription>
<para>The x-axis diff in meters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yDiff</parametername>
</parameternamelist>
<parameterdescription>
<para>The y-axis diff in meters. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>The current robot&apos;s theta in radians. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The angle in radians. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/odometry/odomMath.hpp" line="79" column="1" bodyfile="src/api/odometry/odomMath.cpp" bodystart="44" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/okapi/api/odometry/odomMath.hpp" line="16" column="1" bodyfile="include/okapi/api/odometry/odomMath.hpp" bodystart="16" bodyend="80"/>
    <listofallmembers>
      <member refid="classokapi_1_1OdomMath_1ab3608d36e3b333171699074364229861" prot="private" virt="non-virtual"><scope>okapi::OdomMath</scope><name>computeAngle</name></member>
      <member refid="classokapi_1_1OdomMath_1a993603bff1e35c0270cdfdab1196c695" prot="public" virt="non-virtual"><scope>okapi::OdomMath</scope><name>computeAngleToPoint</name></member>
      <member refid="classokapi_1_1OdomMath_1a38d97664cdaf7bc9bdd7b4c8f12b3ae2" prot="private" virt="non-virtual"><scope>okapi::OdomMath</scope><name>computeDiffs</name></member>
      <member refid="classokapi_1_1OdomMath_1ac3a8ece04c060d4143746515c3322724" prot="private" virt="non-virtual"><scope>okapi::OdomMath</scope><name>computeDistance</name></member>
      <member refid="classokapi_1_1OdomMath_1a97865973f203ed07eb8f642fea344c23" prot="public" virt="non-virtual"><scope>okapi::OdomMath</scope><name>computeDistanceAndAngleToPoint</name></member>
      <member refid="classokapi_1_1OdomMath_1a58abbf02061a774eb292cc62a0371afa" prot="public" virt="non-virtual"><scope>okapi::OdomMath</scope><name>computeDistanceToPoint</name></member>
      <member refid="classokapi_1_1OdomMath_1a8bde63b77114e173d35ab2ee3be98d1a" prot="private" virt="non-virtual"><scope>okapi::OdomMath</scope><name>OdomMath</name></member>
      <member refid="classokapi_1_1OdomMath_1a602f23515d9d286db39bd6d4594934aa" prot="private" virt="non-virtual"><scope>okapi::OdomMath</scope><name>~OdomMath</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
