<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="namespaceokapi" kind="namespace" language="C++">
    <compoundname>okapi</compoundname>
    <innerclass refid="classokapi_1_1AbstractButton" prot="public">okapi::AbstractButton</innerclass>
    <innerclass refid="classokapi_1_1AbstractMotor" prot="public">okapi::AbstractMotor</innerclass>
    <innerclass refid="classokapi_1_1AbstractRate" prot="public">okapi::AbstractRate</innerclass>
    <innerclass refid="classokapi_1_1AbstractTimer" prot="public">okapi::AbstractTimer</innerclass>
    <innerclass refid="classokapi_1_1ADIButton" prot="public">okapi::ADIButton</innerclass>
    <innerclass refid="classokapi_1_1ADIEncoder" prot="public">okapi::ADIEncoder</innerclass>
    <innerclass refid="classokapi_1_1ADIGyro" prot="public">okapi::ADIGyro</innerclass>
    <innerclass refid="classokapi_1_1ADIMotor" prot="public">okapi::ADIMotor</innerclass>
    <innerclass refid="classokapi_1_1ADIUltrasonic" prot="public">okapi::ADIUltrasonic</innerclass>
    <innerclass refid="classokapi_1_1AsyncController" prot="public">okapi::AsyncController</innerclass>
    <innerclass refid="classokapi_1_1AsyncLinearMotionProfileController" prot="public">okapi::AsyncLinearMotionProfileController</innerclass>
    <innerclass refid="classokapi_1_1AsyncMotionProfileController" prot="public">okapi::AsyncMotionProfileController</innerclass>
    <innerclass refid="classokapi_1_1AsyncMotionProfileControllerBuilder" prot="public">okapi::AsyncMotionProfileControllerBuilder</innerclass>
    <innerclass refid="classokapi_1_1AsyncPosControllerBuilder" prot="public">okapi::AsyncPosControllerBuilder</innerclass>
    <innerclass refid="classokapi_1_1AsyncPosIntegratedController" prot="public">okapi::AsyncPosIntegratedController</innerclass>
    <innerclass refid="classokapi_1_1AsyncPositionController" prot="public">okapi::AsyncPositionController</innerclass>
    <innerclass refid="classokapi_1_1AsyncPosPIDController" prot="public">okapi::AsyncPosPIDController</innerclass>
    <innerclass refid="classokapi_1_1AsyncVelControllerBuilder" prot="public">okapi::AsyncVelControllerBuilder</innerclass>
    <innerclass refid="classokapi_1_1AsyncVelIntegratedController" prot="public">okapi::AsyncVelIntegratedController</innerclass>
    <innerclass refid="classokapi_1_1AsyncVelocityController" prot="public">okapi::AsyncVelocityController</innerclass>
    <innerclass refid="classokapi_1_1AsyncVelPIDController" prot="public">okapi::AsyncVelPIDController</innerclass>
    <innerclass refid="classokapi_1_1AsyncWrapper" prot="public">okapi::AsyncWrapper</innerclass>
    <innerclass refid="classokapi_1_1AverageFilter" prot="public">okapi::AverageFilter</innerclass>
    <innerclass refid="classokapi_1_1ButtonBase" prot="public">okapi::ButtonBase</innerclass>
    <innerclass refid="classokapi_1_1ChassisController" prot="public">okapi::ChassisController</innerclass>
    <innerclass refid="classokapi_1_1ChassisControllerBuilder" prot="public">okapi::ChassisControllerBuilder</innerclass>
    <innerclass refid="classokapi_1_1ChassisControllerIntegrated" prot="public">okapi::ChassisControllerIntegrated</innerclass>
    <innerclass refid="classokapi_1_1ChassisControllerPID" prot="public">okapi::ChassisControllerPID</innerclass>
    <innerclass refid="classokapi_1_1ChassisModel" prot="public">okapi::ChassisModel</innerclass>
    <innerclass refid="classokapi_1_1ChassisScales" prot="public">okapi::ChassisScales</innerclass>
    <innerclass refid="classokapi_1_1ClosedLoopController" prot="public">okapi::ClosedLoopController</innerclass>
    <innerclass refid="classokapi_1_1ComposableFilter" prot="public">okapi::ComposableFilter</innerclass>
    <innerclass refid="classokapi_1_1ContinuousRotarySensor" prot="public">okapi::ContinuousRotarySensor</innerclass>
    <innerclass refid="classokapi_1_1Controller" prot="public">okapi::Controller</innerclass>
    <innerclass refid="classokapi_1_1ControllerButton" prot="public">okapi::ControllerButton</innerclass>
    <innerclass refid="classokapi_1_1ControllerInput" prot="public">okapi::ControllerInput</innerclass>
    <innerclass refid="classokapi_1_1ControllerOutput" prot="public">okapi::ControllerOutput</innerclass>
    <innerclass refid="classokapi_1_1ControllerRunner" prot="public">okapi::ControllerRunner</innerclass>
    <innerclass refid="classokapi_1_1ControllerRunnerFactory" prot="public">okapi::ControllerRunnerFactory</innerclass>
    <innerclass refid="classokapi_1_1ControllerUtil" prot="public">okapi::ControllerUtil</innerclass>
    <innerclass refid="classokapi_1_1DefaultOdomChassisController" prot="public">okapi::DefaultOdomChassisController</innerclass>
    <innerclass refid="classokapi_1_1DemaFilter" prot="public">okapi::DemaFilter</innerclass>
    <innerclass refid="classokapi_1_1EKFFilter" prot="public">okapi::EKFFilter</innerclass>
    <innerclass refid="classokapi_1_1EmaFilter" prot="public">okapi::EmaFilter</innerclass>
    <innerclass refid="classokapi_1_1Filter" prot="public">okapi::Filter</innerclass>
    <innerclass refid="classokapi_1_1FilteredControllerInput" prot="public">okapi::FilteredControllerInput</innerclass>
    <innerclass refid="classokapi_1_1FlywheelSimulator" prot="public">okapi::FlywheelSimulator</innerclass>
    <innerclass refid="classokapi_1_1IntegratedEncoder" prot="public">okapi::IntegratedEncoder</innerclass>
    <innerclass refid="classokapi_1_1IterativeController" prot="public">okapi::IterativeController</innerclass>
    <innerclass refid="classokapi_1_1IterativeControllerFactory" prot="public">okapi::IterativeControllerFactory</innerclass>
    <innerclass refid="classokapi_1_1IterativeMotorVelocityController" prot="public">okapi::IterativeMotorVelocityController</innerclass>
    <innerclass refid="classokapi_1_1IterativePositionController" prot="public">okapi::IterativePositionController</innerclass>
    <innerclass refid="classokapi_1_1IterativePosPIDController" prot="public">okapi::IterativePosPIDController</innerclass>
    <innerclass refid="classokapi_1_1IterativeVelocityController" prot="public">okapi::IterativeVelocityController</innerclass>
    <innerclass refid="classokapi_1_1IterativeVelPIDController" prot="public">okapi::IterativeVelPIDController</innerclass>
    <innerclass refid="classokapi_1_1Logger" prot="public">okapi::Logger</innerclass>
    <innerclass refid="classokapi_1_1MedianFilter" prot="public">okapi::MedianFilter</innerclass>
    <innerclass refid="classokapi_1_1Motor" prot="public">okapi::Motor</innerclass>
    <innerclass refid="classokapi_1_1MotorGroup" prot="public">okapi::MotorGroup</innerclass>
    <innerclass refid="classokapi_1_1OdomChassisController" prot="public">okapi::OdomChassisController</innerclass>
    <innerclass refid="classokapi_1_1Odometry" prot="public">okapi::Odometry</innerclass>
    <innerclass refid="classokapi_1_1OdomMath" prot="public">okapi::OdomMath</innerclass>
    <innerclass refid="structokapi_1_1OdomState" prot="public">okapi::OdomState</innerclass>
    <innerclass refid="classokapi_1_1OffsetableControllerInput" prot="public">okapi::OffsetableControllerInput</innerclass>
    <innerclass refid="classokapi_1_1PassthroughFilter" prot="public">okapi::PassthroughFilter</innerclass>
    <innerclass refid="structokapi_1_1PathfinderLimits" prot="public">okapi::PathfinderLimits</innerclass>
    <innerclass refid="classokapi_1_1PIDTuner" prot="public">okapi::PIDTuner</innerclass>
    <innerclass refid="classokapi_1_1PIDTunerFactory" prot="public">okapi::PIDTunerFactory</innerclass>
    <innerclass refid="structokapi_1_1Point" prot="public">okapi::Point</innerclass>
    <innerclass refid="classokapi_1_1Potentiometer" prot="public">okapi::Potentiometer</innerclass>
    <innerclass refid="classokapi_1_1Rate" prot="public">okapi::Rate</innerclass>
    <innerclass refid="classokapi_1_1ReadOnlyChassisModel" prot="public">okapi::ReadOnlyChassisModel</innerclass>
    <innerclass refid="classokapi_1_1RotarySensor" prot="public">okapi::RotarySensor</innerclass>
    <innerclass refid="classokapi_1_1RQuantity" prot="public">okapi::RQuantity</innerclass>
    <innerclass refid="classokapi_1_1SettledUtil" prot="public">okapi::SettledUtil</innerclass>
    <innerclass refid="classokapi_1_1SettledUtilFactory" prot="public">okapi::SettledUtilFactory</innerclass>
    <innerclass refid="classokapi_1_1SkidSteerModel" prot="public">okapi::SkidSteerModel</innerclass>
    <innerclass refid="classokapi_1_1Supplier" prot="public">okapi::Supplier</innerclass>
    <innerclass refid="classokapi_1_1ThreeEncoderOdometry" prot="public">okapi::ThreeEncoderOdometry</innerclass>
    <innerclass refid="classokapi_1_1ThreeEncoderSkidSteerModel" prot="public">okapi::ThreeEncoderSkidSteerModel</innerclass>
    <innerclass refid="classokapi_1_1Timer" prot="public">okapi::Timer</innerclass>
    <innerclass refid="classokapi_1_1TimeUtil" prot="public">okapi::TimeUtil</innerclass>
    <innerclass refid="classokapi_1_1TimeUtilFactory" prot="public">okapi::TimeUtilFactory</innerclass>
    <innerclass refid="classokapi_1_1VelMath" prot="public">okapi::VelMath</innerclass>
    <innerclass refid="classokapi_1_1VelMathFactory" prot="public">okapi::VelMathFactory</innerclass>
    <innerclass refid="classokapi_1_1XDriveModel" prot="public">okapi::XDriveModel</innerclass>
    <innernamespace refid="namespaceokapi_1_1literals">okapi::literals</innernamespace>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceokapi_1af37fbd761bd859a00ff4dd4a87dd8c07" prot="public" static="no" strong="yes">
        <type></type>
        <name>StateMode</name>
        <enumvalue id="namespaceokapi_1af37fbd761bd859a00ff4dd4a87dd8c07ad5ed7666e5cebf60d3af20a5a46edf3b" prot="public">
          <name>FRAME_TRANSFORMATION</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af37fbd761bd859a00ff4dd4a87dd8c07ac02304094f2866a43251b12946a9a21b" prot="public">
          <name>CARTESIAN</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The mode for the state calculated by odometry. FRAME_TRANSFORMATION: +x is forward, +y is right CARTESIAN: +x is right, +y is forward </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/odometry/odometry.hpp" line="41" column="1" bodyfile="include/okapi/api/odometry/odometry.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceokapi_1a56349a0562b06c6ffc742e94cb1e4361" prot="public" static="no" strong="yes">
        <type></type>
        <name>ControllerId</name>
        <enumvalue id="namespaceokapi_1a56349a0562b06c6ffc742e94cb1e4361aeb0a191797624dd3a48fa681d3061212" prot="public">
          <name>master</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1a56349a0562b06c6ffc742e94cb1e4361a7454739e907f5595ae61d84b8547f574" prot="public">
          <name>partner</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Which controller role this has. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controllerUtil.hpp" line="16" column="1" bodyfile="include/okapi/impl/device/controllerUtil.hpp" bodystart="16" bodyend="16"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceokapi_1afcc83d6a64f075a4dba212ff612c31d0" prot="public" static="no" strong="yes">
        <type></type>
        <name>ControllerAnalog</name>
        <enumvalue id="namespaceokapi_1afcc83d6a64f075a4dba212ff612c31d0a997e1d811ca293735c9a6d41c9f4e161" prot="public">
          <name>leftX</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1afcc83d6a64f075a4dba212ff612c31d0a37239bd194b054def4a166c505e86ca0" prot="public">
          <name>leftY</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1afcc83d6a64f075a4dba212ff612c31d0a94088c1fced51079ed44e8ba1dcc75f3" prot="public">
          <name>rightX</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1afcc83d6a64f075a4dba212ff612c31d0ac20bbbc67cdeace3cad45d4afd635695" prot="public">
          <name>rightY</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The analog sticks. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controllerUtil.hpp" line="21" column="1" bodyfile="include/okapi/impl/device/controllerUtil.hpp" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="enum" id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6" prot="public" static="no" strong="yes">
        <type></type>
        <name>ControllerDigital</name>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a9ec4c0afd450ceac7adb81c3bcfc9732" prot="public">
          <name>L1</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a7e6aa2d53f6ee2b1a34b017fa403cb76" prot="public">
          <name>L2</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6acda522d4353b166cc2dee84673307b4e" prot="public">
          <name>R1</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a8c6d22ff6f63fc6711cfa315cb80b314" prot="public">
          <name>R2</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a46c48bec0d282018b9d167eef7711b2c" prot="public">
          <name>up</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a74e8333ad11685ff3bdae589c8f6e34d" prot="public">
          <name>down</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a811882fecd5c7618d7099ebbd39ea254" prot="public">
          <name>left</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a7c4f29407893c334a6cb7a87bf045c0d" prot="public">
          <name>right</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a02129bb861061d1a052c592e2dc6b383" prot="public">
          <name>X</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a9d5ed678fe57bcca610140957afab571" prot="public">
          <name>B</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a57cec4137b614c87cb4e24a3d003a3e0" prot="public">
          <name>Y</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceokapi_1af5040b3f1f33d27698871423e1453ab6a7fc56270e7a70fa81a5935b72eacbe29" prot="public">
          <name>A</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Various buttons. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/impl/device/controllerUtil.hpp" line="26" column="1" bodyfile="include/okapi/impl/device/controllerUtil.hpp" bodystart="26" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceokapi_1a87ed91f18439f9e7e29392272f329f1c" prot="public" static="no" mutable="no">
        <type>constexpr QAcceleration</type>
        <definition>constexpr QAcceleration okapi::mps2</definition>
        <argsstring></argsstring>
        <name>mps2</name>
        <initializer>= <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref> / (<ref refid="namespaceokapi_1ae9ece1daf9cd9f6d3a597cc5c0dc7b40" kindref="member">second</ref> * <ref refid="namespaceokapi_1ae9ece1daf9cd9f6d3a597cc5c0dc7b40" kindref="member">second</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QAcceleration.hpp" line="23" column="1" bodyfile="include/okapi/api/units/QAcceleration.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a6e00ff72f863a56a3fc99ca94f106a5a" prot="public" static="no" mutable="no">
        <type>constexpr QAcceleration</type>
        <definition>constexpr QAcceleration okapi::G</definition>
        <argsstring></argsstring>
        <name>G</name>
        <initializer>= 9.80665 * <ref refid="namespaceokapi_1a87ed91f18439f9e7e29392272f329f1c" kindref="member">mps2</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QAcceleration.hpp" line="24" column="1" bodyfile="include/okapi/api/units/QAcceleration.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a62211562b2e637742bd6e64748802211" prot="public" static="no" mutable="no">
        <type>constexpr QAngle</type>
        <definition>constexpr QAngle okapi::degree</definition>
        <argsstring></argsstring>
        <name>degree</name>
        <initializer>= static_cast&lt;double&gt;(2_pi / 360.0) * radian</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QAngle.hpp" line="23" column="1" bodyfile="include/okapi/api/units/QAngle.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1aec15098b7cc08fb5c6c99faa058a1f72" prot="public" static="no" mutable="no">
        <type>constexpr QAngularSpeed</type>
        <definition>constexpr QAngularSpeed okapi::radps</definition>
        <argsstring></argsstring>
        <name>radps</name>
        <initializer>= <ref refid="namespaceokapi_1a58aeaa1abc59d23d0790a77d53f1d26b" kindref="member">radian</ref> / <ref refid="namespaceokapi_1ae9ece1daf9cd9f6d3a597cc5c0dc7b40" kindref="member">second</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QAngularSpeed.hpp" line="24" column="1" bodyfile="include/okapi/api/units/QAngularSpeed.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a44d420085fe3c46220da4b11e5827453" prot="public" static="no" mutable="no">
        <type>constexpr QAngularSpeed</type>
        <definition>constexpr QAngularSpeed okapi::rpm</definition>
        <argsstring></argsstring>
        <name>rpm</name>
        <initializer>= (360 * <ref refid="namespaceokapi_1a62211562b2e637742bd6e64748802211" kindref="member">degree</ref>) / <ref refid="namespaceokapi_1abce6256db60f015cf42c2b90cda699e3" kindref="member">minute</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QAngularSpeed.hpp" line="25" column="1" bodyfile="include/okapi/api/units/QAngularSpeed.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a9760b46c22212bb946c9936f6a600455" prot="public" static="no" mutable="no">
        <type>constexpr QArea</type>
        <definition>constexpr QArea okapi::kilometer2</definition>
        <argsstring></argsstring>
        <name>kilometer2</name>
        <initializer>= <ref refid="namespaceokapi_1a05acd5fc8bdc7fe19d03a5241ae4bbc7" kindref="member">kilometer</ref> * <ref refid="namespaceokapi_1a05acd5fc8bdc7fe19d03a5241ae4bbc7" kindref="member">kilometer</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QArea.hpp" line="22" column="1" bodyfile="include/okapi/api/units/QArea.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1af408c7a86b7f54691246722841817248" prot="public" static="no" mutable="no">
        <type>constexpr QArea</type>
        <definition>constexpr QArea okapi::meter2</definition>
        <argsstring></argsstring>
        <name>meter2</name>
        <initializer>= <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref> * <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QArea.hpp" line="23" column="1" bodyfile="include/okapi/api/units/QArea.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a554ff440baa9c27432dcbc8068fbf47e" prot="public" static="no" mutable="no">
        <type>constexpr QArea</type>
        <definition>constexpr QArea okapi::decimeter2</definition>
        <argsstring></argsstring>
        <name>decimeter2</name>
        <initializer>= <ref refid="namespaceokapi_1adeefe08fd5193fd9090e198b1a3463b9" kindref="member">decimeter</ref> * <ref refid="namespaceokapi_1adeefe08fd5193fd9090e198b1a3463b9" kindref="member">decimeter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QArea.hpp" line="24" column="1" bodyfile="include/okapi/api/units/QArea.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a9395c9d47680dc1bef1f41744f1a3a9c" prot="public" static="no" mutable="no">
        <type>constexpr QArea</type>
        <definition>constexpr QArea okapi::centimeter2</definition>
        <argsstring></argsstring>
        <name>centimeter2</name>
        <initializer>= <ref refid="namespaceokapi_1a889129a4ecb3e93c695c8eea53b96602" kindref="member">centimeter</ref> * <ref refid="namespaceokapi_1a889129a4ecb3e93c695c8eea53b96602" kindref="member">centimeter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QArea.hpp" line="25" column="1" bodyfile="include/okapi/api/units/QArea.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a846f4e01f428ad9bff90f8dd7f7610d8" prot="public" static="no" mutable="no">
        <type>constexpr QArea</type>
        <definition>constexpr QArea okapi::millimeter2</definition>
        <argsstring></argsstring>
        <name>millimeter2</name>
        <initializer>= <ref refid="namespaceokapi_1a9343219094a8231c1e3bc95505ba1227" kindref="member">millimeter</ref> * <ref refid="namespaceokapi_1a9343219094a8231c1e3bc95505ba1227" kindref="member">millimeter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QArea.hpp" line="26" column="1" bodyfile="include/okapi/api/units/QArea.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1ac232406bb408f51239ae71a3bd566a12" prot="public" static="no" mutable="no">
        <type>constexpr QArea</type>
        <definition>constexpr QArea okapi::inch2</definition>
        <argsstring></argsstring>
        <name>inch2</name>
        <initializer>= <ref refid="namespaceokapi_1a7da6f1f2fa46ec3694ba3f5361bcba80" kindref="member">inch</ref> * <ref refid="namespaceokapi_1a7da6f1f2fa46ec3694ba3f5361bcba80" kindref="member">inch</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QArea.hpp" line="27" column="1" bodyfile="include/okapi/api/units/QArea.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a30332192fb24d5d1f81883969ec4878a" prot="public" static="no" mutable="no">
        <type>constexpr QArea</type>
        <definition>constexpr QArea okapi::foot2</definition>
        <argsstring></argsstring>
        <name>foot2</name>
        <initializer>= <ref refid="namespaceokapi_1a76974d5bf7ed9473b2d59153894a8587" kindref="member">foot</ref> * <ref refid="namespaceokapi_1a76974d5bf7ed9473b2d59153894a8587" kindref="member">foot</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QArea.hpp" line="28" column="1" bodyfile="include/okapi/api/units/QArea.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1afa03e58d2dcfa00d61968ef1c183909d" prot="public" static="no" mutable="no">
        <type>constexpr QArea</type>
        <definition>constexpr QArea okapi::mile2</definition>
        <argsstring></argsstring>
        <name>mile2</name>
        <initializer>= <ref refid="namespaceokapi_1adb797d6d549d23e9b2e6c817a07ddfba" kindref="member">mile</ref> * <ref refid="namespaceokapi_1adb797d6d549d23e9b2e6c817a07ddfba" kindref="member">mile</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QArea.hpp" line="29" column="1" bodyfile="include/okapi/api/units/QArea.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a66d91011ac90f25dc5e518f092cc5a74" prot="public" static="no" mutable="no">
        <type>constexpr QForce</type>
        <definition>constexpr QForce okapi::newton</definition>
        <argsstring></argsstring>
        <name>newton</name>
        <initializer>= (<ref refid="namespaceokapi_1afcc67eb55c70e21f82cbee49aa19d05a" kindref="member">kg</ref> * <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref>) / (<ref refid="namespaceokapi_1ae9ece1daf9cd9f6d3a597cc5c0dc7b40" kindref="member">second</ref> * <ref refid="namespaceokapi_1ae9ece1daf9cd9f6d3a597cc5c0dc7b40" kindref="member">second</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QForce.hpp" line="23" column="1" bodyfile="include/okapi/api/units/QForce.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a41fe97a6b959d171539cd48908544f77" prot="public" static="no" mutable="no">
        <type>constexpr QForce</type>
        <definition>constexpr QForce okapi::poundforce</definition>
        <argsstring></argsstring>
        <name>poundforce</name>
        <initializer>= <ref refid="namespaceokapi_1a15f5612272759c7efdcab4bae5b4fa09" kindref="member">pound</ref> * <ref refid="namespaceokapi_1a6e00ff72f863a56a3fc99ca94f106a5a" kindref="member">G</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QForce.hpp" line="24" column="1" bodyfile="include/okapi/api/units/QForce.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1ab3d807584cdc64b88f3d3c31fa571f9e" prot="public" static="no" mutable="no">
        <type>constexpr QForce</type>
        <definition>constexpr QForce okapi::kilopond</definition>
        <argsstring></argsstring>
        <name>kilopond</name>
        <initializer>= <ref refid="namespaceokapi_1afcc67eb55c70e21f82cbee49aa19d05a" kindref="member">kg</ref> * <ref refid="namespaceokapi_1a6e00ff72f863a56a3fc99ca94f106a5a" kindref="member">G</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QForce.hpp" line="25" column="1" bodyfile="include/okapi/api/units/QForce.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1adeefe08fd5193fd9090e198b1a3463b9" prot="public" static="no" mutable="no">
        <type>constexpr QLength</type>
        <definition>constexpr QLength okapi::decimeter</definition>
        <argsstring></argsstring>
        <name>decimeter</name>
        <initializer>= <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref> / 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QLength.hpp" line="22" column="1" bodyfile="include/okapi/api/units/QLength.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a889129a4ecb3e93c695c8eea53b96602" prot="public" static="no" mutable="no">
        <type>constexpr QLength</type>
        <definition>constexpr QLength okapi::centimeter</definition>
        <argsstring></argsstring>
        <name>centimeter</name>
        <initializer>= <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref> / 100</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QLength.hpp" line="23" column="1" bodyfile="include/okapi/api/units/QLength.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a9343219094a8231c1e3bc95505ba1227" prot="public" static="no" mutable="no">
        <type>constexpr QLength</type>
        <definition>constexpr QLength okapi::millimeter</definition>
        <argsstring></argsstring>
        <name>millimeter</name>
        <initializer>= <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref> / 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QLength.hpp" line="24" column="1" bodyfile="include/okapi/api/units/QLength.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a05acd5fc8bdc7fe19d03a5241ae4bbc7" prot="public" static="no" mutable="no">
        <type>constexpr QLength</type>
        <definition>constexpr QLength okapi::kilometer</definition>
        <argsstring></argsstring>
        <name>kilometer</name>
        <initializer>= 1000 * <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QLength.hpp" line="25" column="1" bodyfile="include/okapi/api/units/QLength.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a7da6f1f2fa46ec3694ba3f5361bcba80" prot="public" static="no" mutable="no">
        <type>constexpr QLength</type>
        <definition>constexpr QLength okapi::inch</definition>
        <argsstring></argsstring>
        <name>inch</name>
        <initializer>= 2.54 * <ref refid="namespaceokapi_1a889129a4ecb3e93c695c8eea53b96602" kindref="member">centimeter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QLength.hpp" line="26" column="1" bodyfile="include/okapi/api/units/QLength.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a76974d5bf7ed9473b2d59153894a8587" prot="public" static="no" mutable="no">
        <type>constexpr QLength</type>
        <definition>constexpr QLength okapi::foot</definition>
        <argsstring></argsstring>
        <name>foot</name>
        <initializer>= 12 * <ref refid="namespaceokapi_1a7da6f1f2fa46ec3694ba3f5361bcba80" kindref="member">inch</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QLength.hpp" line="27" column="1" bodyfile="include/okapi/api/units/QLength.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a2e7618c6657c2a4c9d267a045f627f1e" prot="public" static="no" mutable="no">
        <type>constexpr QLength</type>
        <definition>constexpr QLength okapi::yard</definition>
        <argsstring></argsstring>
        <name>yard</name>
        <initializer>= 3 * <ref refid="namespaceokapi_1a76974d5bf7ed9473b2d59153894a8587" kindref="member">foot</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QLength.hpp" line="28" column="1" bodyfile="include/okapi/api/units/QLength.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1adb797d6d549d23e9b2e6c817a07ddfba" prot="public" static="no" mutable="no">
        <type>constexpr QLength</type>
        <definition>constexpr QLength okapi::mile</definition>
        <argsstring></argsstring>
        <name>mile</name>
        <initializer>= 5280 * <ref refid="namespaceokapi_1a76974d5bf7ed9473b2d59153894a8587" kindref="member">foot</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QLength.hpp" line="29" column="1" bodyfile="include/okapi/api/units/QLength.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a494f6de7e44c5a31663ff887d5dc73fb" prot="public" static="no" mutable="no">
        <type>constexpr QMass</type>
        <definition>constexpr QMass okapi::gramme</definition>
        <argsstring></argsstring>
        <name>gramme</name>
        <initializer>= 0.001 * <ref refid="namespaceokapi_1afcc67eb55c70e21f82cbee49aa19d05a" kindref="member">kg</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QMass.hpp" line="22" column="1" bodyfile="include/okapi/api/units/QMass.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a01ec1e54d8c7735cc150c1d7a06eced6" prot="public" static="no" mutable="no">
        <type>constexpr QMass</type>
        <definition>constexpr QMass okapi::tonne</definition>
        <argsstring></argsstring>
        <name>tonne</name>
        <initializer>= 1000 * <ref refid="namespaceokapi_1afcc67eb55c70e21f82cbee49aa19d05a" kindref="member">kg</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QMass.hpp" line="23" column="1" bodyfile="include/okapi/api/units/QMass.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1aa03bea36d07db8710819da96fe675a74" prot="public" static="no" mutable="no">
        <type>constexpr QMass</type>
        <definition>constexpr QMass okapi::ounce</definition>
        <argsstring></argsstring>
        <name>ounce</name>
        <initializer>= 0.028349523125 * <ref refid="namespaceokapi_1afcc67eb55c70e21f82cbee49aa19d05a" kindref="member">kg</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QMass.hpp" line="24" column="1" bodyfile="include/okapi/api/units/QMass.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a15f5612272759c7efdcab4bae5b4fa09" prot="public" static="no" mutable="no">
        <type>constexpr QMass</type>
        <definition>constexpr QMass okapi::pound</definition>
        <argsstring></argsstring>
        <name>pound</name>
        <initializer>= 16 * <ref refid="namespaceokapi_1aa03bea36d07db8710819da96fe675a74" kindref="member">ounce</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QMass.hpp" line="25" column="1" bodyfile="include/okapi/api/units/QMass.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a023f7a7c757c8d9f08eebc0d94733fcf" prot="public" static="no" mutable="no">
        <type>constexpr QMass</type>
        <definition>constexpr QMass okapi::stone</definition>
        <argsstring></argsstring>
        <name>stone</name>
        <initializer>= 14 * <ref refid="namespaceokapi_1a15f5612272759c7efdcab4bae5b4fa09" kindref="member">pound</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QMass.hpp" line="26" column="1" bodyfile="include/okapi/api/units/QMass.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a0b54d28853182078db748ab94cb8cd45" prot="public" static="no" mutable="no">
        <type>constexpr QPressure</type>
        <definition>constexpr QPressure okapi::bar</definition>
        <argsstring></argsstring>
        <name>bar</name>
        <initializer>= 100000 * <ref refid="namespaceokapi_1accda0a1a99e1aafa43e8ef14201374ad" kindref="member">pascal</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QPressure.hpp" line="25" column="1" bodyfile="include/okapi/api/units/QPressure.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1acbf7dd00498df55f8f7322dfaa97e654" prot="public" static="no" mutable="no">
        <type>constexpr QPressure</type>
        <definition>constexpr QPressure okapi::psi</definition>
        <argsstring></argsstring>
        <name>psi</name>
        <initializer>= <ref refid="namespaceokapi_1a15f5612272759c7efdcab4bae5b4fa09" kindref="member">pound</ref> * <ref refid="namespaceokapi_1a6e00ff72f863a56a3fc99ca94f106a5a" kindref="member">G</ref> / <ref refid="namespaceokapi_1ac232406bb408f51239ae71a3bd566a12" kindref="member">inch2</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QPressure.hpp" line="26" column="1" bodyfile="include/okapi/api/units/QPressure.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a133a7fbfd853bac09c6c9c2310ed8855" prot="public" static="no" mutable="no">
        <type>constexpr QSpeed</type>
        <definition>constexpr QSpeed okapi::mps</definition>
        <argsstring></argsstring>
        <name>mps</name>
        <initializer>= <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref> / <ref refid="namespaceokapi_1ae9ece1daf9cd9f6d3a597cc5c0dc7b40" kindref="member">second</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QSpeed.hpp" line="23" column="1" bodyfile="include/okapi/api/units/QSpeed.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1aa2bafeb1e615f437ffe7b2aca205e59c" prot="public" static="no" mutable="no">
        <type>constexpr QSpeed</type>
        <definition>constexpr QSpeed okapi::miph</definition>
        <argsstring></argsstring>
        <name>miph</name>
        <initializer>= <ref refid="namespaceokapi_1adb797d6d549d23e9b2e6c817a07ddfba" kindref="member">mile</ref> / <ref refid="namespaceokapi_1a43d321d318cb594798b60a6be26e85ce" kindref="member">hour</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QSpeed.hpp" line="24" column="1" bodyfile="include/okapi/api/units/QSpeed.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1af18e23455e066dcbca14e9b674f2473b" prot="public" static="no" mutable="no">
        <type>constexpr QSpeed</type>
        <definition>constexpr QSpeed okapi::kmph</definition>
        <argsstring></argsstring>
        <name>kmph</name>
        <initializer>= <ref refid="namespaceokapi_1a05acd5fc8bdc7fe19d03a5241ae4bbc7" kindref="member">kilometer</ref> / <ref refid="namespaceokapi_1a43d321d318cb594798b60a6be26e85ce" kindref="member">hour</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QSpeed.hpp" line="25" column="1" bodyfile="include/okapi/api/units/QSpeed.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a2163ff1f012e1a2491d116bbeef79c71" prot="public" static="no" mutable="no">
        <type>constexpr QTime</type>
        <definition>constexpr QTime okapi::millisecond</definition>
        <argsstring></argsstring>
        <name>millisecond</name>
        <initializer>= <ref refid="namespaceokapi_1ae9ece1daf9cd9f6d3a597cc5c0dc7b40" kindref="member">second</ref> / 1000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QTime.hpp" line="22" column="1" bodyfile="include/okapi/api/units/QTime.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1abce6256db60f015cf42c2b90cda699e3" prot="public" static="no" mutable="no">
        <type>constexpr QTime</type>
        <definition>constexpr QTime okapi::minute</definition>
        <argsstring></argsstring>
        <name>minute</name>
        <initializer>= 60 * <ref refid="namespaceokapi_1ae9ece1daf9cd9f6d3a597cc5c0dc7b40" kindref="member">second</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QTime.hpp" line="23" column="1" bodyfile="include/okapi/api/units/QTime.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a43d321d318cb594798b60a6be26e85ce" prot="public" static="no" mutable="no">
        <type>constexpr QTime</type>
        <definition>constexpr QTime okapi::hour</definition>
        <argsstring></argsstring>
        <name>hour</name>
        <initializer>= 60 * <ref refid="namespaceokapi_1abce6256db60f015cf42c2b90cda699e3" kindref="member">minute</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QTime.hpp" line="24" column="1" bodyfile="include/okapi/api/units/QTime.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a5bb9617e1f2db13eaad2fe9d47f49195" prot="public" static="no" mutable="no">
        <type>constexpr QTime</type>
        <definition>constexpr QTime okapi::day</definition>
        <argsstring></argsstring>
        <name>day</name>
        <initializer>= 24 * <ref refid="namespaceokapi_1a43d321d318cb594798b60a6be26e85ce" kindref="member">hour</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QTime.hpp" line="25" column="1" bodyfile="include/okapi/api/units/QTime.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a3d685da47b39ff4bdf1936c2e12076ee" prot="public" static="no" mutable="no">
        <type>constexpr QTorque</type>
        <definition>constexpr QTorque okapi::newtonMeter</definition>
        <argsstring></argsstring>
        <name>newtonMeter</name>
        <initializer>= <ref refid="namespaceokapi_1a66d91011ac90f25dc5e518f092cc5a74" kindref="member">newton</ref> * <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QTorque.hpp" line="23" column="1" bodyfile="include/okapi/api/units/QTorque.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a2312145f0a7f17b0a275289bfd369308" prot="public" static="no" mutable="no">
        <type>constexpr QTorque</type>
        <definition>constexpr QTorque okapi::footPound</definition>
        <argsstring></argsstring>
        <name>footPound</name>
        <initializer>= 1.355817948 * <ref refid="namespaceokapi_1a3d685da47b39ff4bdf1936c2e12076ee" kindref="member">newtonMeter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QTorque.hpp" line="24" column="1" bodyfile="include/okapi/api/units/QTorque.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1adbb0e6b3b23a41f9e8b971a0af1105fc" prot="public" static="no" mutable="no">
        <type>constexpr QTorque</type>
        <definition>constexpr QTorque okapi::inchPound</definition>
        <argsstring></argsstring>
        <name>inchPound</name>
        <initializer>= 0.083333333 * <ref refid="namespaceokapi_1a2312145f0a7f17b0a275289bfd369308" kindref="member">footPound</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QTorque.hpp" line="25" column="1" bodyfile="include/okapi/api/units/QTorque.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a8d66a33d9f8e743e53655cffaac14059" prot="public" static="no" mutable="no">
        <type>constexpr QVolume</type>
        <definition>constexpr QVolume okapi::kilometer3</definition>
        <argsstring></argsstring>
        <name>kilometer3</name>
        <initializer>= <ref refid="namespaceokapi_1a9760b46c22212bb946c9936f6a600455" kindref="member">kilometer2</ref> * <ref refid="namespaceokapi_1a05acd5fc8bdc7fe19d03a5241ae4bbc7" kindref="member">kilometer</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QVolume.hpp" line="23" column="1" bodyfile="include/okapi/api/units/QVolume.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1af0b912fc89f2fb06960a683d9894df1f" prot="public" static="no" mutable="no">
        <type>constexpr QVolume</type>
        <definition>constexpr QVolume okapi::meter3</definition>
        <argsstring></argsstring>
        <name>meter3</name>
        <initializer>= <ref refid="namespaceokapi_1af408c7a86b7f54691246722841817248" kindref="member">meter2</ref> * <ref refid="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" kindref="member">meter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QVolume.hpp" line="24" column="1" bodyfile="include/okapi/api/units/QVolume.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a4f07207ec37be4257d882710d97a3de9" prot="public" static="no" mutable="no">
        <type>constexpr QVolume</type>
        <definition>constexpr QVolume okapi::decimeter3</definition>
        <argsstring></argsstring>
        <name>decimeter3</name>
        <initializer>= <ref refid="namespaceokapi_1a554ff440baa9c27432dcbc8068fbf47e" kindref="member">decimeter2</ref> * <ref refid="namespaceokapi_1adeefe08fd5193fd9090e198b1a3463b9" kindref="member">decimeter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QVolume.hpp" line="25" column="1" bodyfile="include/okapi/api/units/QVolume.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a2a86923c7b72c51af38c1e3771fd024c" prot="public" static="no" mutable="no">
        <type>constexpr QVolume</type>
        <definition>constexpr QVolume okapi::centimeter3</definition>
        <argsstring></argsstring>
        <name>centimeter3</name>
        <initializer>= <ref refid="namespaceokapi_1a9395c9d47680dc1bef1f41744f1a3a9c" kindref="member">centimeter2</ref> * <ref refid="namespaceokapi_1a889129a4ecb3e93c695c8eea53b96602" kindref="member">centimeter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QVolume.hpp" line="26" column="1" bodyfile="include/okapi/api/units/QVolume.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a517d314801b2ffaeaeaa621d6be8cbdf" prot="public" static="no" mutable="no">
        <type>constexpr QVolume</type>
        <definition>constexpr QVolume okapi::millimeter3</definition>
        <argsstring></argsstring>
        <name>millimeter3</name>
        <initializer>= <ref refid="namespaceokapi_1a846f4e01f428ad9bff90f8dd7f7610d8" kindref="member">millimeter2</ref> * <ref refid="namespaceokapi_1a9343219094a8231c1e3bc95505ba1227" kindref="member">millimeter</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QVolume.hpp" line="27" column="1" bodyfile="include/okapi/api/units/QVolume.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1ae97077d294f94936fa0261a15d7e8b9e" prot="public" static="no" mutable="no">
        <type>constexpr QVolume</type>
        <definition>constexpr QVolume okapi::inch3</definition>
        <argsstring></argsstring>
        <name>inch3</name>
        <initializer>= <ref refid="namespaceokapi_1ac232406bb408f51239ae71a3bd566a12" kindref="member">inch2</ref> * <ref refid="namespaceokapi_1a7da6f1f2fa46ec3694ba3f5361bcba80" kindref="member">inch</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QVolume.hpp" line="28" column="1" bodyfile="include/okapi/api/units/QVolume.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a287daabad9e16ca8503cbadba7dde50c" prot="public" static="no" mutable="no">
        <type>constexpr QVolume</type>
        <definition>constexpr QVolume okapi::foot3</definition>
        <argsstring></argsstring>
        <name>foot3</name>
        <initializer>= <ref refid="namespaceokapi_1a30332192fb24d5d1f81883969ec4878a" kindref="member">foot2</ref> * <ref refid="namespaceokapi_1a76974d5bf7ed9473b2d59153894a8587" kindref="member">foot</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QVolume.hpp" line="29" column="1" bodyfile="include/okapi/api/units/QVolume.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a01976bc3ef4067a1146756d3853cf137" prot="public" static="no" mutable="no">
        <type>constexpr QVolume</type>
        <definition>constexpr QVolume okapi::mile3</definition>
        <argsstring></argsstring>
        <name>mile3</name>
        <initializer>= <ref refid="namespaceokapi_1afa03e58d2dcfa00d61968ef1c183909d" kindref="member">mile2</ref> * <ref refid="namespaceokapi_1adb797d6d549d23e9b2e6c817a07ddfba" kindref="member">mile</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QVolume.hpp" line="30" column="1" bodyfile="include/okapi/api/units/QVolume.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a877d0e470662f3b0ed2525af2740a761" prot="public" static="no" mutable="no">
        <type>constexpr QVolume</type>
        <definition>constexpr QVolume okapi::litre</definition>
        <argsstring></argsstring>
        <name>litre</name>
        <initializer>= <ref refid="namespaceokapi_1a4f07207ec37be4257d882710d97a3de9" kindref="member">decimeter3</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QVolume.hpp" line="31" column="1" bodyfile="include/okapi/api/units/QVolume.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a2a1dadedbf4a0243e7671614e7664eb0" prot="public" static="yes" mutable="no">
        <type>constexpr std::int32_t</type>
        <definition>constexpr std::int32_t okapi::analogInToV</definition>
        <argsstring></argsstring>
        <name>analogInToV</name>
        <initializer>= 286</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="17" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a4d717f5c9e81628ef90348718c925d16" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::inchToMM</definition>
        <argsstring></argsstring>
        <name>inchToMM</name>
        <initializer>= 25.4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="18" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1afecc245ceeabbbfe9f0e6f37fcb2d634" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::mmToInch</definition>
        <argsstring></argsstring>
        <name>mmToInch</name>
        <initializer>= 0.0393700787</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="19" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a60e2f3e682c91a331aa5d89d8c0d6507" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::degreeToRadian</definition>
        <argsstring></argsstring>
        <name>degreeToRadian</name>
        <initializer>= 0.01745329252</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="20" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1aa1f1932af0b3ec79171c302a2ed2349e" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::radianToDegree</definition>
        <argsstring></argsstring>
        <name>radianToDegree</name>
        <initializer>= 57.2957795</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="21" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a84b2d4e8b1e01817a92c15180931b95a" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::imeTorqueTPR</definition>
        <argsstring></argsstring>
        <name>imeTorqueTPR</name>
        <initializer>= 627.2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="22" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1aed531d8ad5119488b1e6a484ecdc7f4b" prot="public" static="yes" mutable="no">
        <type>constexpr std::int32_t</type>
        <definition>constexpr std::int32_t okapi::imeSpeedTPR</definition>
        <argsstring></argsstring>
        <name>imeSpeedTPR</name>
        <initializer>= 392</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="23" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1afcad34588fd1dcc21821fab917a5a3ac" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::imeTurboTPR</definition>
        <argsstring></argsstring>
        <name>imeTurboTPR</name>
        <initializer>= 261.333</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="24" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a5be4dc4319f6ab7ea962a35504d7e1b4" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::ime269TPR</definition>
        <argsstring></argsstring>
        <name>ime269TPR</name>
        <initializer>= 240.448</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="25" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a3c1877d878fa2a5f78f1d6edaebb6a7c" prot="public" static="yes" mutable="no">
        <type>constexpr std::int32_t</type>
        <definition>constexpr std::int32_t okapi::imev5RedTPR</definition>
        <argsstring></argsstring>
        <name>imev5RedTPR</name>
        <initializer>= 1800</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="26" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a5263bab3bfecd482a573b6d04fb584ac" prot="public" static="yes" mutable="no">
        <type>constexpr std::int32_t</type>
        <definition>constexpr std::int32_t okapi::imev5GreenTPR</definition>
        <argsstring></argsstring>
        <name>imev5GreenTPR</name>
        <initializer>= 900</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="27" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a8d9e012d255d1fc2154c0dd9345d61ae" prot="public" static="yes" mutable="no">
        <type>constexpr std::int32_t</type>
        <definition>constexpr std::int32_t okapi::imev5BlueTPR</definition>
        <argsstring></argsstring>
        <name>imev5BlueTPR</name>
        <initializer>= 300</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="28" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1ad45ebef87cdaccd36ca4234d0bfdeee3" prot="public" static="yes" mutable="no">
        <type>constexpr std::int32_t</type>
        <definition>constexpr std::int32_t okapi::quadEncoderTPR</definition>
        <argsstring></argsstring>
        <name>quadEncoderTPR</name>
        <initializer>= 360</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="29" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a3456eff6b02ec38b7771c227250f101c" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::pi</definition>
        <argsstring></argsstring>
        <name>pi</name>
        <initializer>= 3.1415926535897932</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="30" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a0f3c3909136daa4ae9532361a870a213" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::pi2</definition>
        <argsstring></argsstring>
        <name>pi2</name>
        <initializer>= 1.5707963267948966</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="31" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a35009d9782cfcf5a519ff7d8fc39f86f" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::gravity</definition>
        <argsstring></argsstring>
        <name>gravity</name>
        <initializer>= 9.80665</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="32" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a18913fb1230fd1353366981f1f78335c" prot="public" static="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto okapi::OKAPI_PROS_ERR</definition>
        <argsstring></argsstring>
        <name>OKAPI_PROS_ERR</name>
        <initializer>= INT32_MAX</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="33" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a0f2b0da948b0276b354ca035af11380e" prot="public" static="yes" mutable="no">
        <type>constexpr auto</type>
        <definition>constexpr auto okapi::OKAPI_PROS_ERR_F</definition>
        <argsstring></argsstring>
        <name>OKAPI_PROS_ERR_F</name>
        <initializer>= INFINITY</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="34" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1a4507bf58013826d1597fd5e548175612" prot="public" static="yes" mutable="no">
        <type>constexpr double</type>
        <definition>constexpr double okapi::v5MotorMaxVoltage</definition>
        <argsstring></argsstring>
        <name>v5MotorMaxVoltage</name>
        <initializer>= 12000</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="35" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1af6ac90c5f9ae02ffb17466bafcfbec4c" prot="public" static="yes" mutable="no">
        <type>constexpr std::int8_t</type>
        <definition>constexpr std::int8_t okapi::motorUpdateRate</definition>
        <argsstring></argsstring>
        <name>motorUpdateRate</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="37" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceokapi_1abf765c88ac34df87d378fb66ea5fd20c" prot="public" static="yes" mutable="no">
        <type>constexpr std::int8_t</type>
        <definition>constexpr std::int8_t okapi::adiUpdateRate</definition>
        <argsstring></argsstring>
        <name>adiUpdateRate</name>
        <initializer>= 10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="38" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceokapi_1ade4f34671410d2b847d7b0366ab60ba1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structokapi_1_1AbstractMotor_1_1GearsetRatioPair" kindref="compound">AbstractMotor::GearsetRatioPair</ref></type>
        <definition>AbstractMotor::GearsetRatioPair okapi::operator *</definition>
        <argsstring>(AbstractMotor::gearset gearset, double ratio)</argsstring>
        <name>operator *</name>
        <param>
          <type><ref refid="classokapi_1_1AbstractMotor_1a88aaa6ea2fa10f5520a537bbf26774d5" kindref="member">AbstractMotor::gearset</ref></type>
          <declname>gearset</declname>
        </param>
        <param>
          <type>double</type>
          <declname>ratio</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/device/motor/abstractMotor.hpp" line="532" column="1" bodyfile="src/api/device/motor/abstractMotor.cpp" bodystart="13" bodyend="16"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a58aeaa1abc59d23d0790a77d53f1d26b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr QAngle</type>
        <definition>constexpr QAngle okapi::radian</definition>
        <argsstring>(1.0)</argsstring>
        <name>radian</name>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QAngle.hpp" line="22" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a06879c25af60ece2ce818b93b6d8b681" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>QAngularSpeed</type>
        <definition>static QAngularSpeed okapi::convertHertzToRadPerSec</definition>
        <argsstring>(QFrequency in)</argsstring>
        <name>convertHertzToRadPerSec</name>
        <param>
          <type>QFrequency</type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QAngularSpeed.hpp" line="29" column="1" bodyfile="include/okapi/api/units/QAngularSpeed.hpp" bodystart="29" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a42f10a655cddac477a7be71e1b296320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr QFrequency</type>
        <definition>constexpr QFrequency okapi::Hz</definition>
        <argsstring>(1.0)</argsstring>
        <name>Hz</name>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QFrequency.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a59563b3d4b18633f1c8d852e2932d1db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr QLength</type>
        <definition>constexpr QLength okapi::meter</definition>
        <argsstring>(1.0)</argsstring>
        <name>meter</name>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QLength.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1afcc67eb55c70e21f82cbee49aa19d05a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr QMass</type>
        <definition>constexpr QMass okapi::kg</definition>
        <argsstring>(1.0)</argsstring>
        <name>kg</name>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QMass.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1accda0a1a99e1aafa43e8ef14201374ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr QPressure</type>
        <definition>constexpr QPressure okapi::pascal</definition>
        <argsstring>(1.0)</argsstring>
        <name>pascal</name>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QPressure.hpp" line="24" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1ae9ece1daf9cd9f6d3a597cc5c0dc7b40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr QTime</type>
        <definition>constexpr QTime okapi::second</definition>
        <argsstring>(1.0)</argsstring>
        <name>second</name>
        <param>
          <type>1.</type>
          <declname>0</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/QTime.hpp" line="21" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a20ba46b94c486e1b70ef5cb364ffe086" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt;</type>
        <definition>constexpr RQuantity&lt;M, L, T, A&gt; okapi::operator+</definition>
        <argsstring>(const RQuantity&lt; M, L, T, A &gt; &amp;lhs, const RQuantity&lt; M, L, T, A &gt; &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="87" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1ab3362da609b98790e6301285a939545f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt;</type>
        <definition>constexpr RQuantity&lt;M, L, T, A&gt; okapi::operator-</definition>
        <argsstring>(const RQuantity&lt; M, L, T, A &gt; &amp;lhs, const RQuantity&lt; M, L, T, A &gt; &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="92" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a48bcd0bd9113d86c24325eb1003709de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M1</type>
          </param>
          <param>
            <type>typename L1</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename M2</type>
          </param>
          <param>
            <type>typename L2</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; std::ratio_add&lt; M1, M2 &gt;, std::ratio_add&lt; L1, L2 &gt;, std::ratio_add&lt; T1, T2 &gt;, std::ratio_add&lt; A1, A2 &gt; &gt;</type>
        <definition>constexpr RQuantity&lt;std::ratio_add&lt;M1, M2&gt;, std::ratio_add&lt;L1, L2&gt;, std::ratio_add&lt;T1, T2&gt;, std::ratio_add&lt;A1, A2&gt; &gt; okapi::operator *</definition>
        <argsstring>(const RQuantity&lt; M1, L1, T1, A1 &gt; &amp;lhs, const RQuantity&lt; M2, L2, T2, A2 &gt; &amp;rhs)</argsstring>
        <name>operator *</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M1, L1, T1, A1 &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M2, L2, T2, A2 &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="108" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="108" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a2ff902d0db2898d581528d1aa92f7005" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt;</type>
        <definition>constexpr RQuantity&lt;M, L, T, A&gt; okapi::operator *</definition>
        <argsstring>(const double &amp;lhs, const RQuantity&lt; M, L, T, A &gt; &amp;rhs)</argsstring>
        <name>operator *</name>
        <param>
          <type>const double &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="115" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="115" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a763b1c8386a8cb4e0cb5f1174e8d91ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt;</type>
        <definition>constexpr RQuantity&lt;M, L, T, A&gt; okapi::operator *</definition>
        <argsstring>(const RQuantity&lt; M, L, T, A &gt; &amp;lhs, const double &amp;rhs)</argsstring>
        <name>operator *</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="119" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a5b9c69030c20a9e0d0882bd4d9546597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M1</type>
          </param>
          <param>
            <type>typename L1</type>
          </param>
          <param>
            <type>typename T1</type>
          </param>
          <param>
            <type>typename A1</type>
          </param>
          <param>
            <type>typename M2</type>
          </param>
          <param>
            <type>typename L2</type>
          </param>
          <param>
            <type>typename T2</type>
          </param>
          <param>
            <type>typename A2</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; std::ratio_subtract&lt; M1, M2 &gt;, std::ratio_subtract&lt; L1, L2 &gt;, std::ratio_subtract&lt; T1, T2 &gt;, std::ratio_subtract&lt; A1, A2 &gt; &gt;</type>
        <definition>constexpr RQuantity&lt;std::ratio_subtract&lt;M1, M2&gt;, std::ratio_subtract&lt;L1, L2&gt;, std::ratio_subtract&lt;T1, T2&gt;, std::ratio_subtract&lt;A1, A2&gt; &gt; okapi::operator/</definition>
        <argsstring>(const RQuantity&lt; M1, L1, T1, A1 &gt; &amp;lhs, const RQuantity&lt; M2, L2, T2, A2 &gt; &amp;rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M1, L1, T1, A1 &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M2, L2, T2, A2 &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="134" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="134" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a531581f5f3bfed446a0925214c0e4664" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; std::ratio_subtract&lt; std::ratio&lt; 0 &gt;, M &gt;, std::ratio_subtract&lt; std::ratio&lt; 0 &gt;, L &gt;, std::ratio_subtract&lt; std::ratio&lt; 0 &gt;, T &gt;, std::ratio_subtract&lt; std::ratio&lt; 0 &gt;, A &gt; &gt;</type>
        <definition>constexpr RQuantity&lt;std::ratio_subtract&lt;std::ratio&lt;0&gt;, M&gt;, std::ratio_subtract&lt;std::ratio&lt;0&gt;, L&gt;, std::ratio_subtract&lt;std::ratio&lt;0&gt;, T&gt;, std::ratio_subtract&lt;std::ratio&lt;0&gt;, A&gt; &gt; okapi::operator/</definition>
        <argsstring>(const double &amp;x, const RQuantity&lt; M, L, T, A &gt; &amp;rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="145" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="145" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1aae60324b5422706049e94e1a7b0b96af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt;</type>
        <definition>constexpr RQuantity&lt;M, L, T, A&gt; okapi::operator/</definition>
        <argsstring>(const RQuantity&lt; M, L, T, A &gt; &amp;rhs, const double &amp;x)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <param>
          <type>const double &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="152" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="152" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a3f9de8ffeea76c6c278256cb1124ed83" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool okapi::operator==</definition>
        <argsstring>(const RQuantity&lt; M, L, T, A &gt; &amp;lhs, const RQuantity&lt; M, L, T, A &gt; &amp;rhs)</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="159" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a118add088592d8d0de817c35cff350b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool okapi::operator!=</definition>
        <argsstring>(const RQuantity&lt; M, L, T, A &gt; &amp;lhs, const RQuantity&lt; M, L, T, A &gt; &amp;rhs)</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="163" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="163" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1ae23323562f9b7d57d066a04b5de73f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool okapi::operator&lt;=</definition>
        <argsstring>(const RQuantity&lt; M, L, T, A &gt; &amp;lhs, const RQuantity&lt; M, L, T, A &gt; &amp;rhs)</argsstring>
        <name>operator&lt;=</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="167" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1ae0ea83af0f730da0cb8045e2798b14ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool okapi::operator&gt;=</definition>
        <argsstring>(const RQuantity&lt; M, L, T, A &gt; &amp;lhs, const RQuantity&lt; M, L, T, A &gt; &amp;rhs)</argsstring>
        <name>operator&gt;=</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="171" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="171" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a9f4f432db976a139cc66ab71bfbe5ca9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool okapi::operator&lt;</definition>
        <argsstring>(const RQuantity&lt; M, L, T, A &gt; &amp;lhs, const RQuantity&lt; M, L, T, A &gt; &amp;rhs)</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="175" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="175" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a6fa2a8add20e9524b5f46e98645c98f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename M</type>
          </param>
          <param>
            <type>typename L</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename A</type>
          </param>
        </templateparamlist>
        <type>constexpr bool</type>
        <definition>constexpr bool okapi::operator&gt;</definition>
        <argsstring>(const RQuantity&lt; M, L, T, A &gt; &amp;lhs, const RQuantity&lt; M, L, T, A &gt; &amp;rhs)</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classokapi_1_1RQuantity" kindref="compound">RQuantity</ref>&lt; M, L, T, A &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/units/RQuantity.hpp" line="179" column="1" bodyfile="include/okapi/api/units/RQuantity.hpp" bodystart="179" bodyend="181"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1aba6bd8fdde45445ead2bd8c3bf887fb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr double</type>
        <definition>constexpr double okapi::ipow</definition>
        <argsstring>(const double base, const int expo)</argsstring>
        <name>ipow</name>
        <param>
          <type>const double</type>
          <declname>base</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>expo</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Integer power function. Computes base^expo.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>base</parametername>
</parameternamelist>
<parameterdescription>
<para>base </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>expo</parametername>
</parameternamelist>
<parameterdescription>
<para>exponent </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>base^expo </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="47" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="47" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a9addecfa5e4788ced786601de724be03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr double</type>
        <definition>constexpr double okapi::cutRange</definition>
        <argsstring>(const double value, const double min, const double max)</argsstring>
        <name>cutRange</name>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cuts out a range from the number. The new range of the input number will be (-inf, min]U[max, +inf). If value sits equally between min and max, max will be returned.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>number to bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound of range </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>upper bound of range </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the remapped value </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="65" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="65" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a3e4d3d6ba218365ec624a70840134039" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr double</type>
        <definition>constexpr double okapi::deadband</definition>
        <argsstring>(const double value, const double min, const double max)</argsstring>
        <name>deadband</name>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>min</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deadbands a range of the number. Returns the input value, or 0 if it is in the range [min, max].</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>number to deadband </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>min</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound of deadband </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>max</parametername>
</parameternamelist>
<parameterdescription>
<para>upper bound of deadband </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>value, or 0 if it is in the range [min, max] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="85" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="85" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1aa3f2ac5be19e6749d986489c69968605" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr double</type>
        <definition>constexpr double okapi::remapRange</definition>
        <argsstring>(const double value, const double oldMin, const double oldMax, const double newMin, const double newMax)</argsstring>
        <name>remapRange</name>
        <param>
          <type>const double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>oldMin</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>oldMax</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>newMin</declname>
        </param>
        <param>
          <type>const double</type>
          <declname>newMax</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Remap a value in the range [oldMin, oldMax] to the range [newMin, newMax].</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>value in the old range </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldMin</parametername>
</parameternamelist>
<parameterdescription>
<para>old range lower bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>oldMax</parametername>
</parameternamelist>
<parameterdescription>
<para>old range upper bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newMin</parametername>
</parameternamelist>
<parameterdescription>
<para>new range lower bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newMax</parametername>
</parameternamelist>
<parameterdescription>
<para>new range upper bound </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>remapped value in the new range [newMin, newMax] </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="99" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="99" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a458b2538f443eedc4e601b2f8a9acf03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename E</type>
          </param>
        </templateparamlist>
        <type>constexpr auto</type>
        <definition>constexpr auto okapi::toUnderlyingType</definition>
        <argsstring>(const E e) noexcept</argsstring>
        <name>toUnderlyingType</name>
        <param>
          <type>const E</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts an enum to its value type. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="110" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a8b21920388594f5d7da116069741deb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr auto</type>
        <definition>constexpr auto okapi::boolToSign</definition>
        <argsstring>(const bool b) noexcept</argsstring>
        <name>boolToSign</name>
        <param>
          <type>const bool</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a bool to a sign. True corresponds to 1 and false corresponds to -1. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="117" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a32aac326b5e0f0ba82bb5dea50852504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr long</type>
        <definition>constexpr long okapi::modulus</definition>
        <argsstring>(const long lhs, const long rhs) noexcept</argsstring>
        <name>modulus</name>
        <param>
          <type>const long</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const long</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Computes lhs mod rhs using Euclidean division. C&apos;s % symbol computes the remainder, not modulus.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the left-hand side </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>the right-hand side </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>lhs mod rhs </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="128" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="128" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a771e911293fb57115a4085904bd83663" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr std::int32_t</type>
        <definition>constexpr std::int32_t okapi::gearsetToTPR</definition>
        <argsstring>(const AbstractMotor::gearset igearset) noexcept</argsstring>
        <name>gearsetToTPR</name>
        <param>
          <type>const <ref refid="classokapi_1_1AbstractMotor_1a88aaa6ea2fa10f5520a537bbf26774d5" kindref="member">AbstractMotor::gearset</ref></type>
          <declname>igearset</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Converts a gearset to its TPR.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>igearset</parametername>
</parameternamelist>
<parameterdescription>
<para>The gearset. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The TPR. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="138" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="138" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="namespaceokapi_1a9a07f99442516f34af3c1f22e26f75b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr std::int8_t</type>
        <definition>constexpr std::int8_t okapi::transformADIPort</definition>
        <argsstring>(const std::int8_t port)</argsstring>
        <name>transformADIPort</name>
        <param>
          <type>const std::int8_t</type>
          <declname>port</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Maps ADI port numbers/chars to numbers: <programlisting><codeline><highlight class="normal">when<sp/>(port)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>in<sp/>[&apos;a&apos;,<sp/>&apos;h&apos;]<sp/>-&gt;<sp/>[1,<sp/>8]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>in<sp/>[&apos;A&apos;,<sp/>&apos;H&apos;]<sp/>-&gt;<sp/>[1,<sp/>8]</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>else<sp/>-&gt;<sp/>[1,<sp/>8]</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>port</parametername>
</parameternamelist>
<parameterdescription>
<para>The ADI port number or char. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An equivalent ADI port number. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/util/mathUtil.hpp" line="164" column="1" bodyfile="include/okapi/api/util/mathUtil.hpp" bodystart="164" bodyend="172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ryan Benasutti, WPI</para>
</simplesect>
This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>.</para>
<para>Based on the Arduino PID controller: <ulink url="https://github.com/br3ttb/Arduino-PID-Library">https://github.com/br3ttb/Arduino-PID-Library</ulink></para>
<para><simplesect kind="author"><para>Ryan Benasutti, WPI</para>
</simplesect>
This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>.</para>
<para><simplesect kind="author"><para>Kevin Harrington, Common Wealth Robotics </para>
</simplesect>
<simplesect kind="author"><para>Ryan Benasutti, WPI</para>
</simplesect>
This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>.</para>
<para><simplesect kind="author"><para>Jonathan Bayless, Team BLRS </para>
</simplesect>
<simplesect kind="author"><para>Ryan Benasutti, WPI</para>
</simplesect>
This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>.</para>
<para>Uses the median filter algorithm from N. Wirth’s book, implementation by N. Devillard.</para>
<para><simplesect kind="author"><para>Ryan Benasutti, WPI</para>
</simplesect>
This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>.</para>
<para><simplesect kind="author"><para>Mikhail Semenov </para>
</simplesect>
<simplesect kind="author"><para>Benjamin Jurke </para>
</simplesect>
<simplesect kind="author"><para>Ryan Benasutti, WPI</para>
</simplesect>
This code is a modified version of Benjamin Jurke&apos;s work in 2015. You can read his blog post here: <ulink url="https://benjaminjurke.com/content/articles/2015/compile-time-numerical-unit-dimension-checking/">https://benjaminjurke.com/content/articles/2015/compile-time-numerical-unit-dimension-checking/</ulink></para>
<para>This Source Code Form is subject to the terms of the Mozilla Public License, v. 2.0. If a copy of the MPL was not distributed with this file, You can obtain one at <ulink url="http://mozilla.org/MPL/2.0/">http://mozilla.org/MPL/2.0/</ulink>. </para>
    </detaileddescription>
    <location file="include/okapi/api/chassis/controller/chassisController.hpp" line="18" column="1"/>
  </compounddef>
</doxygen>
