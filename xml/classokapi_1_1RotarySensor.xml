<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="classokapi_1_1RotarySensor" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>okapi::RotarySensor</compoundname>
    <basecompoundref refid="classokapi_1_1ControllerInput" prot="public" virt="non-virtual">okapi::ControllerInput&lt; double &gt;</basecompoundref>
    <derivedcompoundref refid="classokapi_1_1ContinuousRotarySensor" prot="public" virt="non-virtual">okapi::ContinuousRotarySensor</derivedcompoundref>
    <derivedcompoundref refid="classokapi_1_1Potentiometer" prot="public" virt="non-virtual">okapi::Potentiometer</derivedcompoundref>
    <includes refid="rotarySensor_8hpp" local="no">rotarySensor.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classokapi_1_1RotarySensor_1ad34ebb82ce8e5487a286ce95c1aad086" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>okapi::RotarySensor::~RotarySensor</definition>
        <argsstring>()</argsstring>
        <name>~RotarySensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/device/rotarysensor/rotarySensor.hpp" line="16" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classokapi_1_1RotarySensor_1ac5534dc6c3bcbd8ea2f4e54a04cda734" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>double</type>
        <definition>virtual double okapi::RotarySensor::get</definition>
        <argsstring>() const =0</argsstring>
        <name>get</name>
        <reimplementedby refid="classokapi_1_1ADIEncoder_1a1728a39cdb3e87e7c650961f34608f75">get</reimplementedby>
        <reimplementedby refid="classokapi_1_1Potentiometer_1ad81adf2cb10b830272e9a553b668fc4b">get</reimplementedby>
        <reimplementedby refid="classokapi_1_1ADIGyro_1a3a4a0a319c723091aad0b2125d701ca4">get</reimplementedby>
        <reimplementedby refid="classokapi_1_1IntegratedEncoder_1af3fe091ddf4b7f36443a5616bfedc3cb">get</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the current sensor value.</para>
<para><simplesect kind="return"><para>the current sensor value, or <computeroutput>PROS_ERR</computeroutput> on a failure. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/okapi/api/device/rotarysensor/rotarySensor.hpp" line="23" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="482">
        <label>okapi::Potentiometer</label>
        <link refid="classokapi_1_1Potentiometer"/>
        <childnode refid="476" relation="public-inheritance">
        </childnode>
      </node>
      <node id="479">
        <label>okapi::ADIEncoder</label>
        <link refid="classokapi_1_1ADIEncoder"/>
        <childnode refid="478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="480">
        <label>okapi::ADIGyro</label>
        <link refid="classokapi_1_1ADIGyro"/>
        <childnode refid="478" relation="public-inheritance">
        </childnode>
      </node>
      <node id="476">
        <label>okapi::RotarySensor</label>
        <link refid="classokapi_1_1RotarySensor"/>
        <childnode refid="477" relation="public-inheritance">
        </childnode>
      </node>
      <node id="478">
        <label>okapi::ContinuousRotarySensor</label>
        <link refid="classokapi_1_1ContinuousRotarySensor"/>
        <childnode refid="476" relation="public-inheritance">
        </childnode>
      </node>
      <node id="477">
        <label>okapi::ControllerInput&lt; double &gt;</label>
        <link refid="classokapi_1_1ControllerInput"/>
      </node>
      <node id="481">
        <label>okapi::IntegratedEncoder</label>
        <link refid="classokapi_1_1IntegratedEncoder"/>
        <childnode refid="478" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="483">
        <label>okapi::RotarySensor</label>
        <link refid="classokapi_1_1RotarySensor"/>
        <childnode refid="484" relation="public-inheritance">
        </childnode>
      </node>
      <node id="484">
        <label>okapi::ControllerInput&lt; double &gt;</label>
        <link refid="classokapi_1_1ControllerInput"/>
      </node>
    </collaborationgraph>
    <location file="include/okapi/api/device/rotarysensor/rotarySensor.hpp" line="14" column="1" bodyfile="include/okapi/api/device/rotarysensor/rotarySensor.hpp" bodystart="14" bodyend="24"/>
    <listofallmembers>
      <member refid="classokapi_1_1ControllerInput_1a3c6c86d897983f367928a93890551e17" prot="public" virt="pure-virtual"><scope>okapi::RotarySensor</scope><name>controllerGet</name></member>
      <member refid="classokapi_1_1RotarySensor_1ac5534dc6c3bcbd8ea2f4e54a04cda734" prot="public" virt="pure-virtual"><scope>okapi::RotarySensor</scope><name>get</name></member>
      <member refid="classokapi_1_1RotarySensor_1ad34ebb82ce8e5487a286ce95c1aad086" prot="public" virt="virtual"><scope>okapi::RotarySensor</scope><name>~RotarySensor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
