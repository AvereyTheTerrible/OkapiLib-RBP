<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.15">
  <compounddef id="md_docs_tutorials_walkthrough_asyncAutonomousMovement" kind="page">
    <compoundname>md_docs_tutorials_walkthrough_asyncAutonomousMovement</compoundname>
    <title>Asynchronous Autonomous Movement</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Oftentimes the fastest way to move in autonomous involves actuating multiple subsystems at once (i.e. driving and raising/lowering a lift). This is made possible with Async Controllers.</para>
<para>To create a <ref refid="classokapi_1_1ChassisController" kindref="compound">ChassisController</ref> for a given system, modify the below example to fit your subsystem.</para>
<para><programlisting filename=".cpp"><codeline><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceokapi" kindref="compound">okapi</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRIVE_MOTOR_LEFT<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRIVE_MOTOR_RIGHT<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>driveController<sp/>=<sp/><ref refid="classokapi_1_1ChassisControllerBuilder" kindref="compound">ChassisControllerBuilder</ref>()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1ChassisControllerBuilder_1a1ceb7c4b4f0ccfd37a92d8ffd64fa64e" kindref="member">withMotors</ref>(DRIVE_MOTOR_LEFT,<sp/>-DRIVE_MOTOR_RIGHT)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1ChassisControllerBuilder_1a5dfd1f4d60a3c4bfcc28a57211c1a6a2" kindref="member">build</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>autonomous()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>And then we&apos;ll add a lift subsystem as an Async Controller:</para>
<para><programlisting filename=".cpp"><codeline><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceokapi" kindref="compound">okapi</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRIVE_MOTOR_LEFT<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRIVE_MOTOR_RIGHT<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>liftkP<sp/>=<sp/>0.001;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>liftkI<sp/>=<sp/>0.0001;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>liftkD<sp/>=<sp/>0.0001;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LIFT_MOTOR<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>driveController<sp/>=<sp/><ref refid="classokapi_1_1ChassisControllerBuilder" kindref="compound">ChassisControllerBuilder</ref>()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1ChassisControllerBuilder_1a1ceb7c4b4f0ccfd37a92d8ffd64fa64e" kindref="member">withMotors</ref>(DRIVE_MOTOR_LEFT,<sp/>-DRIVE_MOTOR_RIGHT)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1ChassisControllerBuilder_1a5dfd1f4d60a3c4bfcc28a57211c1a6a2" kindref="member">build</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>liftController<sp/>=<sp/><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref>()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1AsyncPosControllerBuilder_1afe930ec31b591b6b2bf80be12bba3d79" kindref="member">withMotor</ref>(LIFT_MOTOR)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1AsyncPosControllerBuilder_1a4ac4afe101f6e49150d5f285ccd02e50" kindref="member">withGains</ref>({liftkP,<sp/>liftkI,<sp/>liftkD})</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.build();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>autonomous()<sp/>{</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>Now that we have two subsystems to run, let&apos;s execute a few different movements. If we want both systems to move, and the next movement in the autonomous routine only depends on the drive completing its movement (and it doesn&apos;t care about the lift&apos;s status), we&apos;ll run <ref refid="classokapi_1_1ChassisController_1a01ed4e0eb7332cc149228387bbf1e91c" kindref="member">waitUntilSettled()</ref> with just the drive controller.</para>
<para><programlisting filename=".cpp"><codeline><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceokapi" kindref="compound">okapi</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRIVE_MOTOR_LEFT<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRIVE_MOTOR_RIGHT<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>liftkP<sp/>=<sp/>0.001;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>liftkI<sp/>=<sp/>0.0001;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>liftkD<sp/>=<sp/>0.0001;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LIFT_MOTOR<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>driveController<sp/>=<sp/><ref refid="classokapi_1_1ChassisControllerBuilder" kindref="compound">ChassisControllerBuilder</ref>()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1ChassisControllerBuilder_1a1ceb7c4b4f0ccfd37a92d8ffd64fa64e" kindref="member">withMotors</ref>(DRIVE_MOTOR_LEFT,<sp/>-DRIVE_MOTOR_RIGHT)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1ChassisControllerBuilder_1a5dfd1f4d60a3c4bfcc28a57211c1a6a2" kindref="member">build</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>liftController<sp/>=<sp/><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref>()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1AsyncPosControllerBuilder_1afe930ec31b591b6b2bf80be12bba3d79" kindref="member">withMotor</ref>(LIFT_MOTOR)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1AsyncPosControllerBuilder_1a4ac4afe101f6e49150d5f285ccd02e50" kindref="member">withGains</ref>({liftkP,<sp/>liftkI,<sp/>liftkD})</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.build();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>autonomous()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Begin<sp/>movements</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>driveController-&gt;moveDistanceAsync(1000);<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>1000<sp/>motor<sp/>degrees<sp/>forward</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>liftController-&gt;setTarget(200);<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>200<sp/>motor<sp/>degrees<sp/>upward</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>driveController-&gt;waitUntilSettled();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>the<sp/>next<sp/>movement<sp/>will<sp/>execute<sp/>after<sp/>the<sp/>drive<sp/>movement<sp/>finishes</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para>If blocking the next movement with regard only to the lift is desired, swap <computeroutput>driveController</computeroutput> for <computeroutput>liftController</computeroutput> in the last line. If both movements need to finish before executing the next movement, then call <ref refid="classokapi_1_1ChassisController_1a01ed4e0eb7332cc149228387bbf1e91c" kindref="member">waitUntilSettled()</ref> on both controllers.</para>
<para><programlisting filename=".cpp"><codeline><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceokapi" kindref="compound">okapi</ref>;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRIVE_MOTOR_LEFT<sp/>=<sp/>1;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DRIVE_MOTOR_RIGHT<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>liftkP<sp/>=<sp/>0.001;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>liftkI<sp/>=<sp/>0.0001;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>liftkD<sp/>=<sp/>0.0001;</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>LIFT_MOTOR<sp/>=<sp/>2;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>driveController<sp/>=<sp/><ref refid="classokapi_1_1ChassisControllerBuilder" kindref="compound">ChassisControllerBuilder</ref>()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1ChassisControllerBuilder_1a1ceb7c4b4f0ccfd37a92d8ffd64fa64e" kindref="member">withMotors</ref>(DRIVE_MOTOR_LEFT,<sp/>-DRIVE_MOTOR_RIGHT)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1ChassisControllerBuilder_1a5dfd1f4d60a3c4bfcc28a57211c1a6a2" kindref="member">build</ref>();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>liftController<sp/>=<sp/><ref refid="classokapi_1_1AsyncPosControllerBuilder" kindref="compound">AsyncPosControllerBuilder</ref>()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1AsyncPosControllerBuilder_1afe930ec31b591b6b2bf80be12bba3d79" kindref="member">withMotor</ref>(LIFT_MOTOR)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.<ref refid="classokapi_1_1AsyncPosControllerBuilder_1a4ac4afe101f6e49150d5f285ccd02e50" kindref="member">withGains</ref>({liftkP,<sp/>liftkI,<sp/>liftkD})</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.build();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>autonomous()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Begin<sp/>movements</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>driveController-&gt;moveDistanceAsync(1000);<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>1000<sp/>motor<sp/>degrees<sp/>forward</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>liftController-&gt;setTarget(200);<sp/></highlight><highlight class="comment">//<sp/>Move<sp/>200<sp/>motor<sp/>degrees<sp/>upward</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>driveController-&gt;waitUntilSettled();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>liftController-&gt;waitUntilSettled();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>the<sp/>next<sp/>movement<sp/>will<sp/>execute<sp/>after<sp/>both<sp/>movements<sp/>finish</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting> </para>
    </detaileddescription>
  </compounddef>
</doxygen>
